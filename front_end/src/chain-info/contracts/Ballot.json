{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string[]",
          "name": "proposalNames",
          "type": "string[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "string[]",
          "name": "newProposalNames",
          "type": "string[]"
        }
      ],
      "name": "addProposals",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ballotIsEnded",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ballotIsOpen",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "chairperson",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "closeBallot",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "concludeBallot",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getLength",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "numOfProposals_",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_proposal",
          "type": "uint256"
        }
      ],
      "name": "getName",
      "outputs": [
        {
          "internalType": "string",
          "name": "proposalName_",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getResults",
      "outputs": [
        {
          "internalType": "string",
          "name": "winner_",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "winningVoteCount_",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_proposal",
          "type": "uint256"
        }
      ],
      "name": "getVotes",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "proposalVotes_",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_voter",
          "type": "address"
        }
      ],
      "name": "giveRightToVote",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "openBallot",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "proposals",
      "outputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "voteCount",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_vote",
          "type": "uint256"
        }
      ],
      "name": "vote",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "voters",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "voteNo",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "voted",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "weight",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "/Users/jim/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.1/contracts/access/Ownable.sol",
    "1": "/Users/jim/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.1/contracts/utils/Context.sol",
    "2": "contracts/Ballot.sol"
  },
  "ast": {
    "absolutePath": "contracts/Ballot.sol",
    "exportedSymbols": {
      "Ballot": [
        373
      ],
      "Context": [
        500
      ],
      "Ownable": [
        478
      ]
    },
    "id": 374,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          ">=",
          "0.7",
          ".0",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:31:2"
      },
      {
        "id": 2,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "64:33:2"
      },
      {
        "absolutePath": "/Users/jim/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.1/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 3,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 374,
        "sourceUnit": 479,
        "src": "99:52:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 4,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 478,
              "src": "172:7:2"
            },
            "id": 5,
            "nodeType": "InheritanceSpecifier",
            "src": "172:7:2"
          }
        ],
        "canonicalName": "Ballot",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 373,
        "linearizedBaseContracts": [
          373,
          478,
          500
        ],
        "name": "Ballot",
        "nameLocation": "162:6:2",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "Ballot.Proposal",
            "id": 10,
            "members": [
              {
                "constant": false,
                "id": 7,
                "mutability": "mutable",
                "name": "name",
                "nameLocation": "285:4:2",
                "nodeType": "VariableDeclaration",
                "scope": 10,
                "src": "278:11:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 6,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "278:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 9,
                "mutability": "mutable",
                "name": "voteCount",
                "nameLocation": "307:9:2",
                "nodeType": "VariableDeclaration",
                "scope": 10,
                "src": "299:17:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 8,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "299:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Proposal",
            "nameLocation": "259:8:2",
            "nodeType": "StructDefinition",
            "scope": 373,
            "src": "252:71:2",
            "visibility": "public"
          },
          {
            "canonicalName": "Ballot.Voter",
            "id": 17,
            "members": [
              {
                "constant": false,
                "id": 12,
                "mutability": "mutable",
                "name": "voteNo",
                "nameLocation": "439:6:2",
                "nodeType": "VariableDeclaration",
                "scope": 17,
                "src": "431:14:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 11,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "431:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 14,
                "mutability": "mutable",
                "name": "voted",
                "nameLocation": "460:5:2",
                "nodeType": "VariableDeclaration",
                "scope": 17,
                "src": "455:10:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 13,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "455:4:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 16,
                "mutability": "mutable",
                "name": "weight",
                "nameLocation": "483:6:2",
                "nodeType": "VariableDeclaration",
                "scope": 17,
                "src": "475:14:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 15,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "475:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Voter",
            "nameLocation": "415:5:2",
            "nodeType": "StructDefinition",
            "scope": 373,
            "src": "408:88:2",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "3d86d374",
            "id": 19,
            "mutability": "mutable",
            "name": "ballotIsOpen",
            "nameLocation": "514:12:2",
            "nodeType": "VariableDeclaration",
            "scope": 373,
            "src": "502:24:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 18,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "502:4:2",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "8d221729",
            "id": 22,
            "mutability": "mutable",
            "name": "ballotIsEnded",
            "nameLocation": "544:13:2",
            "nodeType": "VariableDeclaration",
            "scope": 373,
            "src": "532:33:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 20,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "532:4:2",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": {
              "hexValue": "66616c7365",
              "id": 21,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "bool",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "560:5:2",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              },
              "value": "false"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "013cf08b",
            "id": 26,
            "mutability": "mutable",
            "name": "proposals",
            "nameLocation": "589:9:2",
            "nodeType": "VariableDeclaration",
            "scope": 373,
            "src": "571:27:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_Proposal_$10_storage_$dyn_storage",
              "typeString": "struct Ballot.Proposal[]"
            },
            "typeName": {
              "baseType": {
                "id": 24,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 23,
                  "name": "Proposal",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 10,
                  "src": "571:8:2"
                },
                "referencedDeclaration": 10,
                "src": "571:8:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Proposal_$10_storage_ptr",
                  "typeString": "struct Ballot.Proposal"
                }
              },
              "id": 25,
              "nodeType": "ArrayTypeName",
              "src": "571:10:2",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_Proposal_$10_storage_$dyn_storage_ptr",
                "typeString": "struct Ballot.Proposal[]"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "a3ec138d",
            "id": 31,
            "mutability": "mutable",
            "name": "voters",
            "nameLocation": "659:6:2",
            "nodeType": "VariableDeclaration",
            "scope": 373,
            "src": "626:39:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$17_storage_$",
              "typeString": "mapping(address => struct Ballot.Voter)"
            },
            "typeName": {
              "id": 30,
              "keyType": {
                "id": 27,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "634:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "626:25:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$17_storage_$",
                "typeString": "mapping(address => struct Ballot.Voter)"
              },
              "valueType": {
                "id": 29,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 28,
                  "name": "Voter",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 17,
                  "src": "645:5:2"
                },
                "referencedDeclaration": 17,
                "src": "645:5:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Voter_$17_storage_ptr",
                  "typeString": "struct Ballot.Voter"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "2e4176cf",
            "id": 33,
            "mutability": "mutable",
            "name": "chairperson",
            "nameLocation": "722:11:2",
            "nodeType": "VariableDeclaration",
            "scope": 373,
            "src": "707:26:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 32,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "707:7:2",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 79,
              "nodeType": "Block",
              "src": "868:295:2",
              "statements": [
                {
                  "expression": {
                    "id": 41,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 39,
                      "name": "ballotIsOpen",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19,
                      "src": "878:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 40,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "893:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "878:19:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 42,
                  "nodeType": "ExpressionStatement",
                  "src": "878:19:2"
                },
                {
                  "expression": {
                    "id": 46,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 43,
                      "name": "chairperson",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33,
                      "src": "907:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 44,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "921:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 45,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "921:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "907:24:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 47,
                  "nodeType": "ExpressionStatement",
                  "src": "907:24:2"
                },
                {
                  "expression": {
                    "id": 53,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 48,
                          "name": "voters",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 31,
                          "src": "941:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$17_storage_$",
                            "typeString": "mapping(address => struct Ballot.Voter storage ref)"
                          }
                        },
                        "id": 50,
                        "indexExpression": {
                          "id": 49,
                          "name": "chairperson",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 33,
                          "src": "948:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "941:19:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Voter_$17_storage",
                          "typeString": "struct Ballot.Voter storage ref"
                        }
                      },
                      "id": 51,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "weight",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 16,
                      "src": "941:26:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 52,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "970:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "941:30:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 54,
                  "nodeType": "ExpressionStatement",
                  "src": "941:30:2"
                },
                {
                  "body": {
                    "id": 77,
                    "nodeType": "Block",
                    "src": "1068:89:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "baseExpression": {
                                    "id": 70,
                                    "name": "proposalNames",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 36,
                                    "src": "1113:13:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                                      "typeString": "string memory[] memory"
                                    }
                                  },
                                  "id": 72,
                                  "indexExpression": {
                                    "id": 71,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 56,
                                    "src": "1127:1:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "1113:16:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                },
                                {
                                  "hexValue": "30",
                                  "id": 73,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1142:1:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  },
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 69,
                                "name": "Proposal",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10,
                                "src": "1097:8:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_struct$_Proposal_$10_storage_ptr_$",
                                  "typeString": "type(struct Ballot.Proposal storage pointer)"
                                }
                              },
                              "id": 74,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "structConstructorCall",
                              "lValueRequested": false,
                              "names": [
                                "name",
                                "voteCount"
                              ],
                              "nodeType": "FunctionCall",
                              "src": "1097:48:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Proposal_$10_memory_ptr",
                                "typeString": "struct Ballot.Proposal memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_Proposal_$10_memory_ptr",
                                "typeString": "struct Ballot.Proposal memory"
                              }
                            ],
                            "expression": {
                              "id": 66,
                              "name": "proposals",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 26,
                              "src": "1082:9:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Proposal_$10_storage_$dyn_storage",
                                "typeString": "struct Ballot.Proposal storage ref[] storage ref"
                              }
                            },
                            "id": 68,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "1082:14:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Proposal_$10_storage_$dyn_storage_ptr_$_t_struct$_Proposal_$10_storage_$returns$__$bound_to$_t_array$_t_struct$_Proposal_$10_storage_$dyn_storage_ptr_$",
                              "typeString": "function (struct Ballot.Proposal storage ref[] storage pointer,struct Ballot.Proposal storage ref)"
                            }
                          },
                          "id": 75,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1082:64:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 76,
                        "nodeType": "ExpressionStatement",
                        "src": "1082:64:2"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 62,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 59,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 56,
                      "src": "1037:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 60,
                        "name": "proposalNames",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36,
                        "src": "1041:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                          "typeString": "string memory[] memory"
                        }
                      },
                      "id": 61,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "1041:20:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1037:24:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 78,
                  "initializationExpression": {
                    "assignments": [
                      56
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 56,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "1030:1:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 78,
                        "src": "1022:9:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 55,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1022:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 58,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 57,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1034:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "1022:13:2"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 64,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "1063:3:2",
                      "subExpression": {
                        "id": 63,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 56,
                        "src": "1063:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 65,
                    "nodeType": "ExpressionStatement",
                    "src": "1063:3:2"
                  },
                  "nodeType": "ForStatement",
                  "src": "1017:140:2"
                }
              ]
            },
            "id": 80,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 37,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 36,
                  "mutability": "mutable",
                  "name": "proposalNames",
                  "nameLocation": "853:13:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 80,
                  "src": "837:29:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                    "typeString": "string[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 34,
                      "name": "string",
                      "nodeType": "ElementaryTypeName",
                      "src": "837:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      }
                    },
                    "id": 35,
                    "nodeType": "ArrayTypeName",
                    "src": "837:8:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                      "typeString": "string[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "836:31:2"
            },
            "returnParameters": {
              "id": 38,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "868:0:2"
            },
            "scope": 373,
            "src": "825:338:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 119,
              "nodeType": "Block",
              "src": "1285:240:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 91,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 89,
                          "name": "ballotIsEnded",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 22,
                          "src": "1303:13:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "66616c7365",
                          "id": 90,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1320:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "1303:22:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546869732062616c6c6f742068617320616c726561647920636f6e636c75646564",
                        "id": 92,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1327:35:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_abaf371c01f6e3e9037a3e4a6a109d87d6dfd390a671edff84af2892f8390b86",
                          "typeString": "literal_string \"This ballot has already concluded\""
                        },
                        "value": "This ballot has already concluded"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_abaf371c01f6e3e9037a3e4a6a109d87d6dfd390a671edff84af2892f8390b86",
                          "typeString": "literal_string \"This ballot has already concluded\""
                        }
                      ],
                      "id": 88,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1295:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 93,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1295:68:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 94,
                  "nodeType": "ExpressionStatement",
                  "src": "1295:68:2"
                },
                {
                  "body": {
                    "id": 117,
                    "nodeType": "Block",
                    "src": "1427:92:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "baseExpression": {
                                    "id": 110,
                                    "name": "newProposalNames",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 83,
                                    "src": "1472:16:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                                      "typeString": "string memory[] memory"
                                    }
                                  },
                                  "id": 112,
                                  "indexExpression": {
                                    "id": 111,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 96,
                                    "src": "1489:1:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "1472:19:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                },
                                {
                                  "hexValue": "30",
                                  "id": 113,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1504:1:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  },
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 109,
                                "name": "Proposal",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10,
                                "src": "1456:8:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_struct$_Proposal_$10_storage_ptr_$",
                                  "typeString": "type(struct Ballot.Proposal storage pointer)"
                                }
                              },
                              "id": 114,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "structConstructorCall",
                              "lValueRequested": false,
                              "names": [
                                "name",
                                "voteCount"
                              ],
                              "nodeType": "FunctionCall",
                              "src": "1456:51:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Proposal_$10_memory_ptr",
                                "typeString": "struct Ballot.Proposal memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_Proposal_$10_memory_ptr",
                                "typeString": "struct Ballot.Proposal memory"
                              }
                            ],
                            "expression": {
                              "id": 106,
                              "name": "proposals",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 26,
                              "src": "1441:9:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Proposal_$10_storage_$dyn_storage",
                                "typeString": "struct Ballot.Proposal storage ref[] storage ref"
                              }
                            },
                            "id": 108,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "1441:14:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Proposal_$10_storage_$dyn_storage_ptr_$_t_struct$_Proposal_$10_storage_$returns$__$bound_to$_t_array$_t_struct$_Proposal_$10_storage_$dyn_storage_ptr_$",
                              "typeString": "function (struct Ballot.Proposal storage ref[] storage pointer,struct Ballot.Proposal storage ref)"
                            }
                          },
                          "id": 115,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1441:67:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 116,
                        "nodeType": "ExpressionStatement",
                        "src": "1441:67:2"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 102,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 99,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 96,
                      "src": "1393:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 100,
                        "name": "newProposalNames",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 83,
                        "src": "1397:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                          "typeString": "string memory[] memory"
                        }
                      },
                      "id": 101,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "1397:23:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1393:27:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 118,
                  "initializationExpression": {
                    "assignments": [
                      96
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 96,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "1386:1:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 118,
                        "src": "1378:9:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 95,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1378:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 98,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 97,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1390:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "1378:13:2"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 104,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "1422:3:2",
                      "subExpression": {
                        "id": 103,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 96,
                        "src": "1422:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 105,
                    "nodeType": "ExpressionStatement",
                    "src": "1422:3:2"
                  },
                  "nodeType": "ForStatement",
                  "src": "1373:146:2"
                }
              ]
            },
            "functionSelector": "03879e7c",
            "id": 120,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 86,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 85,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 420,
                  "src": "1275:9:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "1275:9:2"
              }
            ],
            "name": "addProposals",
            "nameLocation": "1221:12:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 84,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 83,
                  "mutability": "mutable",
                  "name": "newProposalNames",
                  "nameLocation": "1250:16:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 120,
                  "src": "1234:32:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                    "typeString": "string[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 81,
                      "name": "string",
                      "nodeType": "ElementaryTypeName",
                      "src": "1234:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      }
                    },
                    "id": 82,
                    "nodeType": "ArrayTypeName",
                    "src": "1234:8:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                      "typeString": "string[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1233:34:2"
            },
            "returnParameters": {
              "id": 87,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1285:0:2"
            },
            "scope": 373,
            "src": "1212:313:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 187,
              "nodeType": "Block",
              "src": "2382:550:2",
              "statements": [
                {
                  "assignments": [
                    127
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 127,
                      "mutability": "mutable",
                      "name": "sender",
                      "nameLocation": "2406:6:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 187,
                      "src": "2392:20:2",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Voter_$17_storage_ptr",
                        "typeString": "struct Ballot.Voter"
                      },
                      "typeName": {
                        "id": 126,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 125,
                          "name": "Voter",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 17,
                          "src": "2392:5:2"
                        },
                        "referencedDeclaration": 17,
                        "src": "2392:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Voter_$17_storage_ptr",
                          "typeString": "struct Ballot.Voter"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 132,
                  "initialValue": {
                    "baseExpression": {
                      "id": 128,
                      "name": "voters",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 31,
                      "src": "2415:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$17_storage_$",
                        "typeString": "mapping(address => struct Ballot.Voter storage ref)"
                      }
                    },
                    "id": 131,
                    "indexExpression": {
                      "expression": {
                        "id": 129,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "2422:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 130,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "2422:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2415:18:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Voter_$17_storage",
                      "typeString": "struct Ballot.Voter storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2392:41:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 137,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 134,
                          "name": "_vote",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 122,
                          "src": "2513:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "expression": {
                            "id": 135,
                            "name": "proposals",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 26,
                            "src": "2522:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Proposal_$10_storage_$dyn_storage",
                              "typeString": "struct Ballot.Proposal storage ref[] storage ref"
                            }
                          },
                          "id": 136,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "2522:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2513:25:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "696e76616c696420656e747279",
                        "id": 138,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2540:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2eb93353714c8d6f0919713b1344c5e92cdc6a3937d8dda2ed3e8a1de3b34e8b",
                          "typeString": "literal_string \"invalid entry\""
                        },
                        "value": "invalid entry"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2eb93353714c8d6f0919713b1344c5e92cdc6a3937d8dda2ed3e8a1de3b34e8b",
                          "typeString": "literal_string \"invalid entry\""
                        }
                      ],
                      "id": 133,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2505:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 139,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2505:51:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 140,
                  "nodeType": "ExpressionStatement",
                  "src": "2505:51:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 142,
                        "name": "ballotIsOpen",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19,
                        "src": "2574:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "62616c6c6f742069732063757272656e746c7920636c6f736564",
                        "id": 143,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2588:28:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0cbca9dd0976b458c9710f27419015bf30b4a5386f06ef1b1f3ef98d369e631a",
                          "typeString": "literal_string \"ballot is currently closed\""
                        },
                        "value": "ballot is currently closed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0cbca9dd0976b458c9710f27419015bf30b4a5386f06ef1b1f3ef98d369e631a",
                          "typeString": "literal_string \"ballot is currently closed\""
                        }
                      ],
                      "id": 141,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2566:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 144,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2566:51:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 145,
                  "nodeType": "ExpressionStatement",
                  "src": "2566:51:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 148,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "2635:14:2",
                        "subExpression": {
                          "id": 147,
                          "name": "ballotIsEnded",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 22,
                          "src": "2636:13:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "62616c6c6f742068617320616c726561647920636f6e636c75646564",
                        "id": 149,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2651:30:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d4037467abf07153600da5ba57a36799e661e64d7a5a9b4bffcf6016b9417ce3",
                          "typeString": "literal_string \"ballot has already concluded\""
                        },
                        "value": "ballot has already concluded"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d4037467abf07153600da5ba57a36799e661e64d7a5a9b4bffcf6016b9417ce3",
                          "typeString": "literal_string \"ballot has already concluded\""
                        }
                      ],
                      "id": 146,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2627:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 150,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2627:55:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 151,
                  "nodeType": "ExpressionStatement",
                  "src": "2627:55:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 155,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "2700:13:2",
                        "subExpression": {
                          "expression": {
                            "id": 153,
                            "name": "sender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 127,
                            "src": "2701:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Voter_$17_storage_ptr",
                              "typeString": "struct Ballot.Voter storage pointer"
                            }
                          },
                          "id": 154,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "voted",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 14,
                          "src": "2701:12:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "616464726573732068617320616c726561647920766f74656421",
                        "id": 156,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2715:28:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_cf95de9fbe9f65b45719f3da39d8fea497d641bb17e5ae7d5e4bd0c6b5492684",
                          "typeString": "literal_string \"address has already voted!\""
                        },
                        "value": "address has already voted!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_cf95de9fbe9f65b45719f3da39d8fea497d641bb17e5ae7d5e4bd0c6b5492684",
                          "typeString": "literal_string \"address has already voted!\""
                        }
                      ],
                      "id": 152,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2692:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 157,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2692:52:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 158,
                  "nodeType": "ExpressionStatement",
                  "src": "2692:52:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 163,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 160,
                            "name": "sender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 127,
                            "src": "2762:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Voter_$17_storage_ptr",
                              "typeString": "struct Ballot.Voter storage pointer"
                            }
                          },
                          "id": 161,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "weight",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 16,
                          "src": "2762:13:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 162,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2778:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2762:17:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "61646472657373206e6f7420617070726f76656420746f20766f746521",
                        "id": 164,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2781:31:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9f74ed06c2ca9b97b6bb6f86649b74acf4c13ea21193d1b2015705425ec67430",
                          "typeString": "literal_string \"address not approved to vote!\""
                        },
                        "value": "address not approved to vote!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9f74ed06c2ca9b97b6bb6f86649b74acf4c13ea21193d1b2015705425ec67430",
                          "typeString": "literal_string \"address not approved to vote!\""
                        }
                      ],
                      "id": 159,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2754:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 165,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2754:59:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 166,
                  "nodeType": "ExpressionStatement",
                  "src": "2754:59:2"
                },
                {
                  "expression": {
                    "id": 173,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 167,
                          "name": "proposals",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 26,
                          "src": "2824:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Proposal_$10_storage_$dyn_storage",
                            "typeString": "struct Ballot.Proposal storage ref[] storage ref"
                          }
                        },
                        "id": 169,
                        "indexExpression": {
                          "id": 168,
                          "name": "_vote",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 122,
                          "src": "2834:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2824:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Proposal_$10_storage",
                          "typeString": "struct Ballot.Proposal storage ref"
                        }
                      },
                      "id": 170,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "voteCount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9,
                      "src": "2824:26:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "expression": {
                        "id": 171,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 127,
                        "src": "2854:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Voter_$17_storage_ptr",
                          "typeString": "struct Ballot.Voter storage pointer"
                        }
                      },
                      "id": 172,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "weight",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 16,
                      "src": "2854:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2824:43:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 174,
                  "nodeType": "ExpressionStatement",
                  "src": "2824:43:2"
                },
                {
                  "expression": {
                    "id": 179,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 175,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 127,
                        "src": "2878:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Voter_$17_storage_ptr",
                          "typeString": "struct Ballot.Voter storage pointer"
                        }
                      },
                      "id": 177,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "voted",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14,
                      "src": "2878:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 178,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2893:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "2878:19:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 180,
                  "nodeType": "ExpressionStatement",
                  "src": "2878:19:2"
                },
                {
                  "expression": {
                    "id": 185,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 181,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 127,
                        "src": "2907:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Voter_$17_storage_ptr",
                          "typeString": "struct Ballot.Voter storage pointer"
                        }
                      },
                      "id": 183,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "voteNo",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12,
                      "src": "2907:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 184,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2924:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "2907:18:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 186,
                  "nodeType": "ExpressionStatement",
                  "src": "2907:18:2"
                }
              ]
            },
            "functionSelector": "0121b93f",
            "id": 188,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "vote",
            "nameLocation": "2355:4:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 123,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 122,
                  "mutability": "mutable",
                  "name": "_vote",
                  "nameLocation": "2368:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 188,
                  "src": "2360:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 121,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2360:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2359:15:2"
            },
            "returnParameters": {
              "id": 124,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2382:0:2"
            },
            "scope": 373,
            "src": "2346:586:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 227,
              "nodeType": "Block",
              "src": "3018:257:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 197,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "3036:14:2",
                        "subExpression": {
                          "id": 196,
                          "name": "ballotIsEnded",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 22,
                          "src": "3037:13:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "62616c6c6f742068617320616c726561647920636f6e636c75646564",
                        "id": 198,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3052:30:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d4037467abf07153600da5ba57a36799e661e64d7a5a9b4bffcf6016b9417ce3",
                          "typeString": "literal_string \"ballot has already concluded\""
                        },
                        "value": "ballot has already concluded"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d4037467abf07153600da5ba57a36799e661e64d7a5a9b4bffcf6016b9417ce3",
                          "typeString": "literal_string \"ballot has already concluded\""
                        }
                      ],
                      "id": 195,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3028:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 199,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3028:55:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 200,
                  "nodeType": "ExpressionStatement",
                  "src": "3028:55:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 207,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 202,
                              "name": "voters",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31,
                              "src": "3101:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$17_storage_$",
                                "typeString": "mapping(address => struct Ballot.Voter storage ref)"
                              }
                            },
                            "id": 204,
                            "indexExpression": {
                              "id": 203,
                              "name": "_voter",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 190,
                              "src": "3108:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3101:14:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Voter_$17_storage",
                              "typeString": "struct Ballot.Voter storage ref"
                            }
                          },
                          "id": 205,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "weight",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 16,
                          "src": "3101:21:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 206,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3126:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3101:26:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "766f74657220616c72656164792068617320726967687420746f20766f746521",
                        "id": 208,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3129:34:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b3f9ed5357580a74488932e613785f3f08d14e72cda1602bcbc9a919984d5cfe",
                          "typeString": "literal_string \"voter already has right to vote!\""
                        },
                        "value": "voter already has right to vote!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b3f9ed5357580a74488932e613785f3f08d14e72cda1602bcbc9a919984d5cfe",
                          "typeString": "literal_string \"voter already has right to vote!\""
                        }
                      ],
                      "id": 201,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3093:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 209,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3093:71:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 210,
                  "nodeType": "ExpressionStatement",
                  "src": "3093:71:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 216,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "3182:21:2",
                        "subExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 212,
                              "name": "voters",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31,
                              "src": "3183:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$17_storage_$",
                                "typeString": "mapping(address => struct Ballot.Voter storage ref)"
                              }
                            },
                            "id": 214,
                            "indexExpression": {
                              "id": 213,
                              "name": "_voter",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 190,
                              "src": "3190:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3183:14:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Voter_$17_storage",
                              "typeString": "struct Ballot.Voter storage ref"
                            }
                          },
                          "id": 215,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "voted",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 14,
                          "src": "3183:20:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "766f7465722068617320616c726561647920766f74656421",
                        "id": 217,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3205:26:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b378a8b58257b9b301d3b31d11bad7b41497d24739ee851c49ff69f1c817757b",
                          "typeString": "literal_string \"voter has already voted!\""
                        },
                        "value": "voter has already voted!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b378a8b58257b9b301d3b31d11bad7b41497d24739ee851c49ff69f1c817757b",
                          "typeString": "literal_string \"voter has already voted!\""
                        }
                      ],
                      "id": 211,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3174:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 218,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3174:58:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 219,
                  "nodeType": "ExpressionStatement",
                  "src": "3174:58:2"
                },
                {
                  "expression": {
                    "id": 225,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 220,
                          "name": "voters",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 31,
                          "src": "3243:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$17_storage_$",
                            "typeString": "mapping(address => struct Ballot.Voter storage ref)"
                          }
                        },
                        "id": 222,
                        "indexExpression": {
                          "id": 221,
                          "name": "_voter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 190,
                          "src": "3250:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3243:14:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Voter_$17_storage",
                          "typeString": "struct Ballot.Voter storage ref"
                        }
                      },
                      "id": 223,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "weight",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 16,
                      "src": "3243:21:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 224,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3267:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "3243:25:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 226,
                  "nodeType": "ExpressionStatement",
                  "src": "3243:25:2"
                }
              ]
            },
            "functionSelector": "9e7b8d61",
            "id": 228,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 193,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 192,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 420,
                  "src": "3008:9:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "3008:9:2"
              }
            ],
            "name": "giveRightToVote",
            "nameLocation": "2969:15:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 191,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 190,
                  "mutability": "mutable",
                  "name": "_voter",
                  "nameLocation": "2993:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 228,
                  "src": "2985:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 189,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2985:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2984:16:2"
            },
            "returnParameters": {
              "id": 194,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3018:0:2"
            },
            "scope": 373,
            "src": "2960:315:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 240,
              "nodeType": "Block",
              "src": "3419:54:2",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "baseExpression": {
                        "id": 235,
                        "name": "proposals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26,
                        "src": "3436:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Proposal_$10_storage_$dyn_storage",
                          "typeString": "struct Ballot.Proposal storage ref[] storage ref"
                        }
                      },
                      "id": 237,
                      "indexExpression": {
                        "id": 236,
                        "name": "_proposal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 230,
                        "src": "3446:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "3436:20:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Proposal_$10_storage",
                        "typeString": "struct Ballot.Proposal storage ref"
                      }
                    },
                    "id": 238,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "voteCount",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 9,
                    "src": "3436:30:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 234,
                  "id": 239,
                  "nodeType": "Return",
                  "src": "3429:37:2"
                }
              ]
            },
            "functionSelector": "ff981099",
            "id": 241,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getVotes",
            "nameLocation": "3318:8:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 231,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 230,
                  "mutability": "mutable",
                  "name": "_proposal",
                  "nameLocation": "3335:9:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 241,
                  "src": "3327:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 229,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3327:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3326:19:2"
            },
            "returnParameters": {
              "id": 234,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 233,
                  "mutability": "mutable",
                  "name": "proposalVotes_",
                  "nameLocation": "3399:14:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 241,
                  "src": "3391:22:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 232,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3391:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3390:24:2"
            },
            "scope": 373,
            "src": "3309:164:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 253,
              "nodeType": "Block",
              "src": "3628:49:2",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "baseExpression": {
                        "id": 248,
                        "name": "proposals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26,
                        "src": "3645:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Proposal_$10_storage_$dyn_storage",
                          "typeString": "struct Ballot.Proposal storage ref[] storage ref"
                        }
                      },
                      "id": 250,
                      "indexExpression": {
                        "id": 249,
                        "name": "_proposal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 243,
                        "src": "3655:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "3645:20:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Proposal_$10_storage",
                        "typeString": "struct Ballot.Proposal storage ref"
                      }
                    },
                    "id": 251,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "name",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 7,
                    "src": "3645:25:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 247,
                  "id": 252,
                  "nodeType": "Return",
                  "src": "3638:32:2"
                }
              ]
            },
            "functionSelector": "6b8ff574",
            "id": 254,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getName",
            "nameLocation": "3523:7:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 244,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 243,
                  "mutability": "mutable",
                  "name": "_proposal",
                  "nameLocation": "3539:9:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 254,
                  "src": "3531:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 242,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3531:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3530:19:2"
            },
            "returnParameters": {
              "id": 247,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 246,
                  "mutability": "mutable",
                  "name": "proposalName_",
                  "nameLocation": "3609:13:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 254,
                  "src": "3595:27:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 245,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3595:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3594:29:2"
            },
            "scope": 373,
            "src": "3514:163:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 262,
              "nodeType": "Block",
              "src": "3785:40:2",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "id": 259,
                      "name": "proposals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26,
                      "src": "3802:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Proposal_$10_storage_$dyn_storage",
                        "typeString": "struct Ballot.Proposal storage ref[] storage ref"
                      }
                    },
                    "id": 260,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "3802:16:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 258,
                  "id": 261,
                  "nodeType": "Return",
                  "src": "3795:23:2"
                }
              ]
            },
            "functionSelector": "be1c766b",
            "id": 263,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getLength",
            "nameLocation": "3727:9:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 255,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3736:2:2"
            },
            "returnParameters": {
              "id": 258,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 257,
                  "mutability": "mutable",
                  "name": "numOfProposals_",
                  "nameLocation": "3768:15:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 263,
                  "src": "3760:23:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 256,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3760:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3759:25:2"
            },
            "scope": 373,
            "src": "3718:107:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 276,
              "nodeType": "Block",
              "src": "3908:67:2",
              "statements": [
                {
                  "expression": {
                    "id": 270,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 268,
                      "name": "ballotIsOpen",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19,
                      "src": "3918:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 269,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3933:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "3918:20:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 271,
                  "nodeType": "ExpressionStatement",
                  "src": "3918:20:2"
                },
                {
                  "expression": {
                    "id": 274,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 272,
                      "name": "ballotIsEnded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22,
                      "src": "3948:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 273,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3964:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "3948:20:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 275,
                  "nodeType": "ExpressionStatement",
                  "src": "3948:20:2"
                }
              ]
            },
            "functionSelector": "a0d62821",
            "id": 277,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 266,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 265,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 420,
                  "src": "3898:9:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "3898:9:2"
              }
            ],
            "name": "concludeBallot",
            "nameLocation": "3874:14:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 264,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3888:2:2"
            },
            "returnParameters": {
              "id": 267,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3908:0:2"
            },
            "scope": 373,
            "src": "3865:110:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 337,
              "nodeType": "Block",
              "src": "4102:386:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 287,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 285,
                          "name": "ballotIsEnded",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 22,
                          "src": "4120:13:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "74727565",
                          "id": 286,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4137:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "4120:21:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "62616c6c6f74206973207374696c6c206f70656e2e",
                        "id": 288,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4143:23:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b6c61d64d76e9771508914d76174e13f74e7a26d09ef8d9b77e33dd9f9bfaf6a",
                          "typeString": "literal_string \"ballot is still open.\""
                        },
                        "value": "ballot is still open."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b6c61d64d76e9771508914d76174e13f74e7a26d09ef8d9b77e33dd9f9bfaf6a",
                          "typeString": "literal_string \"ballot is still open.\""
                        }
                      ],
                      "id": 284,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4112:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 289,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4112:55:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 290,
                  "nodeType": "ExpressionStatement",
                  "src": "4112:55:2"
                },
                {
                  "assignments": [
                    292
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 292,
                      "mutability": "mutable",
                      "name": "winner",
                      "nameLocation": "4192:6:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 337,
                      "src": "4178:20:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 291,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "4178:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 293,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4178:20:2"
                },
                {
                  "assignments": [
                    295
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 295,
                      "mutability": "mutable",
                      "name": "votes",
                      "nameLocation": "4216:5:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 337,
                      "src": "4208:13:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 294,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4208:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 297,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 296,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4224:1:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4208:17:2"
                },
                {
                  "body": {
                    "id": 331,
                    "nodeType": "Block",
                    "src": "4283:167:2",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 314,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 309,
                                "name": "proposals",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 26,
                                "src": "4301:9:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_Proposal_$10_storage_$dyn_storage",
                                  "typeString": "struct Ballot.Proposal storage ref[] storage ref"
                                }
                              },
                              "id": 311,
                              "indexExpression": {
                                "id": 310,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 299,
                                "src": "4311:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4301:12:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Proposal_$10_storage",
                                "typeString": "struct Ballot.Proposal storage ref"
                              }
                            },
                            "id": 312,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "voteCount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 9,
                            "src": "4301:22:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "id": 313,
                            "name": "votes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 295,
                            "src": "4326:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4301:30:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 330,
                        "nodeType": "IfStatement",
                        "src": "4297:143:2",
                        "trueBody": {
                          "id": 329,
                          "nodeType": "Block",
                          "src": "4333:107:2",
                          "statements": [
                            {
                              "expression": {
                                "id": 320,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 315,
                                  "name": "votes",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 295,
                                  "src": "4351:5:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 316,
                                      "name": "proposals",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 26,
                                      "src": "4359:9:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_Proposal_$10_storage_$dyn_storage",
                                        "typeString": "struct Ballot.Proposal storage ref[] storage ref"
                                      }
                                    },
                                    "id": 318,
                                    "indexExpression": {
                                      "id": 317,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 299,
                                      "src": "4369:1:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "4359:12:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Proposal_$10_storage",
                                      "typeString": "struct Ballot.Proposal storage ref"
                                    }
                                  },
                                  "id": 319,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "voteCount",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 9,
                                  "src": "4359:22:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "4351:30:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 321,
                              "nodeType": "ExpressionStatement",
                              "src": "4351:30:2"
                            },
                            {
                              "expression": {
                                "id": 327,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 322,
                                  "name": "winner",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 292,
                                  "src": "4399:6:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 323,
                                      "name": "proposals",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 26,
                                      "src": "4408:9:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_Proposal_$10_storage_$dyn_storage",
                                        "typeString": "struct Ballot.Proposal storage ref[] storage ref"
                                      }
                                    },
                                    "id": 325,
                                    "indexExpression": {
                                      "id": 324,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 299,
                                      "src": "4418:1:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "4408:12:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Proposal_$10_storage",
                                      "typeString": "struct Ballot.Proposal storage ref"
                                    }
                                  },
                                  "id": 326,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "name",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 7,
                                  "src": "4408:17:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_storage",
                                    "typeString": "string storage ref"
                                  }
                                },
                                "src": "4399:26:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              },
                              "id": 328,
                              "nodeType": "ExpressionStatement",
                              "src": "4399:26:2"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 305,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 302,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 299,
                      "src": "4256:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 303,
                        "name": "proposals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26,
                        "src": "4260:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Proposal_$10_storage_$dyn_storage",
                          "typeString": "struct Ballot.Proposal storage ref[] storage ref"
                        }
                      },
                      "id": 304,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "4260:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4256:20:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 332,
                  "initializationExpression": {
                    "assignments": [
                      299
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 299,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "4249:1:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 332,
                        "src": "4241:9:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 298,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4241:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 301,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 300,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4253:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "4241:13:2"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 307,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "4278:3:2",
                      "subExpression": {
                        "id": 306,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 299,
                        "src": "4278:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 308,
                    "nodeType": "ExpressionStatement",
                    "src": "4278:3:2"
                  },
                  "nodeType": "ForStatement",
                  "src": "4236:214:2"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "id": 333,
                        "name": "winner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 292,
                        "src": "4467:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 334,
                        "name": "votes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 295,
                        "src": "4475:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 335,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "4466:15:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_string_memory_ptr_$_t_uint256_$",
                      "typeString": "tuple(string memory,uint256)"
                    }
                  },
                  "functionReturnParameters": 283,
                  "id": 336,
                  "nodeType": "Return",
                  "src": "4459:22:2"
                }
              ]
            },
            "functionSelector": "4717f97c",
            "id": 338,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getResults",
            "nameLocation": "3990:10:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 278,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4000:2:2"
            },
            "returnParameters": {
              "id": 283,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 280,
                  "mutability": "mutable",
                  "name": "winner_",
                  "nameLocation": "4062:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 338,
                  "src": "4048:21:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 279,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4048:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 282,
                  "mutability": "mutable",
                  "name": "winningVoteCount_",
                  "nameLocation": "4079:17:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 338,
                  "src": "4071:25:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 281,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4071:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4047:50:2"
            },
            "scope": 373,
            "src": "3981:507:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 354,
              "nodeType": "Block",
              "src": "4609:114:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 346,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 344,
                          "name": "ballotIsEnded",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 22,
                          "src": "4627:13:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "66616c7365",
                          "id": 345,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4644:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "4627:22:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546869732062616c6c6f742068617320616c726561647920636f6e636c75646564",
                        "id": 347,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4651:35:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_abaf371c01f6e3e9037a3e4a6a109d87d6dfd390a671edff84af2892f8390b86",
                          "typeString": "literal_string \"This ballot has already concluded\""
                        },
                        "value": "This ballot has already concluded"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_abaf371c01f6e3e9037a3e4a6a109d87d6dfd390a671edff84af2892f8390b86",
                          "typeString": "literal_string \"This ballot has already concluded\""
                        }
                      ],
                      "id": 343,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4619:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 348,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4619:68:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 349,
                  "nodeType": "ExpressionStatement",
                  "src": "4619:68:2"
                },
                {
                  "expression": {
                    "id": 352,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 350,
                      "name": "ballotIsOpen",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19,
                      "src": "4697:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 351,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4712:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "4697:19:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 353,
                  "nodeType": "ExpressionStatement",
                  "src": "4697:19:2"
                }
              ]
            },
            "functionSelector": "4d0013ac",
            "id": 355,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 341,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 340,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 420,
                  "src": "4599:9:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "4599:9:2"
              }
            ],
            "name": "openBallot",
            "nameLocation": "4579:10:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 339,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4589:2:2"
            },
            "returnParameters": {
              "id": 342,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4609:0:2"
            },
            "scope": 373,
            "src": "4570:153:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 371,
              "nodeType": "Block",
              "src": "4788:110:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 363,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 361,
                          "name": "ballotIsEnded",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 22,
                          "src": "4806:13:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "66616c7365",
                          "id": 362,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4823:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "4806:22:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "62616c6c6f742068617320616c726561647920636f6e636c75646564",
                        "id": 364,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4830:30:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d4037467abf07153600da5ba57a36799e661e64d7a5a9b4bffcf6016b9417ce3",
                          "typeString": "literal_string \"ballot has already concluded\""
                        },
                        "value": "ballot has already concluded"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d4037467abf07153600da5ba57a36799e661e64d7a5a9b4bffcf6016b9417ce3",
                          "typeString": "literal_string \"ballot has already concluded\""
                        }
                      ],
                      "id": 360,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4798:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 365,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4798:63:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 366,
                  "nodeType": "ExpressionStatement",
                  "src": "4798:63:2"
                },
                {
                  "expression": {
                    "id": 369,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 367,
                      "name": "ballotIsOpen",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19,
                      "src": "4871:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 368,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4886:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "4871:20:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 370,
                  "nodeType": "ExpressionStatement",
                  "src": "4871:20:2"
                }
              ]
            },
            "functionSelector": "a97b8b4d",
            "id": 372,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 358,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 357,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 420,
                  "src": "4778:9:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "4778:9:2"
              }
            ],
            "name": "closeBallot",
            "nameLocation": "4757:11:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 356,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4768:2:2"
            },
            "returnParameters": {
              "id": 359,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4788:0:2"
            },
            "scope": 373,
            "src": "4748:150:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 374,
        "src": "153:4747:2",
        "usedErrors": []
      }
    ],
    "src": "32:5511:2"
  },
  "bytecode": "",
  "bytecodeSha1": "765c664159f8aaaea3318bdf146f82556eda94a3",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.12+commit.f00d7308"
  },
  "contractName": "Ballot",
  "coverageMap": {
    "branches": {
      "0": {
        "Ownable.transferOwnership": {
          "49": [
            2006,
            2028,
            true
          ]
        }
      },
      "1": {},
      "2": {
        "Ballot.addProposals": {
          "41": [
            1303,
            1325,
            true
          ]
        },
        "Ballot.closeBallot": {
          "48": [
            4806,
            4828,
            true
          ]
        },
        "Ballot.getResults": {
          "42": [
            4120,
            4141,
            true
          ],
          "43": [
            4301,
            4331,
            false
          ]
        },
        "Ballot.giveRightToVote": {
          "45": [
            3036,
            3050,
            true
          ],
          "46": [
            3101,
            3127,
            true
          ],
          "47": [
            3182,
            3203,
            true
          ]
        },
        "Ballot.openBallot": {
          "44": [
            4627,
            4649,
            true
          ]
        },
        "Ballot.vote": {
          "36": [
            2513,
            2538,
            true
          ],
          "37": [
            2574,
            2586,
            true
          ],
          "38": [
            2635,
            2649,
            true
          ],
          "39": [
            2700,
            2713,
            true
          ],
          "40": [
            2762,
            2779,
            true
          ]
        }
      }
    },
    "statements": {
      "0": {
        "Ownable._transferOwnership": {
          "34": [
            2378,
            2395
          ],
          "35": [
            2405,
            2450
          ]
        },
        "Ownable.owner": {
          "0": [
            1101,
            1114
          ]
        },
        "Ownable.renounceOwnership": {
          "22": [
            1732,
            1762
          ]
        },
        "Ownable.transferOwnership": {
          "31": [
            1998,
            2071
          ],
          "32": [
            2081,
            2109
          ]
        }
      },
      "1": {
        "Context._msgSender": {
          "10": [
            712,
            729
          ]
        }
      },
      "2": {
        "Ballot.addProposals": {
          "11": [
            1295,
            1363
          ],
          "12": [
            1441,
            1508
          ],
          "13": [
            1422,
            1425
          ]
        },
        "Ballot.closeBallot": {
          "29": [
            4798,
            4861
          ],
          "30": [
            4871,
            4891
          ]
        },
        "Ballot.concludeBallot": {
          "27": [
            3918,
            3938
          ],
          "28": [
            3948,
            3968
          ]
        },
        "Ballot.getLength": {
          "1": [
            3795,
            3818
          ]
        },
        "Ballot.getName": {
          "21": [
            3638,
            3670
          ]
        },
        "Ballot.getResults": {
          "14": [
            4112,
            4167
          ],
          "15": [
            4351,
            4381
          ],
          "16": [
            4399,
            4425
          ],
          "17": [
            4278,
            4281
          ],
          "18": [
            4459,
            4481
          ]
        },
        "Ballot.getVotes": {
          "33": [
            3429,
            3466
          ]
        },
        "Ballot.giveRightToVote": {
          "23": [
            3028,
            3083
          ],
          "24": [
            3093,
            3164
          ],
          "25": [
            3174,
            3232
          ],
          "26": [
            3243,
            3268
          ]
        },
        "Ballot.openBallot": {
          "19": [
            4619,
            4687
          ],
          "20": [
            4697,
            4716
          ]
        },
        "Ballot.vote": {
          "2": [
            2505,
            2556
          ],
          "3": [
            2566,
            2617
          ],
          "4": [
            2627,
            2682
          ],
          "5": [
            2692,
            2744
          ],
          "6": [
            2754,
            2813
          ],
          "7": [
            2824,
            2867
          ],
          "8": [
            2878,
            2897
          ],
          "9": [
            2907,
            2925
          ]
        }
      }
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@4.4.1/Context",
    "OpenZeppelin/openzeppelin-contracts@4.4.1/Ownable"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106101165760003560e01c80638d221729116100a2578063a3ec138d11610071578063a3ec138d14610234578063a97b8b4d14610283578063be1c766b1461028b578063f2fde38b1461029d578063ff981099146102b057600080fd5b80638d221729146101f45780638da5cb5b146102085780639e7b8d6114610219578063a0d628211461022c57600080fd5b80633d86d374116100e95780633d86d374146101985780634717f97c146101bc5780634d0013ac146101c45780636b8ff574146101cc578063715018a6146101ec57600080fd5b80630121b93f1461011b578063013cf08b1461013057806303879e7c1461015a5780632e4176cf1461016d575b600080fd5b61012e610129366004610ccc565b6102c3565b005b61014361013e366004610ccc565b6104ac565b604051610151929190610d32565b60405180910390f35b61012e610168366004610d9b565b610568565b600354610180906001600160a01b031681565b6040516001600160a01b039091168152602001610151565b6000546101ac90600160a01b900460ff1681565b6040519015158152602001610151565b61014361064a565b61012e6107d7565b6101df6101da366004610ccc565b610840565b6040516101519190610eb4565b61012e6108f6565b6000546101ac90600160a81b900460ff1681565b6000546001600160a01b0316610180565b61012e610227366004610ece565b61092c565b61012e610a77565b610268610242366004610ece565b600260208190526000918252604090912080546001820154919092015460ff9091169083565b60408051938452911515602084015290820152606001610151565b61012e610ab7565b6001545b604051908152602001610151565b61012e6102ab366004610ece565b610b1a565b61028f6102be366004610ccc565b610bb5565b3360009081526002602052604090206001548211156103195760405162461bcd60e51b815260206004820152600d60248201526c696e76616c696420656e74727960981b60448201526064015b60405180910390fd5b600054600160a01b900460ff166103725760405162461bcd60e51b815260206004820152601a60248201527f62616c6c6f742069732063757272656e746c7920636c6f7365640000000000006044820152606401610310565b600054600160a81b900460ff161561039c5760405162461bcd60e51b815260040161031090610ef7565b600181015460ff16156103f15760405162461bcd60e51b815260206004820152601a60248201527f616464726573732068617320616c726561647920766f746564210000000000006044820152606401610310565b60008160020154116104455760405162461bcd60e51b815260206004820152601d60248201527f61646472657373206e6f7420617070726f76656420746f20766f7465210000006044820152606401610310565b80600201546001838154811061045d5761045d610f2e565b9060005260206000209060020201600101600082825461047d9190610f5a565b90915550506001818101805460ff191682179055815482906000906104a3908490610f5a565b90915550505050565b600181815481106104bc57600080fd5b90600052602060002090600202016000915090508060000180546104df90610f72565b80601f016020809104026020016040519081016040528092919081815260200182805461050b90610f72565b80156105585780601f1061052d57610100808354040283529160200191610558565b820191906000526020600020905b81548152906001019060200180831161053b57829003601f168201915b5050505050908060010154905082565b6000546001600160a01b031633146105925760405162461bcd60e51b815260040161031090610fad565b600054600160a81b900460ff16156105bc5760405162461bcd60e51b815260040161031090610fe2565b60005b815181101561064657600160405180604001604052808484815181106105e7576105e7610f2e565b60209081029190910181015182526000918101829052835460018101855593825290819020825180519394600202909101926106269284920190610c33565b50602082015181600101555050808061063e90611023565b9150506105bf565b5050565b606060008060159054906101000a900460ff16151560011515146106a85760405162461bcd60e51b81526020600482015260156024820152743130b63637ba1034b99039ba34b6361037b832b71760591b6044820152606401610310565b60606000805b6001548110156107cd5781600182815481106106cc576106cc610f2e565b90600052602060002090600202016001015411156107bb57600181815481106106f7576106f7610f2e565b90600052602060002090600202016001015491506001818154811061071e5761071e610f2e565b9060005260206000209060020201600001805461073a90610f72565b80601f016020809104026020016040519081016040528092919081815260200182805461076690610f72565b80156107b35780601f10610788576101008083540402835291602001916107b3565b820191906000526020600020905b81548152906001019060200180831161079657829003601f168201915b505050505092505b806107c581611023565b9150506106ae565b5090939092509050565b6000546001600160a01b031633146108015760405162461bcd60e51b815260040161031090610fad565b600054600160a81b900460ff161561082b5760405162461bcd60e51b815260040161031090610fe2565b6000805460ff60a01b1916600160a01b179055565b60606001828154811061085557610855610f2e565b9060005260206000209060020201600001805461087190610f72565b80601f016020809104026020016040519081016040528092919081815260200182805461089d90610f72565b80156108ea5780601f106108bf576101008083540402835291602001916108ea565b820191906000526020600020905b8154815290600101906020018083116108cd57829003601f168201915b50505050509050919050565b6000546001600160a01b031633146109205760405162461bcd60e51b815260040161031090610fad565b61092a6000610be3565b565b6000546001600160a01b031633146109565760405162461bcd60e51b815260040161031090610fad565b600054600160a81b900460ff16156109805760405162461bcd60e51b815260040161031090610ef7565b6001600160a01b03811660009081526002602081905260409091200154156109ea5760405162461bcd60e51b815260206004820181905260248201527f766f74657220616c72656164792068617320726967687420746f20766f7465216044820152606401610310565b6001600160a01b03811660009081526002602052604090206001015460ff1615610a565760405162461bcd60e51b815260206004820152601860248201527f766f7465722068617320616c726561647920766f7465642100000000000000006044820152606401610310565b6001600160a01b031660009081526002602081905260409091206001910155565b6000546001600160a01b03163314610aa15760405162461bcd60e51b815260040161031090610fad565b6000805461ffff60a01b1916600160a81b179055565b6000546001600160a01b03163314610ae15760405162461bcd60e51b815260040161031090610fad565b600054600160a81b900460ff1615610b0b5760405162461bcd60e51b815260040161031090610ef7565b6000805460ff60a01b19169055565b6000546001600160a01b03163314610b445760405162461bcd60e51b815260040161031090610fad565b6001600160a01b038116610ba95760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610310565b610bb281610be3565b50565b600060018281548110610bca57610bca610f2e565b9060005260206000209060020201600101549050919050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b828054610c3f90610f72565b90600052602060002090601f016020900481019282610c615760008555610ca7565b82601f10610c7a57805160ff1916838001178555610ca7565b82800160010185558215610ca7579182015b82811115610ca7578251825591602001919060010190610c8c565b50610cb3929150610cb7565b5090565b5b80821115610cb35760008155600101610cb8565b600060208284031215610cde57600080fd5b5035919050565b6000815180845260005b81811015610d0b57602081850181015186830182015201610cef565b81811115610d1d576000602083870101525b50601f01601f19169290920160200192915050565b604081526000610d456040830185610ce5565b90508260208301529392505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715610d9357610d93610d54565b604052919050565b60006020808385031215610dae57600080fd5b823567ffffffffffffffff80821115610dc657600080fd5b8185019150601f8681840112610ddb57600080fd5b823582811115610ded57610ded610d54565b8060051b610dfc868201610d6a565b918252848101860191868101908a841115610e1657600080fd5b87870192505b83831015610ea657823586811115610e345760008081fd5b8701603f81018c13610e465760008081fd5b88810135604088821115610e5c57610e5c610d54565b610e6d828901601f19168c01610d6a565b8281528e82848601011115610e825760008081fd5b828285018d83013760009281018c0192909252508352509187019190870190610e1c565b9a9950505050505050505050565b602081526000610ec76020830184610ce5565b9392505050565b600060208284031215610ee057600080fd5b81356001600160a01b0381168114610ec757600080fd5b6020808252601c908201527f62616c6c6f742068617320616c726561647920636f6e636c7564656400000000604082015260600190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60008219821115610f6d57610f6d610f44565b500190565b600181811c90821680610f8657607f821691505b60208210811415610fa757634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60208082526021908201527f546869732062616c6c6f742068617320616c726561647920636f6e636c7564656040820152601960fa1b606082015260800190565b600060001982141561103757611037610f44565b506001019056fea2646970667358221220db548f4984ac495c125e6dfc1b134df276b935c2e0b059ad0798452b70a61bca64736f6c634300080c0033",
  "deployedSourceMap": "153:4747:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2346:586;;;;;;:::i;:::-;;:::i;:::-;;571:27;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;1212:313;;;;;;:::i;:::-;;:::i;707:26::-;;;;;-1:-1:-1;;;;;707:26:2;;;;;;-1:-1:-1;;;;;3351:32:3;;;3333:51;;3321:2;3306:18;707:26:2;3187:203:3;502:24:2;;;;;-1:-1:-1;;;502:24:2;;;;;;;;;3560:14:3;;3553:22;3535:41;;3523:2;3508:18;502:24:2;3395:187:3;3981:507:2;;;:::i;4570:153::-;;;:::i;3514:163::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1668:101:0:-;;;:::i;532:33:2:-;;;;;-1:-1:-1;;;532:33:2;;;;;;1036:85:0;1082:7;1108:6;-1:-1:-1;;;;;1108:6:0;1036:85;;2960:315:2;;;;;;:::i;:::-;;:::i;3865:110::-;;;:::i;626:39::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4299:25:3;;;4367:14;;4360:22;4355:2;4340:18;;4333:50;4399:18;;;4392:34;4287:2;4272:18;626:39:2;4103:329:3;4748:150:2;;;:::i;3718:107::-;3802:9;:16;3718:107;;;4583:25:3;;;4571:2;4556:18;3718:107:2;4437:177:3;1918:198:0;;;;;;:::i;:::-;;:::i;3309:164:2:-;;;;;;:::i;:::-;;:::i;2346:586::-;2422:10;2392:20;2415:18;;;:6;:18;;;;;2522:9;:16;2513:25;;;2505:51;;;;-1:-1:-1;;;2505:51:2;;4821:2:3;2505:51:2;;;4803:21:3;4860:2;4840:18;;;4833:30;-1:-1:-1;;;4879:18:3;;;4872:43;4932:18;;2505:51:2;;;;;;;;;2574:12;;-1:-1:-1;;;2574:12:2;;;;2566:51;;;;-1:-1:-1;;;2566:51:2;;5163:2:3;2566:51:2;;;5145:21:3;5202:2;5182:18;;;5175:30;5241:28;5221:18;;;5214:56;5287:18;;2566:51:2;4961:350:3;2566:51:2;2636:13;;-1:-1:-1;;;2636:13:2;;;;2635:14;2627:55;;;;-1:-1:-1;;;2627:55:2;;;;;;;:::i;:::-;2701:12;;;;;;2700:13;2692:52;;;;-1:-1:-1;;;2692:52:2;;5875:2:3;2692:52:2;;;5857:21:3;5914:2;5894:18;;;5887:30;5953:28;5933:18;;;5926:56;5999:18;;2692:52:2;5673:350:3;2692:52:2;2778:1;2762:6;:13;;;:17;2754:59;;;;-1:-1:-1;;;2754:59:2;;6230:2:3;2754:59:2;;;6212:21:3;6269:2;6249:18;;;6242:30;6308:31;6288:18;;;6281:59;6357:18;;2754:59:2;6028:353:3;2754:59:2;2854:6;:13;;;2824:9;2834:5;2824:16;;;;;;;;:::i;:::-;;;;;;;;;;;:26;;;:43;;;;;;;:::i;:::-;;;;-1:-1:-1;;2893:4:2;2878:12;;;:19;;-1:-1:-1;;2878:19:2;;;;;2907:18;;2878:6;;:12;;2907:18;;2893:4;;2907:18;:::i;:::-;;;;-1:-1:-1;;;;2346:586:2:o;571:27::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1212:313::-;1082:7:0;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:1;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;1303:13:2::1;::::0;-1:-1:-1;;;1303:13:2;::::1;;;:22;1295:68;;;;-1:-1:-1::0;;;1295:68:2::1;;;;;;;:::i;:::-;1378:9;1373:146;1397:16;:23;1393:1;:27;1373:146;;;1441:9;1456:51;;;;;;;;1472:16;1489:1;1472:19;;;;;;;;:::i;:::-;;::::0;;::::1;::::0;;;;;;;1456:51;;1504:1:::1;1456:51:::0;;::::1;::::0;;;1441:67;;::::1;::::0;::::1;::::0;;;;;;;;;;;;;;;::::1;;::::0;;::::1;::::0;::::1;::::0;;;::::1;::::0;::::1;:::i;:::-;;;;;;;;;;;;1422:3;;;;;:::i;:::-;;;;1373:146;;;;1212:313:::0;:::o;3981:507::-;4048:21;4071:25;4120:13;;;;;;;;;;;:21;;4137:4;4120:21;;;4112:55;;;;-1:-1:-1;;;4112:55:2;;8273:2:3;4112:55:2;;;8255:21:3;8312:2;8292:18;;;8285:30;-1:-1:-1;;;8331:18:3;;;8324:51;8392:18;;4112:55:2;8071:345:3;4112:55:2;4178:20;4208:13;4241:9;4236:214;4260:9;:16;4256:20;;4236:214;;;4326:5;4301:9;4311:1;4301:12;;;;;;;;:::i;:::-;;;;;;;;;;;:22;;;:30;4297:143;;;4359:9;4369:1;4359:12;;;;;;;;:::i;:::-;;;;;;;;;;;:22;;;4351:30;;4408:9;4418:1;4408:12;;;;;;;;:::i;:::-;;;;;;;;;;;:17;;4399:26;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4297:143;4278:3;;;;:::i;:::-;;;;4236:214;;;-1:-1:-1;4467:6:2;;4475:5;;-1:-1:-1;3981:507:2;-1:-1:-1;3981:507:2:o;4570:153::-;1082:7:0;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:1;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;4627:13:2::1;::::0;-1:-1:-1;;;4627:13:2;::::1;;;:22;4619:68;;;;-1:-1:-1::0;;;4619:68:2::1;;;;;;;:::i;:::-;4697:12;:19:::0;;-1:-1:-1;;;;4697:19:2::1;-1:-1:-1::0;;;4697:19:2::1;::::0;;4570:153::o;3514:163::-;3595:27;3645:9;3655;3645:20;;;;;;;;:::i;:::-;;;;;;;;;;;:25;;3638:32;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3514:163;;;:::o;1668:101:0:-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:1;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;1732:30:::1;1759:1;1732:18;:30::i;:::-;1668:101::o:0;2960:315:2:-;1082:7:0;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:1;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;3037:13:2::1;::::0;-1:-1:-1;;;3037:13:2;::::1;;;3036:14;3028:55;;;;-1:-1:-1::0;;;3028:55:2::1;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;3101:14:2;::::1;;::::0;;;:6:::1;:14;::::0;;;;;;;:21:::1;::::0;:26;3093:71:::1;;;::::0;-1:-1:-1;;;3093:71:2;;8623:2:3;3093:71:2::1;::::0;::::1;8605:21:3::0;;;8642:18;;;8635:30;8701:34;8681:18;;;8674:62;8753:18;;3093:71:2::1;8421:356:3::0;3093:71:2::1;-1:-1:-1::0;;;;;3183:14:2;::::1;;::::0;;;:6:::1;:14;::::0;;;;:20:::1;;::::0;::::1;;3182:21;3174:58;;;::::0;-1:-1:-1;;;3174:58:2;;8984:2:3;3174:58:2::1;::::0;::::1;8966:21:3::0;9023:2;9003:18;;;8996:30;9062:26;9042:18;;;9035:54;9106:18;;3174:58:2::1;8782:348:3::0;3174:58:2::1;-1:-1:-1::0;;;;;3243:14:2::1;;::::0;;;:6:::1;:14;::::0;;;;;;;3267:1:::1;3243:21:::0;::::1;:25:::0;2960:315::o;3865:110::-;1082:7:0;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:1;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;3933:5:2::1;3918:20:::0;;-1:-1:-1;;;;3948:20:2;-1:-1:-1;;;3948:20:2::1;::::0;;3865:110::o;4748:150::-;1082:7:0;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:1;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;4806:13:2::1;::::0;-1:-1:-1;;;4806:13:2;::::1;;;:22;4798:63;;;;-1:-1:-1::0;;;4798:63:2::1;;;;;;;:::i;:::-;4886:5;4871:20:::0;;-1:-1:-1;;;;4871:20:2::1;::::0;;4748:150::o;1918:198:0:-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:1;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;2006:22:0;::::1;1998:73;;;::::0;-1:-1:-1;;;1998:73:0;;9337:2:3;1998:73:0::1;::::0;::::1;9319:21:3::0;9376:2;9356:18;;;9349:30;9415:34;9395:18;;;9388:62;-1:-1:-1;;;9466:18:3;;;9459:36;9512:19;;1998:73:0::1;9135:402:3::0;1998:73:0::1;2081:28;2100:8;2081:18;:28::i;:::-;1918:198:::0;:::o;3309:164:2:-;3391:22;3436:9;3446;3436:20;;;;;;;;:::i;:::-;;;;;;;;;;;:30;;;3429:37;;3309:164;;;:::o;2270:187:0:-;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:0;;;-1:-1:-1;;;;;;2378:17:0;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2333:124;2270:187;:::o;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:180:3;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:3;;14:180;-1:-1:-1;14:180:3:o;199:472::-;241:3;279:5;273:12;306:6;301:3;294:19;331:1;341:162;355:6;352:1;349:13;341:162;;;417:4;473:13;;;469:22;;463:29;445:11;;;441:20;;434:59;370:12;341:162;;;521:6;518:1;515:13;512:87;;;587:1;580:4;571:6;566:3;562:16;558:27;551:38;512:87;-1:-1:-1;653:2:3;632:15;-1:-1:-1;;628:29:3;619:39;;;;660:4;615:50;;199:472;-1:-1:-1;;199:472:3:o;676:291::-;853:2;842:9;835:21;816:4;873:45;914:2;903:9;899:18;891:6;873:45;:::i;:::-;865:53;;954:6;949:2;938:9;934:18;927:34;676:291;;;;;:::o;972:127::-;1033:10;1028:3;1024:20;1021:1;1014:31;1064:4;1061:1;1054:15;1088:4;1085:1;1078:15;1104:275;1175:2;1169:9;1240:2;1221:13;;-1:-1:-1;;1217:27:3;1205:40;;1275:18;1260:34;;1296:22;;;1257:62;1254:88;;;1322:18;;:::i;:::-;1358:2;1351:22;1104:275;;-1:-1:-1;1104:275:3:o;1384:1798::-;1478:6;1509:2;1552;1540:9;1531:7;1527:23;1523:32;1520:52;;;1568:1;1565;1558:12;1520:52;1608:9;1595:23;1637:18;1678:2;1670:6;1667:14;1664:34;;;1694:1;1691;1684:12;1664:34;1732:6;1721:9;1717:22;1707:32;;1758:4;1798:7;1793:2;1789;1785:11;1781:25;1771:53;;1820:1;1817;1810:12;1771:53;1856:2;1843:16;1878:2;1874;1871:10;1868:36;;;1884:18;;:::i;:::-;1930:2;1927:1;1923:10;1953:28;1977:2;1973;1969:11;1953:28;:::i;:::-;2015:15;;;2085:11;;;2081:20;;;2046:12;;;;2113:19;;;2110:39;;;2145:1;2142;2135:12;2110:39;2177:2;2173;2169:11;2158:22;;2189:963;2205:6;2200:3;2197:15;2189:963;;;2291:3;2278:17;2327:2;2314:11;2311:19;2308:109;;;2371:1;2400:2;2396;2389:14;2308:109;2440:20;;2495:2;2487:11;;2483:25;-1:-1:-1;2473:123:3;;2550:1;2579:2;2575;2568:14;2473:123;2641:2;2637;2633:11;2620:25;2669:2;2695;2690:3;2687:11;2684:37;;;2701:18;;:::i;:::-;2747:52;2771:12;;;-1:-1:-1;;2767:26:3;2763:35;;2747:52;:::i;:::-;2826:3;2819:5;2812:18;2873:7;2867:3;2861;2857:2;2853:12;2849:22;2846:35;2843:128;;;2923:1;2953:3;2948;2941:16;2843:128;3027:3;3021;3017:2;3013:12;3008:2;3001:5;2997:14;2984:47;3077:1;3055:15;;;3051:24;;3044:35;;;;-1:-1:-1;3092:18:3;;-1:-1:-1;2222:12:3;;;;3130;;;;2189:963;;;3171:5;1384:1798;-1:-1:-1;;;;;;;;;;1384:1798:3:o;3587:220::-;3736:2;3725:9;3718:21;3699:4;3756:45;3797:2;3786:9;3782:18;3774:6;3756:45;:::i;:::-;3748:53;3587:220;-1:-1:-1;;;3587:220:3:o;3812:286::-;3871:6;3924:2;3912:9;3903:7;3899:23;3895:32;3892:52;;;3940:1;3937;3930:12;3892:52;3966:23;;-1:-1:-1;;;;;4018:31:3;;4008:42;;3998:70;;4064:1;4061;4054:12;5316:352;5518:2;5500:21;;;5557:2;5537:18;;;5530:30;5596;5591:2;5576:18;;5569:58;5659:2;5644:18;;5316:352::o;6386:127::-;6447:10;6442:3;6438:20;6435:1;6428:31;6478:4;6475:1;6468:15;6502:4;6499:1;6492:15;6518:127;6579:10;6574:3;6570:20;6567:1;6560:31;6610:4;6607:1;6600:15;6634:4;6631:1;6624:15;6650:128;6690:3;6721:1;6717:6;6714:1;6711:13;6708:39;;;6727:18;;:::i;:::-;-1:-1:-1;6763:9:3;;6650:128::o;6783:380::-;6862:1;6858:12;;;;6905;;;6926:61;;6980:4;6972:6;6968:17;6958:27;;6926:61;7033:2;7025:6;7022:14;7002:18;6999:38;6996:161;;;7079:10;7074:3;7070:20;7067:1;7060:31;7114:4;7111:1;7104:15;7142:4;7139:1;7132:15;6996:161;;6783:380;;;:::o;7168:356::-;7370:2;7352:21;;;7389:18;;;7382:30;7448:34;7443:2;7428:18;;7421:62;7515:2;7500:18;;7168:356::o;7529:397::-;7731:2;7713:21;;;7770:2;7750:18;;;7743:30;7809:34;7804:2;7789:18;;7782:62;-1:-1:-1;;;7875:2:3;7860:18;;7853:31;7916:3;7901:19;;7529:397::o;7931:135::-;7970:3;-1:-1:-1;;7991:17:3;;7988:43;;;8011:18;;:::i;:::-;-1:-1:-1;8058:1:3;8047:13;;7931:135::o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "offset": [
    153,
    4900
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x116 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8D221729 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xA3EC138D GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xA3EC138D EQ PUSH2 0x234 JUMPI DUP1 PUSH4 0xA97B8B4D EQ PUSH2 0x283 JUMPI DUP1 PUSH4 0xBE1C766B EQ PUSH2 0x28B JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x29D JUMPI DUP1 PUSH4 0xFF981099 EQ PUSH2 0x2B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8D221729 EQ PUSH2 0x1F4 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x208 JUMPI DUP1 PUSH4 0x9E7B8D61 EQ PUSH2 0x219 JUMPI DUP1 PUSH4 0xA0D62821 EQ PUSH2 0x22C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3D86D374 GT PUSH2 0xE9 JUMPI DUP1 PUSH4 0x3D86D374 EQ PUSH2 0x198 JUMPI DUP1 PUSH4 0x4717F97C EQ PUSH2 0x1BC JUMPI DUP1 PUSH4 0x4D0013AC EQ PUSH2 0x1C4 JUMPI DUP1 PUSH4 0x6B8FF574 EQ PUSH2 0x1CC JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x121B93F EQ PUSH2 0x11B JUMPI DUP1 PUSH4 0x13CF08B EQ PUSH2 0x130 JUMPI DUP1 PUSH4 0x3879E7C EQ PUSH2 0x15A JUMPI DUP1 PUSH4 0x2E4176CF EQ PUSH2 0x16D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x12E PUSH2 0x129 CALLDATASIZE PUSH1 0x4 PUSH2 0xCCC JUMP JUMPDEST PUSH2 0x2C3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x143 PUSH2 0x13E CALLDATASIZE PUSH1 0x4 PUSH2 0xCCC JUMP JUMPDEST PUSH2 0x4AC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x151 SWAP3 SWAP2 SWAP1 PUSH2 0xD32 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x12E PUSH2 0x168 CALLDATASIZE PUSH1 0x4 PUSH2 0xD9B JUMP JUMPDEST PUSH2 0x568 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x180 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x151 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x1AC SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x151 JUMP JUMPDEST PUSH2 0x143 PUSH2 0x64A JUMP JUMPDEST PUSH2 0x12E PUSH2 0x7D7 JUMP JUMPDEST PUSH2 0x1DF PUSH2 0x1DA CALLDATASIZE PUSH1 0x4 PUSH2 0xCCC JUMP JUMPDEST PUSH2 0x840 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x151 SWAP2 SWAP1 PUSH2 0xEB4 JUMP JUMPDEST PUSH2 0x12E PUSH2 0x8F6 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x1AC SWAP1 PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x180 JUMP JUMPDEST PUSH2 0x12E PUSH2 0x227 CALLDATASIZE PUSH1 0x4 PUSH2 0xECE JUMP JUMPDEST PUSH2 0x92C JUMP JUMPDEST PUSH2 0x12E PUSH2 0xA77 JUMP JUMPDEST PUSH2 0x268 PUSH2 0x242 CALLDATASIZE PUSH1 0x4 PUSH2 0xECE JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD SWAP2 SWAP1 SWAP3 ADD SLOAD PUSH1 0xFF SWAP1 SWAP2 AND SWAP1 DUP4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE SWAP2 ISZERO ISZERO PUSH1 0x20 DUP5 ADD MSTORE SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0x151 JUMP JUMPDEST PUSH2 0x12E PUSH2 0xAB7 JUMP JUMPDEST PUSH1 0x1 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x151 JUMP JUMPDEST PUSH2 0x12E PUSH2 0x2AB CALLDATASIZE PUSH1 0x4 PUSH2 0xECE JUMP JUMPDEST PUSH2 0xB1A JUMP JUMPDEST PUSH2 0x28F PUSH2 0x2BE CALLDATASIZE PUSH1 0x4 PUSH2 0xCCC JUMP JUMPDEST PUSH2 0xBB5 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 SLOAD DUP3 GT ISZERO PUSH2 0x319 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x696E76616C696420656E747279 PUSH1 0x98 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x372 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x62616C6C6F742069732063757272656E746C7920636C6F736564000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x310 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x39C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x310 SWAP1 PUSH2 0xEF7 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x3F1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x616464726573732068617320616C726561647920766F74656421000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x310 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x2 ADD SLOAD GT PUSH2 0x445 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x61646472657373206E6F7420617070726F76656420746F20766F746521000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x310 JUMP JUMPDEST DUP1 PUSH1 0x2 ADD SLOAD PUSH1 0x1 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x45D JUMPI PUSH2 0x45D PUSH2 0xF2E JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x47D SWAP2 SWAP1 PUSH2 0xF5A JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 DUP2 DUP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND DUP3 OR SWAP1 SSTORE DUP2 SLOAD DUP3 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0x4A3 SWAP1 DUP5 SWAP1 PUSH2 0xF5A JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x4BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD DUP1 SLOAD PUSH2 0x4DF SWAP1 PUSH2 0xF72 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x50B SWAP1 PUSH2 0xF72 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x558 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x52D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x558 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x53B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 POP DUP3 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x592 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x310 SWAP1 PUSH2 0xFAD JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x5BC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x310 SWAP1 PUSH2 0xFE2 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x646 JUMPI PUSH1 0x1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP5 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x5E7 JUMPI PUSH2 0x5E7 PUSH2 0xF2E JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD DUP3 MSTORE PUSH1 0x0 SWAP2 DUP2 ADD DUP3 SWAP1 MSTORE DUP4 SLOAD PUSH1 0x1 DUP2 ADD DUP6 SSTORE SWAP4 DUP3 MSTORE SWAP1 DUP2 SWAP1 KECCAK256 DUP3 MLOAD DUP1 MLOAD SWAP4 SWAP5 PUSH1 0x2 MUL SWAP1 SWAP2 ADD SWAP3 PUSH2 0x626 SWAP3 DUP5 SWAP3 ADD SWAP1 PUSH2 0xC33 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE POP POP DUP1 DUP1 PUSH2 0x63E SWAP1 PUSH2 0x1023 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x5BF JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 PUSH1 0x15 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 ISZERO ISZERO EQ PUSH2 0x6A8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x3130B63637BA1034B99039BA34B6361037B832B717 PUSH1 0x59 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x310 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x1 SLOAD DUP2 LT ISZERO PUSH2 0x7CD JUMPI DUP2 PUSH1 0x1 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x6CC JUMPI PUSH2 0x6CC PUSH2 0xF2E JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD SLOAD GT ISZERO PUSH2 0x7BB JUMPI PUSH1 0x1 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x6F7 JUMPI PUSH2 0x6F7 PUSH2 0xF2E JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD SLOAD SWAP2 POP PUSH1 0x1 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x71E JUMPI PUSH2 0x71E PUSH2 0xF2E JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 ADD DUP1 SLOAD PUSH2 0x73A SWAP1 PUSH2 0xF72 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x766 SWAP1 PUSH2 0xF72 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x7B3 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x788 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x7B3 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x796 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP3 POP JUMPDEST DUP1 PUSH2 0x7C5 DUP2 PUSH2 0x1023 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x6AE JUMP JUMPDEST POP SWAP1 SWAP4 SWAP1 SWAP3 POP SWAP1 POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x801 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x310 SWAP1 PUSH2 0xFAD JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x82B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x310 SWAP1 PUSH2 0xFE2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x855 JUMPI PUSH2 0x855 PUSH2 0xF2E JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 ADD DUP1 SLOAD PUSH2 0x871 SWAP1 PUSH2 0xF72 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x89D SWAP1 PUSH2 0xF72 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x8EA JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x8BF JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x8EA JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x8CD JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x920 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x310 SWAP1 PUSH2 0xFAD JUMP JUMPDEST PUSH2 0x92A PUSH1 0x0 PUSH2 0xBE3 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x956 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x310 SWAP1 PUSH2 0xFAD JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x980 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x310 SWAP1 PUSH2 0xEF7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD ISZERO PUSH2 0x9EA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x766F74657220616C72656164792068617320726967687420746F20766F746521 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x310 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xA56 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x766F7465722068617320616C726561647920766F746564210000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x310 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 PUSH1 0x1 SWAP2 ADD SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xAA1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x310 SWAP1 PUSH2 0xFAD JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH2 0xFFFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA8 SHL OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xAE1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x310 SWAP1 PUSH2 0xFAD JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xB0B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x310 SWAP1 PUSH2 0xEF7 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xB44 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x310 SWAP1 PUSH2 0xFAD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xBA9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x310 JUMP JUMPDEST PUSH2 0xBB2 DUP2 PUSH2 0xBE3 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xBCA JUMPI PUSH2 0xBCA PUSH2 0xF2E JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0xC3F SWAP1 PUSH2 0xF72 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0xC61 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0xCA7 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0xC7A JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0xCA7 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0xCA7 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0xCA7 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0xC8C JUMP JUMPDEST POP PUSH2 0xCB3 SWAP3 SWAP2 POP PUSH2 0xCB7 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0xCB3 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0xCB8 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCDE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xD0B JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0xCEF JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0xD1D JUMPI PUSH1 0x0 PUSH1 0x20 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0xD45 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0xCE5 JUMP JUMPDEST SWAP1 POP DUP3 PUSH1 0x20 DUP4 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0xD93 JUMPI PUSH2 0xD93 PUSH2 0xD54 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xDAE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xDC6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP PUSH1 0x1F DUP7 DUP2 DUP5 ADD SLT PUSH2 0xDDB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD DUP3 DUP2 GT ISZERO PUSH2 0xDED JUMPI PUSH2 0xDED PUSH2 0xD54 JUMP JUMPDEST DUP1 PUSH1 0x5 SHL PUSH2 0xDFC DUP7 DUP3 ADD PUSH2 0xD6A JUMP JUMPDEST SWAP2 DUP3 MSTORE DUP5 DUP2 ADD DUP7 ADD SWAP2 DUP7 DUP2 ADD SWAP1 DUP11 DUP5 GT ISZERO PUSH2 0xE16 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP8 DUP8 ADD SWAP3 POP JUMPDEST DUP4 DUP4 LT ISZERO PUSH2 0xEA6 JUMPI DUP3 CALLDATALOAD DUP7 DUP2 GT ISZERO PUSH2 0xE34 JUMPI PUSH1 0x0 DUP1 DUP2 REVERT JUMPDEST DUP8 ADD PUSH1 0x3F DUP2 ADD DUP13 SGT PUSH2 0xE46 JUMPI PUSH1 0x0 DUP1 DUP2 REVERT JUMPDEST DUP9 DUP2 ADD CALLDATALOAD PUSH1 0x40 DUP9 DUP3 GT ISZERO PUSH2 0xE5C JUMPI PUSH2 0xE5C PUSH2 0xD54 JUMP JUMPDEST PUSH2 0xE6D DUP3 DUP10 ADD PUSH1 0x1F NOT AND DUP13 ADD PUSH2 0xD6A JUMP JUMPDEST DUP3 DUP2 MSTORE DUP15 DUP3 DUP5 DUP7 ADD ADD GT ISZERO PUSH2 0xE82 JUMPI PUSH1 0x0 DUP1 DUP2 REVERT JUMPDEST DUP3 DUP3 DUP6 ADD DUP14 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP3 DUP2 ADD DUP13 ADD SWAP3 SWAP1 SWAP3 MSTORE POP DUP4 MSTORE POP SWAP2 DUP8 ADD SWAP2 SWAP1 DUP8 ADD SWAP1 PUSH2 0xE1C JUMP JUMPDEST SWAP11 SWAP10 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0xEC7 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xCE5 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xEE0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xEC7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1C SWAP1 DUP3 ADD MSTORE PUSH32 0x62616C6C6F742068617320616C726561647920636F6E636C7564656400000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0xF6D JUMPI PUSH2 0xF6D PUSH2 0xF44 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xF86 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0xFA7 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x21 SWAP1 DUP3 ADD MSTORE PUSH32 0x546869732062616C6C6F742068617320616C726561647920636F6E636C756465 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0xFA SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x1037 JUMPI PUSH2 0x1037 PUSH2 0xF44 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDB SLOAD DUP16 0x49 DUP5 0xAC 0x49 0x5C SLT 0x5E PUSH14 0xFC1B134DF276B935C2E0B059AD07 SWAP9 GASLIMIT 0x2B PUSH17 0xA61BCA64736F6C634300080C0033000000 ",
  "pcMap": {
    "0": {
      "offset": [
        153,
        4900
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        153,
        4900
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        153,
        4900
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5": {
      "fn": null,
      "offset": [
        153,
        4900
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "6": {
      "fn": null,
      "offset": [
        153,
        4900
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7": {
      "fn": null,
      "offset": [
        153,
        4900
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "8": {
      "fn": null,
      "offset": [
        153,
        4900
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        153,
        4900
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "12": {
      "fn": null,
      "offset": [
        153,
        4900
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        153,
        4900
      ],
      "op": "DUP1",
      "path": "2"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        153,
        4900
      ],
      "op": "REVERT",
      "path": "2"
    },
    "16": {
      "fn": null,
      "offset": [
        153,
        4900
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "17": {
      "fn": null,
      "offset": [
        153,
        4900
      ],
      "op": "POP",
      "path": "2"
    },
    "18": {
      "fn": null,
      "offset": [
        153,
        4900
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        153,
        4900
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "21": {
      "fn": null,
      "offset": [
        153,
        4900
      ],
      "op": "LT",
      "path": "2"
    },
    "22": {
      "fn": null,
      "offset": [
        153,
        4900
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x116"
    },
    "25": {
      "fn": null,
      "offset": [
        153,
        4900
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "26": {
      "fn": null,
      "offset": [
        153,
        4900
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        153,
        4900
      ],
      "op": "CALLDATALOAD",
      "path": "2"
    },
    "29": {
      "fn": null,
      "offset": [
        153,
        4900
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        153,
        4900
      ],
      "op": "SHR",
      "path": "2"
    },
    "32": {
      "fn": null,
      "offset": [
        153,
        4900
      ],
      "op": "DUP1",
      "path": "2"
    },
    "33": {
      "fn": null,
      "offset": [
        153,
        4900
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x8D221729"
    },
    "38": {
      "fn": null,
      "offset": [
        153,
        4900
      ],
      "op": "GT",
      "path": "2"
    },
    "39": {
      "fn": null,
      "offset": [
        153,
        4900
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xA2"
    },
    "42": {
      "fn": null,
      "offset": [
        153,
        4900
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "43": {
      "fn": null,
      "offset": [
        153,
        4900
      ],
      "op": "DUP1",
      "path": "2"
    },
    "44": {
      "fn": null,
      "offset": [
        153,
        4900
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xA3EC138D"
    },
    "49": {
      "fn": null,
      "offset": [
        153,
        4900
      ],
      "op": "GT",
      "path": "2"
    },
    "50": {
      "fn": null,
      "offset": [
        153,
        4900
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x71"
    },
    "53": {
      "fn": null,
      "offset": [
        153,
        4900
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "54": {
      "fn": null,
      "offset": [
        153,
        4900
      ],
      "op": "DUP1",
      "path": "2"
    },
    "55": {
      "fn": null,
      "offset": [
        153,
        4900
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xA3EC138D"
    },
    "60": {
      "fn": null,
      "offset": [
        153,
        4900
      ],
      "op": "EQ",
      "path": "2"
    },
    "61": {
      "fn": null,
      "offset": [
        153,
        4900
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x234"
    },
    "64": {
      "fn": null,
      "offset": [
        153,
        4900
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "65": {
      "fn": null,
      "offset": [
        153,
        4900
      ],
      "op": "DUP1",
      "path": "2"
    },
    "66": {
      "fn": null,
      "offset": [
        153,
        4900
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xA97B8B4D"
    },
    "71": {
      "fn": null,
      "offset": [
        153,
        4900
      ],
      "op": "EQ",
      "path": "2"
    },
    "72": {
      "fn": null,
      "offset": [
        153,
        4900
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x283"
    },
    "75": {
      "fn": null,
      "offset": [
        153,
        4900
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "76": {
      "fn": null,
      "offset": [
        153,
        4900
      ],
      "op": "DUP1",
      "path": "2"
    },
    "77": {
      "fn": null,
      "offset": [
        153,
        4900
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xBE1C766B"
    },
    "82": {
      "fn": null,
      "offset": [
        153,
        4900
      ],
      "op": "EQ",
      "path": "2"
    },
    "83": {
      "fn": null,
      "offset": [
        153,
        4900
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x28B"
    },
    "86": {
      "fn": null,
      "offset": [
        153,
        4900
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "87": {
      "fn": null,
      "offset": [
        153,
        4900
      ],
      "op": "DUP1",
      "path": "2"
    },
    "88": {
      "fn": null,
      "offset": [
        153,
        4900
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xF2FDE38B"
    },
    "93": {
      "fn": null,
      "offset": [
        153,
        4900
      ],
      "op": "EQ",
      "path": "2"
    },
    "94": {
      "fn": null,
      "offset": [
        153,
        4900
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x29D"
    },
    "97": {
      "fn": null,
      "offset": [
        153,
        4900
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "98": {
      "fn": null,
      "offset": [
        153,
        4900
      ],
      "op": "DUP1",
      "path": "2"
    },
    "99": {
      "fn": null,
      "offset": [
        153,
        4900
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xFF981099"
    },
    "104": {
      "fn": null,
      "offset": [
        153,
        4900
      ],
      "op": "EQ",
      "path": "2"
    },
    "105": {
      "fn": null,
      "offset": [
        153,
        4900
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2B0"
    },
    "108": {
      "fn": null,
      "offset": [
        153,
        4900
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "109": {
      "fn": null,
      "offset": [
        153,
        4900
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "111": {
      "fn": null,
      "offset": [
        153,
        4900
      ],
      "op": "DUP1",
      "path": "2"
    },
    "112": {
      "fn": null,
      "offset": [
        153,
        4900
      ],
      "op": "REVERT",
      "path": "2"
    },
    "113": {
      "fn": null,
      "offset": [
        153,
        4900
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "114": {
      "fn": null,
      "offset": [
        153,
        4900
      ],
      "op": "DUP1",
      "path": "2"
    },
    "115": {
      "fn": null,
      "offset": [
        153,
        4900
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x8D221729"
    },
    "120": {
      "fn": null,
      "offset": [
        153,
        4900
      ],
      "op": "EQ",
      "path": "2"
    },
    "121": {
      "fn": null,
      "offset": [
        153,
        4900
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1F4"
    },
    "124": {
      "fn": null,
      "offset": [
        153,
        4900
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "125": {
      "fn": null,
      "offset": [
        153,
        4900
      ],
      "op": "DUP1",
      "path": "2"
    },
    "126": {
      "fn": null,
      "offset": [
        153,
        4900
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x8DA5CB5B"
    },
    "131": {
      "fn": null,
      "offset": [
        153,
        4900
      ],
      "op": "EQ",
      "path": "2"
    },
    "132": {
      "fn": null,
      "offset": [
        153,
        4900
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x208"
    },
    "135": {
      "fn": null,
      "offset": [
        153,
        4900
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "136": {
      "fn": null,
      "offset": [
        153,
        4900
      ],
      "op": "DUP1",
      "path": "2"
    },
    "137": {
      "fn": null,
      "offset": [
        153,
        4900
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x9E7B8D61"
    },
    "142": {
      "fn": null,
      "offset": [
        153,
        4900
      ],
      "op": "EQ",
      "path": "2"
    },
    "143": {
      "fn": null,
      "offset": [
        153,
        4900
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x219"
    },
    "146": {
      "fn": null,
      "offset": [
        153,
        4900
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "147": {
      "fn": null,
      "offset": [
        153,
        4900
      ],
      "op": "DUP1",
      "path": "2"
    },
    "148": {
      "fn": null,
      "offset": [
        153,
        4900
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xA0D62821"
    },
    "153": {
      "fn": null,
      "offset": [
        153,
        4900
      ],
      "op": "EQ",
      "path": "2"
    },
    "154": {
      "fn": null,
      "offset": [
        153,
        4900
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x22C"
    },
    "157": {
      "fn": null,
      "offset": [
        153,
        4900
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "158": {
      "fn": null,
      "offset": [
        153,
        4900
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "160": {
      "fn": null,
      "offset": [
        153,
        4900
      ],
      "op": "DUP1",
      "path": "2"
    },
    "161": {
      "fn": null,
      "offset": [
        153,
        4900
      ],
      "op": "REVERT",
      "path": "2"
    },
    "162": {
      "fn": null,
      "offset": [
        153,
        4900
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "163": {
      "fn": null,
      "offset": [
        153,
        4900
      ],
      "op": "DUP1",
      "path": "2"
    },
    "164": {
      "fn": null,
      "offset": [
        153,
        4900
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x3D86D374"
    },
    "169": {
      "fn": null,
      "offset": [
        153,
        4900
      ],
      "op": "GT",
      "path": "2"
    },
    "170": {
      "fn": null,
      "offset": [
        153,
        4900
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xE9"
    },
    "173": {
      "fn": null,
      "offset": [
        153,
        4900
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "174": {
      "fn": null,
      "offset": [
        153,
        4900
      ],
      "op": "DUP1",
      "path": "2"
    },
    "175": {
      "fn": null,
      "offset": [
        153,
        4900
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x3D86D374"
    },
    "180": {
      "fn": null,
      "offset": [
        153,
        4900
      ],
      "op": "EQ",
      "path": "2"
    },
    "181": {
      "fn": null,
      "offset": [
        153,
        4900
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x198"
    },
    "184": {
      "fn": null,
      "offset": [
        153,
        4900
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "185": {
      "fn": null,
      "offset": [
        153,
        4900
      ],
      "op": "DUP1",
      "path": "2"
    },
    "186": {
      "fn": null,
      "offset": [
        153,
        4900
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x4717F97C"
    },
    "191": {
      "fn": null,
      "offset": [
        153,
        4900
      ],
      "op": "EQ",
      "path": "2"
    },
    "192": {
      "fn": null,
      "offset": [
        153,
        4900
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1BC"
    },
    "195": {
      "fn": null,
      "offset": [
        153,
        4900
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "196": {
      "fn": null,
      "offset": [
        153,
        4900
      ],
      "op": "DUP1",
      "path": "2"
    },
    "197": {
      "fn": null,
      "offset": [
        153,
        4900
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x4D0013AC"
    },
    "202": {
      "fn": null,
      "offset": [
        153,
        4900
      ],
      "op": "EQ",
      "path": "2"
    },
    "203": {
      "fn": null,
      "offset": [
        153,
        4900
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1C4"
    },
    "206": {
      "fn": null,
      "offset": [
        153,
        4900
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "207": {
      "fn": null,
      "offset": [
        153,
        4900
      ],
      "op": "DUP1",
      "path": "2"
    },
    "208": {
      "fn": null,
      "offset": [
        153,
        4900
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x6B8FF574"
    },
    "213": {
      "fn": null,
      "offset": [
        153,
        4900
      ],
      "op": "EQ",
      "path": "2"
    },
    "214": {
      "fn": null,
      "offset": [
        153,
        4900
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1CC"
    },
    "217": {
      "fn": null,
      "offset": [
        153,
        4900
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "218": {
      "fn": null,
      "offset": [
        153,
        4900
      ],
      "op": "DUP1",
      "path": "2"
    },
    "219": {
      "fn": null,
      "offset": [
        153,
        4900
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x715018A6"
    },
    "224": {
      "fn": null,
      "offset": [
        153,
        4900
      ],
      "op": "EQ",
      "path": "2"
    },
    "225": {
      "fn": null,
      "offset": [
        153,
        4900
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1EC"
    },
    "228": {
      "fn": null,
      "offset": [
        153,
        4900
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "229": {
      "fn": null,
      "offset": [
        153,
        4900
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "231": {
      "fn": null,
      "offset": [
        153,
        4900
      ],
      "op": "DUP1",
      "path": "2"
    },
    "232": {
      "fn": null,
      "offset": [
        153,
        4900
      ],
      "op": "REVERT",
      "path": "2"
    },
    "233": {
      "fn": null,
      "offset": [
        153,
        4900
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "234": {
      "fn": null,
      "offset": [
        153,
        4900
      ],
      "op": "DUP1",
      "path": "2"
    },
    "235": {
      "fn": null,
      "offset": [
        153,
        4900
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x121B93F"
    },
    "240": {
      "fn": null,
      "offset": [
        153,
        4900
      ],
      "op": "EQ",
      "path": "2"
    },
    "241": {
      "fn": null,
      "offset": [
        153,
        4900
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x11B"
    },
    "244": {
      "fn": null,
      "offset": [
        153,
        4900
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "245": {
      "fn": null,
      "offset": [
        153,
        4900
      ],
      "op": "DUP1",
      "path": "2"
    },
    "246": {
      "fn": null,
      "offset": [
        153,
        4900
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x13CF08B"
    },
    "251": {
      "fn": null,
      "offset": [
        153,
        4900
      ],
      "op": "EQ",
      "path": "2"
    },
    "252": {
      "fn": null,
      "offset": [
        153,
        4900
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x130"
    },
    "255": {
      "fn": null,
      "offset": [
        153,
        4900
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "256": {
      "fn": null,
      "offset": [
        153,
        4900
      ],
      "op": "DUP1",
      "path": "2"
    },
    "257": {
      "fn": null,
      "offset": [
        153,
        4900
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x3879E7C"
    },
    "262": {
      "fn": null,
      "offset": [
        153,
        4900
      ],
      "op": "EQ",
      "path": "2"
    },
    "263": {
      "fn": null,
      "offset": [
        153,
        4900
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x15A"
    },
    "266": {
      "fn": null,
      "offset": [
        153,
        4900
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "267": {
      "fn": null,
      "offset": [
        153,
        4900
      ],
      "op": "DUP1",
      "path": "2"
    },
    "268": {
      "fn": null,
      "offset": [
        153,
        4900
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x2E4176CF"
    },
    "273": {
      "fn": null,
      "offset": [
        153,
        4900
      ],
      "op": "EQ",
      "path": "2"
    },
    "274": {
      "fn": null,
      "offset": [
        153,
        4900
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x16D"
    },
    "277": {
      "fn": null,
      "offset": [
        153,
        4900
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "278": {
      "fn": null,
      "offset": [
        153,
        4900
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "279": {
      "fn": null,
      "offset": [
        153,
        4900
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "281": {
      "fn": null,
      "offset": [
        153,
        4900
      ],
      "op": "DUP1",
      "path": "2"
    },
    "282": {
      "first_revert": true,
      "fn": null,
      "offset": [
        153,
        4900
      ],
      "op": "REVERT",
      "path": "2"
    },
    "283": {
      "fn": "Ballot.vote",
      "offset": [
        2346,
        2932
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "284": {
      "fn": "Ballot.vote",
      "offset": [
        2346,
        2932
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x12E"
    },
    "287": {
      "fn": "Ballot.vote",
      "offset": [
        2346,
        2932
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x129"
    },
    "290": {
      "fn": "Ballot.vote",
      "offset": [
        2346,
        2932
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "291": {
      "fn": "Ballot.vote",
      "offset": [
        2346,
        2932
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "293": {
      "fn": "Ballot.vote",
      "offset": [
        2346,
        2932
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xCCC"
    },
    "296": {
      "fn": "Ballot.vote",
      "jump": "i",
      "offset": [
        2346,
        2932
      ],
      "op": "JUMP",
      "path": "2"
    },
    "297": {
      "fn": "Ballot.vote",
      "offset": [
        2346,
        2932
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "298": {
      "fn": "Ballot.vote",
      "offset": [
        2346,
        2932
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2C3"
    },
    "301": {
      "fn": "Ballot.vote",
      "jump": "i",
      "offset": [
        2346,
        2932
      ],
      "op": "JUMP",
      "path": "2"
    },
    "302": {
      "fn": "Ballot.vote",
      "offset": [
        2346,
        2932
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "303": {
      "fn": "Ballot.vote",
      "offset": [
        2346,
        2932
      ],
      "op": "STOP",
      "path": "2"
    },
    "304": {
      "offset": [
        571,
        598
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "305": {
      "fn": "Ballot.vote",
      "offset": [
        571,
        598
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x143"
    },
    "308": {
      "fn": "Ballot.vote",
      "offset": [
        571,
        598
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x13E"
    },
    "311": {
      "fn": "Ballot.vote",
      "offset": [
        571,
        598
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "312": {
      "fn": "Ballot.vote",
      "offset": [
        571,
        598
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "314": {
      "fn": "Ballot.vote",
      "offset": [
        571,
        598
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xCCC"
    },
    "317": {
      "fn": "Ballot.vote",
      "jump": "i",
      "offset": [
        571,
        598
      ],
      "op": "JUMP",
      "path": "2"
    },
    "318": {
      "fn": "Ballot.vote",
      "offset": [
        571,
        598
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "319": {
      "fn": "Ballot.vote",
      "offset": [
        571,
        598
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4AC"
    },
    "322": {
      "fn": "Ballot.vote",
      "jump": "i",
      "offset": [
        571,
        598
      ],
      "op": "JUMP",
      "path": "2"
    },
    "323": {
      "fn": "Ballot.vote",
      "offset": [
        571,
        598
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "324": {
      "fn": "Ballot.vote",
      "offset": [
        571,
        598
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "326": {
      "fn": "Ballot.vote",
      "offset": [
        571,
        598
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "327": {
      "fn": "Ballot.vote",
      "offset": [
        571,
        598
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x151"
    },
    "330": {
      "fn": "Ballot.vote",
      "offset": [
        571,
        598
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "331": {
      "fn": "Ballot.vote",
      "offset": [
        571,
        598
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "332": {
      "fn": "Ballot.vote",
      "offset": [
        571,
        598
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "333": {
      "fn": "Ballot.vote",
      "offset": [
        571,
        598
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xD32"
    },
    "336": {
      "fn": "Ballot.vote",
      "jump": "i",
      "offset": [
        571,
        598
      ],
      "op": "JUMP",
      "path": "2"
    },
    "337": {
      "fn": "Ballot.vote",
      "offset": [
        571,
        598
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "338": {
      "fn": "Ballot.vote",
      "offset": [
        571,
        598
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "340": {
      "fn": "Ballot.vote",
      "offset": [
        571,
        598
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "341": {
      "fn": "Ballot.vote",
      "offset": [
        571,
        598
      ],
      "op": "DUP1",
      "path": "2"
    },
    "342": {
      "fn": "Ballot.vote",
      "offset": [
        571,
        598
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "343": {
      "fn": "Ballot.vote",
      "offset": [
        571,
        598
      ],
      "op": "SUB",
      "path": "2"
    },
    "344": {
      "fn": "Ballot.vote",
      "offset": [
        571,
        598
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "345": {
      "fn": "Ballot.vote",
      "offset": [
        571,
        598
      ],
      "op": "RETURN",
      "path": "2"
    },
    "346": {
      "fn": "Ballot.addProposals",
      "offset": [
        1212,
        1525
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "347": {
      "fn": "Ballot.addProposals",
      "offset": [
        1212,
        1525
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x12E"
    },
    "350": {
      "fn": "Ballot.addProposals",
      "offset": [
        1212,
        1525
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x168"
    },
    "353": {
      "fn": "Ballot.addProposals",
      "offset": [
        1212,
        1525
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "354": {
      "fn": "Ballot.addProposals",
      "offset": [
        1212,
        1525
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "356": {
      "fn": "Ballot.addProposals",
      "offset": [
        1212,
        1525
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xD9B"
    },
    "359": {
      "fn": "Ballot.addProposals",
      "jump": "i",
      "offset": [
        1212,
        1525
      ],
      "op": "JUMP",
      "path": "2"
    },
    "360": {
      "fn": "Ballot.addProposals",
      "offset": [
        1212,
        1525
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "361": {
      "fn": "Ballot.addProposals",
      "offset": [
        1212,
        1525
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x568"
    },
    "364": {
      "fn": "Ballot.addProposals",
      "jump": "i",
      "offset": [
        1212,
        1525
      ],
      "op": "JUMP",
      "path": "2"
    },
    "365": {
      "offset": [
        707,
        733
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "366": {
      "fn": "Ballot.addProposals",
      "offset": [
        707,
        733
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "368": {
      "fn": "Ballot.addProposals",
      "offset": [
        707,
        733
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "369": {
      "fn": "Ballot.addProposals",
      "offset": [
        707,
        733
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x180"
    },
    "372": {
      "fn": "Ballot.addProposals",
      "offset": [
        707,
        733
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "373": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "375": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "377": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "379": {
      "op": "SHL"
    },
    "380": {
      "op": "SUB"
    },
    "381": {
      "offset": [
        707,
        733
      ],
      "op": "AND",
      "path": "2"
    },
    "382": {
      "fn": "Ballot.addProposals",
      "offset": [
        707,
        733
      ],
      "op": "DUP2",
      "path": "2"
    },
    "383": {
      "fn": "Ballot.addProposals",
      "offset": [
        707,
        733
      ],
      "op": "JUMP",
      "path": "2"
    },
    "384": {
      "fn": "Ballot.addProposals",
      "offset": [
        707,
        733
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "385": {
      "fn": "Ballot.addProposals",
      "offset": [
        707,
        733
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "387": {
      "fn": "Ballot.addProposals",
      "offset": [
        707,
        733
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "388": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "390": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "392": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "394": {
      "op": "SHL"
    },
    "395": {
      "op": "SUB"
    },
    "396": {
      "op": "SWAP1"
    },
    "397": {
      "op": "SWAP2"
    },
    "398": {
      "op": "AND"
    },
    "399": {
      "op": "DUP2"
    },
    "400": {
      "op": "MSTORE"
    },
    "401": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "403": {
      "op": "ADD"
    },
    "404": {
      "offset": [
        707,
        733
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x151"
    },
    "407": {
      "op": "JUMP"
    },
    "408": {
      "offset": [
        502,
        526
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "409": {
      "fn": "Ballot.addProposals",
      "offset": [
        502,
        526
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "411": {
      "fn": "Ballot.addProposals",
      "offset": [
        502,
        526
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "412": {
      "fn": "Ballot.addProposals",
      "offset": [
        502,
        526
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1AC"
    },
    "415": {
      "fn": "Ballot.addProposals",
      "offset": [
        502,
        526
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "416": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "418": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "420": {
      "op": "SHL"
    },
    "421": {
      "offset": [
        502,
        526
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "422": {
      "fn": "Ballot.addProposals",
      "offset": [
        502,
        526
      ],
      "op": "DIV",
      "path": "2"
    },
    "423": {
      "fn": "Ballot.addProposals",
      "offset": [
        502,
        526
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "425": {
      "fn": "Ballot.addProposals",
      "offset": [
        502,
        526
      ],
      "op": "AND",
      "path": "2"
    },
    "426": {
      "fn": "Ballot.addProposals",
      "offset": [
        502,
        526
      ],
      "op": "DUP2",
      "path": "2"
    },
    "427": {
      "fn": "Ballot.addProposals",
      "offset": [
        502,
        526
      ],
      "op": "JUMP",
      "path": "2"
    },
    "428": {
      "fn": "Ballot.addProposals",
      "offset": [
        502,
        526
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "429": {
      "fn": "Ballot.addProposals",
      "offset": [
        502,
        526
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "431": {
      "fn": "Ballot.addProposals",
      "offset": [
        502,
        526
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "432": {
      "op": "SWAP1"
    },
    "433": {
      "op": "ISZERO"
    },
    "434": {
      "op": "ISZERO"
    },
    "435": {
      "op": "DUP2"
    },
    "436": {
      "op": "MSTORE"
    },
    "437": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "439": {
      "op": "ADD"
    },
    "440": {
      "offset": [
        502,
        526
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x151"
    },
    "443": {
      "op": "JUMP"
    },
    "444": {
      "fn": "Ballot.getResults",
      "offset": [
        3981,
        4488
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "445": {
      "fn": "Ballot.getResults",
      "offset": [
        3981,
        4488
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x143"
    },
    "448": {
      "fn": "Ballot.getResults",
      "offset": [
        3981,
        4488
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x64A"
    },
    "451": {
      "fn": "Ballot.getResults",
      "jump": "i",
      "offset": [
        3981,
        4488
      ],
      "op": "JUMP",
      "path": "2"
    },
    "452": {
      "fn": "Ballot.openBallot",
      "offset": [
        4570,
        4723
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "453": {
      "fn": "Ballot.openBallot",
      "offset": [
        4570,
        4723
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x12E"
    },
    "456": {
      "fn": "Ballot.openBallot",
      "offset": [
        4570,
        4723
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7D7"
    },
    "459": {
      "fn": "Ballot.openBallot",
      "jump": "i",
      "offset": [
        4570,
        4723
      ],
      "op": "JUMP",
      "path": "2"
    },
    "460": {
      "fn": "Ballot.getName",
      "offset": [
        3514,
        3677
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "461": {
      "fn": "Ballot.getName",
      "offset": [
        3514,
        3677
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1DF"
    },
    "464": {
      "fn": "Ballot.getName",
      "offset": [
        3514,
        3677
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1DA"
    },
    "467": {
      "fn": "Ballot.getName",
      "offset": [
        3514,
        3677
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "468": {
      "fn": "Ballot.getName",
      "offset": [
        3514,
        3677
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "470": {
      "fn": "Ballot.getName",
      "offset": [
        3514,
        3677
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xCCC"
    },
    "473": {
      "fn": "Ballot.getName",
      "jump": "i",
      "offset": [
        3514,
        3677
      ],
      "op": "JUMP",
      "path": "2"
    },
    "474": {
      "fn": "Ballot.getName",
      "offset": [
        3514,
        3677
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "475": {
      "fn": "Ballot.getName",
      "offset": [
        3514,
        3677
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x840"
    },
    "478": {
      "fn": "Ballot.getName",
      "jump": "i",
      "offset": [
        3514,
        3677
      ],
      "op": "JUMP",
      "path": "2"
    },
    "479": {
      "fn": "Ballot.getName",
      "offset": [
        3514,
        3677
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "480": {
      "fn": "Ballot.getName",
      "offset": [
        3514,
        3677
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "482": {
      "fn": "Ballot.getName",
      "offset": [
        3514,
        3677
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "483": {
      "fn": "Ballot.getName",
      "offset": [
        3514,
        3677
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x151"
    },
    "486": {
      "fn": "Ballot.getName",
      "offset": [
        3514,
        3677
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "487": {
      "fn": "Ballot.getName",
      "offset": [
        3514,
        3677
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "488": {
      "fn": "Ballot.getName",
      "offset": [
        3514,
        3677
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xEB4"
    },
    "491": {
      "fn": "Ballot.getName",
      "jump": "i",
      "offset": [
        3514,
        3677
      ],
      "op": "JUMP",
      "path": "2"
    },
    "492": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "493": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x12E"
    },
    "496": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8F6"
    },
    "499": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMP",
      "path": "0"
    },
    "500": {
      "offset": [
        532,
        565
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "501": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        532,
        565
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "503": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        532,
        565
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "504": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        532,
        565
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1AC"
    },
    "507": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        532,
        565
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "508": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "510": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "512": {
      "op": "SHL"
    },
    "513": {
      "offset": [
        532,
        565
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "514": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        532,
        565
      ],
      "op": "DIV",
      "path": "2"
    },
    "515": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        532,
        565
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "517": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        532,
        565
      ],
      "op": "AND",
      "path": "2"
    },
    "518": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        532,
        565
      ],
      "op": "DUP2",
      "path": "2"
    },
    "519": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        532,
        565
      ],
      "op": "JUMP",
      "path": "2"
    },
    "520": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "521": {
      "fn": "Ownable.owner",
      "offset": [
        1082,
        1089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "523": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0",
      "statement": 0
    },
    "524": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "526": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "528": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "530": {
      "op": "SHL"
    },
    "531": {
      "op": "SUB"
    },
    "532": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "533": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x180"
    },
    "536": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "JUMP",
      "path": "0"
    },
    "537": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        2960,
        3275
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "538": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        2960,
        3275
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x12E"
    },
    "541": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        2960,
        3275
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x227"
    },
    "544": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        2960,
        3275
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "545": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        2960,
        3275
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "547": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        2960,
        3275
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xECE"
    },
    "550": {
      "fn": "Ballot.giveRightToVote",
      "jump": "i",
      "offset": [
        2960,
        3275
      ],
      "op": "JUMP",
      "path": "2"
    },
    "551": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        2960,
        3275
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "552": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        2960,
        3275
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x92C"
    },
    "555": {
      "fn": "Ballot.giveRightToVote",
      "jump": "i",
      "offset": [
        2960,
        3275
      ],
      "op": "JUMP",
      "path": "2"
    },
    "556": {
      "fn": "Ballot.concludeBallot",
      "offset": [
        3865,
        3975
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "557": {
      "fn": "Ballot.concludeBallot",
      "offset": [
        3865,
        3975
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x12E"
    },
    "560": {
      "fn": "Ballot.concludeBallot",
      "offset": [
        3865,
        3975
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xA77"
    },
    "563": {
      "fn": "Ballot.concludeBallot",
      "jump": "i",
      "offset": [
        3865,
        3975
      ],
      "op": "JUMP",
      "path": "2"
    },
    "564": {
      "offset": [
        626,
        665
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "565": {
      "fn": "Ballot.concludeBallot",
      "offset": [
        626,
        665
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x268"
    },
    "568": {
      "fn": "Ballot.concludeBallot",
      "offset": [
        626,
        665
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x242"
    },
    "571": {
      "fn": "Ballot.concludeBallot",
      "offset": [
        626,
        665
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "572": {
      "fn": "Ballot.concludeBallot",
      "offset": [
        626,
        665
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "574": {
      "fn": "Ballot.concludeBallot",
      "offset": [
        626,
        665
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xECE"
    },
    "577": {
      "fn": "Ballot.concludeBallot",
      "jump": "i",
      "offset": [
        626,
        665
      ],
      "op": "JUMP",
      "path": "2"
    },
    "578": {
      "fn": "Ballot.concludeBallot",
      "offset": [
        626,
        665
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "579": {
      "fn": "Ballot.concludeBallot",
      "offset": [
        626,
        665
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "581": {
      "fn": "Ballot.concludeBallot",
      "offset": [
        626,
        665
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "583": {
      "fn": "Ballot.concludeBallot",
      "offset": [
        626,
        665
      ],
      "op": "DUP2",
      "path": "2"
    },
    "584": {
      "fn": "Ballot.concludeBallot",
      "offset": [
        626,
        665
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "585": {
      "fn": "Ballot.concludeBallot",
      "offset": [
        626,
        665
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "586": {
      "fn": "Ballot.concludeBallot",
      "offset": [
        626,
        665
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "588": {
      "fn": "Ballot.concludeBallot",
      "offset": [
        626,
        665
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "589": {
      "fn": "Ballot.concludeBallot",
      "offset": [
        626,
        665
      ],
      "op": "DUP3",
      "path": "2"
    },
    "590": {
      "fn": "Ballot.concludeBallot",
      "offset": [
        626,
        665
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "591": {
      "fn": "Ballot.concludeBallot",
      "offset": [
        626,
        665
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "593": {
      "fn": "Ballot.concludeBallot",
      "offset": [
        626,
        665
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "594": {
      "fn": "Ballot.concludeBallot",
      "offset": [
        626,
        665
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "595": {
      "fn": "Ballot.concludeBallot",
      "offset": [
        626,
        665
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "596": {
      "fn": "Ballot.concludeBallot",
      "offset": [
        626,
        665
      ],
      "op": "DUP1",
      "path": "2"
    },
    "597": {
      "fn": "Ballot.concludeBallot",
      "offset": [
        626,
        665
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "598": {
      "fn": "Ballot.concludeBallot",
      "offset": [
        626,
        665
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "600": {
      "fn": "Ballot.concludeBallot",
      "offset": [
        626,
        665
      ],
      "op": "DUP3",
      "path": "2"
    },
    "601": {
      "fn": "Ballot.concludeBallot",
      "offset": [
        626,
        665
      ],
      "op": "ADD",
      "path": "2"
    },
    "602": {
      "fn": "Ballot.concludeBallot",
      "offset": [
        626,
        665
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "603": {
      "fn": "Ballot.concludeBallot",
      "offset": [
        626,
        665
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "604": {
      "fn": "Ballot.concludeBallot",
      "offset": [
        626,
        665
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "605": {
      "fn": "Ballot.concludeBallot",
      "offset": [
        626,
        665
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "606": {
      "fn": "Ballot.concludeBallot",
      "offset": [
        626,
        665
      ],
      "op": "ADD",
      "path": "2"
    },
    "607": {
      "fn": "Ballot.concludeBallot",
      "offset": [
        626,
        665
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "608": {
      "fn": "Ballot.concludeBallot",
      "offset": [
        626,
        665
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "610": {
      "fn": "Ballot.concludeBallot",
      "offset": [
        626,
        665
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "611": {
      "fn": "Ballot.concludeBallot",
      "offset": [
        626,
        665
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "612": {
      "fn": "Ballot.concludeBallot",
      "offset": [
        626,
        665
      ],
      "op": "AND",
      "path": "2"
    },
    "613": {
      "fn": "Ballot.concludeBallot",
      "offset": [
        626,
        665
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "614": {
      "fn": "Ballot.concludeBallot",
      "offset": [
        626,
        665
      ],
      "op": "DUP4",
      "path": "2"
    },
    "615": {
      "fn": "Ballot.concludeBallot",
      "offset": [
        626,
        665
      ],
      "op": "JUMP",
      "path": "2"
    },
    "616": {
      "fn": "Ballot.concludeBallot",
      "offset": [
        626,
        665
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "617": {
      "fn": "Ballot.concludeBallot",
      "offset": [
        626,
        665
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "619": {
      "fn": "Ballot.concludeBallot",
      "offset": [
        626,
        665
      ],
      "op": "DUP1",
      "path": "2"
    },
    "620": {
      "fn": "Ballot.concludeBallot",
      "offset": [
        626,
        665
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "621": {
      "op": "SWAP4"
    },
    "622": {
      "op": "DUP5"
    },
    "623": {
      "op": "MSTORE"
    },
    "624": {
      "op": "SWAP2"
    },
    "625": {
      "op": "ISZERO"
    },
    "626": {
      "op": "ISZERO"
    },
    "627": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "629": {
      "op": "DUP5"
    },
    "630": {
      "op": "ADD"
    },
    "631": {
      "op": "MSTORE"
    },
    "632": {
      "op": "SWAP1"
    },
    "633": {
      "op": "DUP3"
    },
    "634": {
      "op": "ADD"
    },
    "635": {
      "op": "MSTORE"
    },
    "636": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "638": {
      "op": "ADD"
    },
    "639": {
      "offset": [
        626,
        665
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x151"
    },
    "642": {
      "op": "JUMP"
    },
    "643": {
      "fn": "Ballot.closeBallot",
      "offset": [
        4748,
        4898
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "644": {
      "fn": "Ballot.closeBallot",
      "offset": [
        4748,
        4898
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x12E"
    },
    "647": {
      "fn": "Ballot.closeBallot",
      "offset": [
        4748,
        4898
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xAB7"
    },
    "650": {
      "fn": "Ballot.closeBallot",
      "jump": "i",
      "offset": [
        4748,
        4898
      ],
      "op": "JUMP",
      "path": "2"
    },
    "651": {
      "fn": "Ballot.getLength",
      "offset": [
        3718,
        3825
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "652": {
      "fn": "Ballot.getLength",
      "offset": [
        3802,
        3811
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 1,
      "value": "0x1"
    },
    "654": {
      "fn": "Ballot.getLength",
      "offset": [
        3802,
        3818
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "655": {
      "fn": "Ballot.getLength",
      "offset": [
        3718,
        3825
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "656": {
      "fn": "Ballot.getLength",
      "offset": [
        3718,
        3825
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "658": {
      "fn": "Ballot.getLength",
      "offset": [
        3718,
        3825
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "659": {
      "op": "SWAP1"
    },
    "660": {
      "op": "DUP2"
    },
    "661": {
      "op": "MSTORE"
    },
    "662": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "664": {
      "op": "ADD"
    },
    "665": {
      "fn": "Ballot.getLength",
      "offset": [
        3718,
        3825
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x151"
    },
    "668": {
      "op": "JUMP"
    },
    "669": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "670": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x12E"
    },
    "673": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2AB"
    },
    "676": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "677": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "679": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xECE"
    },
    "682": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMP",
      "path": "0"
    },
    "683": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "684": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB1A"
    },
    "687": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMP",
      "path": "0"
    },
    "688": {
      "fn": "Ballot.getVotes",
      "offset": [
        3309,
        3473
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "689": {
      "fn": "Ballot.getVotes",
      "offset": [
        3309,
        3473
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x28F"
    },
    "692": {
      "fn": "Ballot.getVotes",
      "offset": [
        3309,
        3473
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2BE"
    },
    "695": {
      "fn": "Ballot.getVotes",
      "offset": [
        3309,
        3473
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "696": {
      "fn": "Ballot.getVotes",
      "offset": [
        3309,
        3473
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "698": {
      "fn": "Ballot.getVotes",
      "offset": [
        3309,
        3473
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xCCC"
    },
    "701": {
      "fn": "Ballot.getVotes",
      "jump": "i",
      "offset": [
        3309,
        3473
      ],
      "op": "JUMP",
      "path": "2"
    },
    "702": {
      "fn": "Ballot.getVotes",
      "offset": [
        3309,
        3473
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "703": {
      "fn": "Ballot.getVotes",
      "offset": [
        3309,
        3473
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xBB5"
    },
    "706": {
      "fn": "Ballot.getVotes",
      "jump": "i",
      "offset": [
        3309,
        3473
      ],
      "op": "JUMP",
      "path": "2"
    },
    "707": {
      "fn": "Ballot.vote",
      "offset": [
        2346,
        2932
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "708": {
      "fn": "Ballot.vote",
      "offset": [
        2422,
        2432
      ],
      "op": "CALLER",
      "path": "2"
    },
    "709": {
      "fn": "Ballot.vote",
      "offset": [
        2392,
        2412
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "711": {
      "fn": "Ballot.vote",
      "offset": [
        2415,
        2433
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "712": {
      "fn": "Ballot.vote",
      "offset": [
        2415,
        2433
      ],
      "op": "DUP2",
      "path": "2"
    },
    "713": {
      "fn": "Ballot.vote",
      "offset": [
        2415,
        2433
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "714": {
      "fn": "Ballot.vote",
      "offset": [
        2415,
        2421
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "716": {
      "fn": "Ballot.vote",
      "offset": [
        2415,
        2433
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "718": {
      "fn": "Ballot.vote",
      "offset": [
        2415,
        2433
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "719": {
      "fn": "Ballot.vote",
      "offset": [
        2415,
        2433
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "721": {
      "fn": "Ballot.vote",
      "offset": [
        2415,
        2433
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "722": {
      "fn": "Ballot.vote",
      "offset": [
        2415,
        2433
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "723": {
      "fn": "Ballot.vote",
      "offset": [
        2522,
        2531
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 2,
      "value": "0x1"
    },
    "725": {
      "fn": "Ballot.vote",
      "offset": [
        2522,
        2538
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "726": {
      "fn": "Ballot.vote",
      "offset": [
        2513,
        2538
      ],
      "op": "DUP3",
      "path": "2"
    },
    "727": {
      "fn": "Ballot.vote",
      "offset": [
        2513,
        2538
      ],
      "op": "GT",
      "path": "2"
    },
    "728": {
      "branch": 36,
      "fn": "Ballot.vote",
      "offset": [
        2513,
        2538
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "729": {
      "fn": "Ballot.vote",
      "offset": [
        2505,
        2556
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x319"
    },
    "732": {
      "branch": 36,
      "fn": "Ballot.vote",
      "offset": [
        2505,
        2556
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "733": {
      "fn": "Ballot.vote",
      "offset": [
        2505,
        2556
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "735": {
      "fn": "Ballot.vote",
      "offset": [
        2505,
        2556
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "736": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "740": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "742": {
      "op": "SHL"
    },
    "743": {
      "fn": "Ballot.vote",
      "offset": [
        2505,
        2556
      ],
      "op": "DUP2",
      "path": "2"
    },
    "744": {
      "fn": "Ballot.vote",
      "offset": [
        2505,
        2556
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "745": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "747": {
      "fn": "Ballot.vote",
      "offset": [
        2505,
        2556
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "749": {
      "fn": "Ballot.vote",
      "offset": [
        2505,
        2556
      ],
      "op": "DUP3",
      "path": "2"
    },
    "750": {
      "fn": "Ballot.vote",
      "offset": [
        2505,
        2556
      ],
      "op": "ADD",
      "path": "2"
    },
    "751": {
      "op": "MSTORE"
    },
    "752": {
      "op": "PUSH1",
      "value": "0xD"
    },
    "754": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "756": {
      "op": "DUP3"
    },
    "757": {
      "op": "ADD"
    },
    "758": {
      "op": "MSTORE"
    },
    "759": {
      "op": "PUSH13",
      "value": "0x696E76616C696420656E747279"
    },
    "773": {
      "op": "PUSH1",
      "value": "0x98"
    },
    "775": {
      "op": "SHL"
    },
    "776": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "778": {
      "op": "DUP3"
    },
    "779": {
      "op": "ADD"
    },
    "780": {
      "op": "MSTORE"
    },
    "781": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "783": {
      "op": "ADD"
    },
    "784": {
      "fn": "Ballot.vote",
      "offset": [
        2505,
        2556
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "785": {
      "fn": "Ballot.vote",
      "offset": [
        2505,
        2556
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "787": {
      "fn": "Ballot.vote",
      "offset": [
        2505,
        2556
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "788": {
      "fn": "Ballot.vote",
      "offset": [
        2505,
        2556
      ],
      "op": "DUP1",
      "path": "2"
    },
    "789": {
      "fn": "Ballot.vote",
      "offset": [
        2505,
        2556
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "790": {
      "fn": "Ballot.vote",
      "offset": [
        2505,
        2556
      ],
      "op": "SUB",
      "path": "2"
    },
    "791": {
      "fn": "Ballot.vote",
      "offset": [
        2505,
        2556
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "792": {
      "fn": "Ballot.vote",
      "offset": [
        2505,
        2556
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "2"
    },
    "793": {
      "fn": "Ballot.vote",
      "offset": [
        2505,
        2556
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "794": {
      "fn": "Ballot.vote",
      "offset": [
        2574,
        2586
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 3,
      "value": "0x0"
    },
    "796": {
      "fn": "Ballot.vote",
      "offset": [
        2574,
        2586
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "797": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "799": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "801": {
      "op": "SHL"
    },
    "802": {
      "fn": "Ballot.vote",
      "offset": [
        2574,
        2586
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "803": {
      "fn": "Ballot.vote",
      "offset": [
        2574,
        2586
      ],
      "op": "DIV",
      "path": "2"
    },
    "804": {
      "fn": "Ballot.vote",
      "offset": [
        2574,
        2586
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "806": {
      "branch": 37,
      "fn": "Ballot.vote",
      "offset": [
        2574,
        2586
      ],
      "op": "AND",
      "path": "2"
    },
    "807": {
      "fn": "Ballot.vote",
      "offset": [
        2566,
        2617
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x372"
    },
    "810": {
      "branch": 37,
      "fn": "Ballot.vote",
      "offset": [
        2566,
        2617
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "811": {
      "fn": "Ballot.vote",
      "offset": [
        2566,
        2617
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "813": {
      "fn": "Ballot.vote",
      "offset": [
        2566,
        2617
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "814": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "818": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "820": {
      "op": "SHL"
    },
    "821": {
      "fn": "Ballot.vote",
      "offset": [
        2566,
        2617
      ],
      "op": "DUP2",
      "path": "2"
    },
    "822": {
      "fn": "Ballot.vote",
      "offset": [
        2566,
        2617
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "823": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "825": {
      "fn": "Ballot.vote",
      "offset": [
        2566,
        2617
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "827": {
      "fn": "Ballot.vote",
      "offset": [
        2566,
        2617
      ],
      "op": "DUP3",
      "path": "2"
    },
    "828": {
      "fn": "Ballot.vote",
      "offset": [
        2566,
        2617
      ],
      "op": "ADD",
      "path": "2"
    },
    "829": {
      "op": "MSTORE"
    },
    "830": {
      "op": "PUSH1",
      "value": "0x1A"
    },
    "832": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "834": {
      "op": "DUP3"
    },
    "835": {
      "op": "ADD"
    },
    "836": {
      "op": "MSTORE"
    },
    "837": {
      "op": "PUSH32",
      "value": "0x62616C6C6F742069732063757272656E746C7920636C6F736564000000000000"
    },
    "870": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "872": {
      "op": "DUP3"
    },
    "873": {
      "op": "ADD"
    },
    "874": {
      "op": "MSTORE"
    },
    "875": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "877": {
      "op": "ADD"
    },
    "878": {
      "fn": "Ballot.vote",
      "offset": [
        2566,
        2617
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x310"
    },
    "881": {
      "op": "JUMP"
    },
    "882": {
      "fn": "Ballot.vote",
      "offset": [
        2566,
        2617
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "883": {
      "fn": "Ballot.vote",
      "offset": [
        2636,
        2649
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 4,
      "value": "0x0"
    },
    "885": {
      "fn": "Ballot.vote",
      "offset": [
        2636,
        2649
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "886": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "888": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "890": {
      "op": "SHL"
    },
    "891": {
      "fn": "Ballot.vote",
      "offset": [
        2636,
        2649
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "892": {
      "fn": "Ballot.vote",
      "offset": [
        2636,
        2649
      ],
      "op": "DIV",
      "path": "2"
    },
    "893": {
      "fn": "Ballot.vote",
      "offset": [
        2636,
        2649
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "895": {
      "fn": "Ballot.vote",
      "offset": [
        2636,
        2649
      ],
      "op": "AND",
      "path": "2"
    },
    "896": {
      "branch": 38,
      "fn": "Ballot.vote",
      "offset": [
        2635,
        2649
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "897": {
      "fn": "Ballot.vote",
      "offset": [
        2627,
        2682
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x39C"
    },
    "900": {
      "branch": 38,
      "fn": "Ballot.vote",
      "offset": [
        2627,
        2682
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "901": {
      "fn": "Ballot.vote",
      "offset": [
        2627,
        2682
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "903": {
      "fn": "Ballot.vote",
      "offset": [
        2627,
        2682
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "904": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "908": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "910": {
      "op": "SHL"
    },
    "911": {
      "fn": "Ballot.vote",
      "offset": [
        2627,
        2682
      ],
      "op": "DUP2",
      "path": "2"
    },
    "912": {
      "fn": "Ballot.vote",
      "offset": [
        2627,
        2682
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "913": {
      "fn": "Ballot.vote",
      "offset": [
        2627,
        2682
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "915": {
      "fn": "Ballot.vote",
      "offset": [
        2627,
        2682
      ],
      "op": "ADD",
      "path": "2"
    },
    "916": {
      "fn": "Ballot.vote",
      "offset": [
        2627,
        2682
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x310"
    },
    "919": {
      "fn": "Ballot.vote",
      "offset": [
        2627,
        2682
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "920": {
      "fn": "Ballot.vote",
      "offset": [
        2627,
        2682
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xEF7"
    },
    "923": {
      "fn": "Ballot.vote",
      "jump": "i",
      "offset": [
        2627,
        2682
      ],
      "op": "JUMP",
      "path": "2"
    },
    "924": {
      "fn": "Ballot.vote",
      "offset": [
        2627,
        2682
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "925": {
      "fn": "Ballot.vote",
      "offset": [
        2701,
        2713
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 5,
      "value": "0x1"
    },
    "927": {
      "fn": "Ballot.vote",
      "offset": [
        2701,
        2713
      ],
      "op": "DUP2",
      "path": "2"
    },
    "928": {
      "fn": "Ballot.vote",
      "offset": [
        2701,
        2713
      ],
      "op": "ADD",
      "path": "2"
    },
    "929": {
      "fn": "Ballot.vote",
      "offset": [
        2701,
        2713
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "930": {
      "fn": "Ballot.vote",
      "offset": [
        2701,
        2713
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "932": {
      "fn": "Ballot.vote",
      "offset": [
        2701,
        2713
      ],
      "op": "AND",
      "path": "2"
    },
    "933": {
      "branch": 39,
      "fn": "Ballot.vote",
      "offset": [
        2700,
        2713
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "934": {
      "fn": "Ballot.vote",
      "offset": [
        2692,
        2744
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3F1"
    },
    "937": {
      "branch": 39,
      "fn": "Ballot.vote",
      "offset": [
        2692,
        2744
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "938": {
      "fn": "Ballot.vote",
      "offset": [
        2692,
        2744
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "940": {
      "fn": "Ballot.vote",
      "offset": [
        2692,
        2744
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "941": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "945": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "947": {
      "op": "SHL"
    },
    "948": {
      "fn": "Ballot.vote",
      "offset": [
        2692,
        2744
      ],
      "op": "DUP2",
      "path": "2"
    },
    "949": {
      "fn": "Ballot.vote",
      "offset": [
        2692,
        2744
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "950": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "952": {
      "fn": "Ballot.vote",
      "offset": [
        2692,
        2744
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "954": {
      "fn": "Ballot.vote",
      "offset": [
        2692,
        2744
      ],
      "op": "DUP3",
      "path": "2"
    },
    "955": {
      "fn": "Ballot.vote",
      "offset": [
        2692,
        2744
      ],
      "op": "ADD",
      "path": "2"
    },
    "956": {
      "op": "MSTORE"
    },
    "957": {
      "op": "PUSH1",
      "value": "0x1A"
    },
    "959": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "961": {
      "op": "DUP3"
    },
    "962": {
      "op": "ADD"
    },
    "963": {
      "op": "MSTORE"
    },
    "964": {
      "op": "PUSH32",
      "value": "0x616464726573732068617320616C726561647920766F74656421000000000000"
    },
    "997": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "999": {
      "op": "DUP3"
    },
    "1000": {
      "op": "ADD"
    },
    "1001": {
      "op": "MSTORE"
    },
    "1002": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1004": {
      "op": "ADD"
    },
    "1005": {
      "fn": "Ballot.vote",
      "offset": [
        2692,
        2744
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x310"
    },
    "1008": {
      "op": "JUMP"
    },
    "1009": {
      "fn": "Ballot.vote",
      "offset": [
        2692,
        2744
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1010": {
      "fn": "Ballot.vote",
      "offset": [
        2778,
        2779
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 6,
      "value": "0x0"
    },
    "1012": {
      "fn": "Ballot.vote",
      "offset": [
        2762,
        2768
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1013": {
      "fn": "Ballot.vote",
      "offset": [
        2762,
        2775
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "1015": {
      "fn": "Ballot.vote",
      "offset": [
        2762,
        2775
      ],
      "op": "ADD",
      "path": "2"
    },
    "1016": {
      "fn": "Ballot.vote",
      "offset": [
        2762,
        2775
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1017": {
      "branch": 40,
      "fn": "Ballot.vote",
      "offset": [
        2762,
        2779
      ],
      "op": "GT",
      "path": "2"
    },
    "1018": {
      "fn": "Ballot.vote",
      "offset": [
        2754,
        2813
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x445"
    },
    "1021": {
      "branch": 40,
      "fn": "Ballot.vote",
      "offset": [
        2754,
        2813
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1022": {
      "fn": "Ballot.vote",
      "offset": [
        2754,
        2813
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1024": {
      "fn": "Ballot.vote",
      "offset": [
        2754,
        2813
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1025": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1029": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1031": {
      "op": "SHL"
    },
    "1032": {
      "fn": "Ballot.vote",
      "offset": [
        2754,
        2813
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1033": {
      "fn": "Ballot.vote",
      "offset": [
        2754,
        2813
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1034": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1036": {
      "fn": "Ballot.vote",
      "offset": [
        2754,
        2813
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1038": {
      "fn": "Ballot.vote",
      "offset": [
        2754,
        2813
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1039": {
      "fn": "Ballot.vote",
      "offset": [
        2754,
        2813
      ],
      "op": "ADD",
      "path": "2"
    },
    "1040": {
      "op": "MSTORE"
    },
    "1041": {
      "op": "PUSH1",
      "value": "0x1D"
    },
    "1043": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1045": {
      "op": "DUP3"
    },
    "1046": {
      "op": "ADD"
    },
    "1047": {
      "op": "MSTORE"
    },
    "1048": {
      "op": "PUSH32",
      "value": "0x61646472657373206E6F7420617070726F76656420746F20766F746521000000"
    },
    "1081": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1083": {
      "op": "DUP3"
    },
    "1084": {
      "op": "ADD"
    },
    "1085": {
      "op": "MSTORE"
    },
    "1086": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1088": {
      "op": "ADD"
    },
    "1089": {
      "fn": "Ballot.vote",
      "offset": [
        2754,
        2813
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x310"
    },
    "1092": {
      "op": "JUMP"
    },
    "1093": {
      "fn": "Ballot.vote",
      "offset": [
        2754,
        2813
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1094": {
      "fn": "Ballot.vote",
      "offset": [
        2854,
        2860
      ],
      "op": "DUP1",
      "path": "2",
      "statement": 7
    },
    "1095": {
      "fn": "Ballot.vote",
      "offset": [
        2854,
        2867
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "1097": {
      "fn": "Ballot.vote",
      "offset": [
        2854,
        2867
      ],
      "op": "ADD",
      "path": "2"
    },
    "1098": {
      "fn": "Ballot.vote",
      "offset": [
        2854,
        2867
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1099": {
      "fn": "Ballot.vote",
      "offset": [
        2824,
        2833
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "1101": {
      "fn": "Ballot.vote",
      "offset": [
        2834,
        2839
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1102": {
      "fn": "Ballot.vote",
      "offset": [
        2824,
        2840
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1103": {
      "fn": "Ballot.vote",
      "offset": [
        2824,
        2840
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1104": {
      "fn": "Ballot.vote",
      "offset": [
        2824,
        2840
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1105": {
      "fn": "Ballot.vote",
      "offset": [
        2824,
        2840
      ],
      "op": "LT",
      "path": "2"
    },
    "1106": {
      "fn": "Ballot.vote",
      "offset": [
        2824,
        2840
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x45D"
    },
    "1109": {
      "fn": "Ballot.vote",
      "offset": [
        2824,
        2840
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1110": {
      "fn": "Ballot.vote",
      "offset": [
        2824,
        2840
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x45D"
    },
    "1113": {
      "fn": "Ballot.vote",
      "offset": [
        2824,
        2840
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xF2E"
    },
    "1116": {
      "fn": "Ballot.vote",
      "jump": "i",
      "offset": [
        2824,
        2840
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1117": {
      "fn": "Ballot.vote",
      "offset": [
        2824,
        2840
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1118": {
      "fn": "Ballot.vote",
      "offset": [
        2824,
        2840
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1119": {
      "fn": "Ballot.vote",
      "offset": [
        2824,
        2840
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1121": {
      "fn": "Ballot.vote",
      "offset": [
        2824,
        2840
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1122": {
      "fn": "Ballot.vote",
      "offset": [
        2824,
        2840
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1124": {
      "fn": "Ballot.vote",
      "offset": [
        2824,
        2840
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1126": {
      "fn": "Ballot.vote",
      "offset": [
        2824,
        2840
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1127": {
      "fn": "Ballot.vote",
      "offset": [
        2824,
        2840
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1128": {
      "fn": "Ballot.vote",
      "offset": [
        2824,
        2840
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "1130": {
      "fn": "Ballot.vote",
      "offset": [
        2824,
        2840
      ],
      "op": "MUL",
      "path": "2"
    },
    "1131": {
      "fn": "Ballot.vote",
      "offset": [
        2824,
        2840
      ],
      "op": "ADD",
      "path": "2"
    },
    "1132": {
      "fn": "Ballot.vote",
      "offset": [
        2824,
        2850
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "1134": {
      "fn": "Ballot.vote",
      "offset": [
        2824,
        2850
      ],
      "op": "ADD",
      "path": "2"
    },
    "1135": {
      "fn": "Ballot.vote",
      "offset": [
        2824,
        2850
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1137": {
      "fn": "Ballot.vote",
      "offset": [
        2824,
        2867
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1138": {
      "fn": "Ballot.vote",
      "offset": [
        2824,
        2867
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1139": {
      "fn": "Ballot.vote",
      "offset": [
        2824,
        2867
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1140": {
      "fn": "Ballot.vote",
      "offset": [
        2824,
        2867
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x47D"
    },
    "1143": {
      "fn": "Ballot.vote",
      "offset": [
        2824,
        2867
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1144": {
      "fn": "Ballot.vote",
      "offset": [
        2824,
        2867
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1145": {
      "fn": "Ballot.vote",
      "offset": [
        2824,
        2867
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xF5A"
    },
    "1148": {
      "fn": "Ballot.vote",
      "jump": "i",
      "offset": [
        2824,
        2867
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1149": {
      "fn": "Ballot.vote",
      "offset": [
        2824,
        2867
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1150": {
      "fn": "Ballot.vote",
      "offset": [
        2824,
        2867
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1151": {
      "fn": "Ballot.vote",
      "offset": [
        2824,
        2867
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1152": {
      "fn": "Ballot.vote",
      "offset": [
        2824,
        2867
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "1153": {
      "op": "POP"
    },
    "1154": {
      "op": "POP"
    },
    "1155": {
      "fn": "Ballot.vote",
      "offset": [
        2893,
        2897
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 8,
      "value": "0x1"
    },
    "1157": {
      "fn": "Ballot.vote",
      "offset": [
        2878,
        2890
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1158": {
      "fn": "Ballot.vote",
      "offset": [
        2878,
        2890
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1159": {
      "fn": "Ballot.vote",
      "offset": [
        2878,
        2890
      ],
      "op": "ADD",
      "path": "2"
    },
    "1160": {
      "fn": "Ballot.vote",
      "offset": [
        2878,
        2897
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1161": {
      "fn": "Ballot.vote",
      "offset": [
        2878,
        2897
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1162": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1164": {
      "op": "NOT"
    },
    "1165": {
      "fn": "Ballot.vote",
      "offset": [
        2878,
        2897
      ],
      "op": "AND",
      "path": "2"
    },
    "1166": {
      "fn": "Ballot.vote",
      "offset": [
        2878,
        2897
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1167": {
      "fn": "Ballot.vote",
      "offset": [
        2878,
        2897
      ],
      "op": "OR",
      "path": "2"
    },
    "1168": {
      "fn": "Ballot.vote",
      "offset": [
        2878,
        2897
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1169": {
      "fn": "Ballot.vote",
      "offset": [
        2878,
        2897
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "1170": {
      "fn": "Ballot.vote",
      "offset": [
        2907,
        2925
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 9
    },
    "1171": {
      "fn": "Ballot.vote",
      "offset": [
        2907,
        2925
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1172": {
      "fn": "Ballot.vote",
      "offset": [
        2878,
        2884
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1173": {
      "fn": "Ballot.vote",
      "offset": [
        2878,
        2884
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1174": {
      "fn": "Ballot.vote",
      "offset": [
        2878,
        2890
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1176": {
      "fn": "Ballot.vote",
      "offset": [
        2878,
        2890
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1177": {
      "fn": "Ballot.vote",
      "offset": [
        2907,
        2925
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4A3"
    },
    "1180": {
      "fn": "Ballot.vote",
      "offset": [
        2907,
        2925
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1181": {
      "fn": "Ballot.vote",
      "offset": [
        2893,
        2897
      ],
      "op": "DUP5",
      "path": "2"
    },
    "1182": {
      "fn": "Ballot.vote",
      "offset": [
        2893,
        2897
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1183": {
      "fn": "Ballot.vote",
      "offset": [
        2907,
        2925
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xF5A"
    },
    "1186": {
      "fn": "Ballot.vote",
      "jump": "i",
      "offset": [
        2907,
        2925
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1187": {
      "fn": "Ballot.vote",
      "offset": [
        2907,
        2925
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1188": {
      "fn": "Ballot.vote",
      "offset": [
        2907,
        2925
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1189": {
      "fn": "Ballot.vote",
      "offset": [
        2907,
        2925
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1190": {
      "fn": "Ballot.vote",
      "offset": [
        2907,
        2925
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "1191": {
      "op": "POP"
    },
    "1192": {
      "op": "POP"
    },
    "1193": {
      "op": "POP"
    },
    "1194": {
      "op": "POP"
    },
    "1195": {
      "fn": "Ballot.vote",
      "jump": "o",
      "offset": [
        2346,
        2932
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1196": {
      "offset": [
        571,
        598
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1197": {
      "fn": "Ballot.vote",
      "offset": [
        571,
        598
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "1199": {
      "fn": "Ballot.vote",
      "offset": [
        571,
        598
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1200": {
      "fn": "Ballot.vote",
      "offset": [
        571,
        598
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1201": {
      "fn": "Ballot.vote",
      "offset": [
        571,
        598
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1202": {
      "fn": "Ballot.vote",
      "offset": [
        571,
        598
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1203": {
      "fn": "Ballot.vote",
      "offset": [
        571,
        598
      ],
      "op": "LT",
      "path": "2"
    },
    "1204": {
      "fn": "Ballot.vote",
      "offset": [
        571,
        598
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4BC"
    },
    "1207": {
      "fn": "Ballot.vote",
      "offset": [
        571,
        598
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1208": {
      "fn": "Ballot.vote",
      "offset": [
        571,
        598
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1210": {
      "fn": "Ballot.vote",
      "offset": [
        571,
        598
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1211": {
      "fn": "Ballot.vote",
      "offset": [
        571,
        598
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1212": {
      "fn": "Ballot.vote",
      "offset": [
        571,
        598
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1213": {
      "fn": "Ballot.vote",
      "offset": [
        571,
        598
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1214": {
      "fn": "Ballot.vote",
      "offset": [
        571,
        598
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1216": {
      "fn": "Ballot.vote",
      "offset": [
        571,
        598
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1217": {
      "fn": "Ballot.vote",
      "offset": [
        571,
        598
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1219": {
      "fn": "Ballot.vote",
      "offset": [
        571,
        598
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1221": {
      "fn": "Ballot.vote",
      "offset": [
        571,
        598
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1222": {
      "fn": "Ballot.vote",
      "offset": [
        571,
        598
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1223": {
      "fn": "Ballot.vote",
      "offset": [
        571,
        598
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "1225": {
      "fn": "Ballot.vote",
      "offset": [
        571,
        598
      ],
      "op": "MUL",
      "path": "2"
    },
    "1226": {
      "fn": "Ballot.vote",
      "offset": [
        571,
        598
      ],
      "op": "ADD",
      "path": "2"
    },
    "1227": {
      "fn": "Ballot.vote",
      "offset": [
        571,
        598
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1229": {
      "fn": "Ballot.vote",
      "offset": [
        571,
        598
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1230": {
      "fn": "Ballot.vote",
      "offset": [
        571,
        598
      ],
      "op": "POP",
      "path": "2"
    },
    "1231": {
      "fn": "Ballot.vote",
      "offset": [
        571,
        598
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1232": {
      "fn": "Ballot.vote",
      "offset": [
        571,
        598
      ],
      "op": "POP",
      "path": "2"
    },
    "1233": {
      "fn": "Ballot.vote",
      "offset": [
        571,
        598
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1234": {
      "fn": "Ballot.vote",
      "offset": [
        571,
        598
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1236": {
      "fn": "Ballot.vote",
      "offset": [
        571,
        598
      ],
      "op": "ADD",
      "path": "2"
    },
    "1237": {
      "fn": "Ballot.vote",
      "offset": [
        571,
        598
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1238": {
      "fn": "Ballot.vote",
      "offset": [
        571,
        598
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1239": {
      "fn": "Ballot.vote",
      "offset": [
        571,
        598
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4DF"
    },
    "1242": {
      "fn": "Ballot.vote",
      "offset": [
        571,
        598
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1243": {
      "fn": "Ballot.vote",
      "offset": [
        571,
        598
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xF72"
    },
    "1246": {
      "fn": "Ballot.vote",
      "jump": "i",
      "offset": [
        571,
        598
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1247": {
      "fn": "Ballot.vote",
      "offset": [
        571,
        598
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1248": {
      "fn": "Ballot.vote",
      "offset": [
        571,
        598
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1249": {
      "fn": "Ballot.vote",
      "offset": [
        571,
        598
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "1251": {
      "fn": "Ballot.vote",
      "offset": [
        571,
        598
      ],
      "op": "ADD",
      "path": "2"
    },
    "1252": {
      "fn": "Ballot.vote",
      "offset": [
        571,
        598
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1254": {
      "fn": "Ballot.vote",
      "offset": [
        571,
        598
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1255": {
      "fn": "Ballot.vote",
      "offset": [
        571,
        598
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1256": {
      "fn": "Ballot.vote",
      "offset": [
        571,
        598
      ],
      "op": "DIV",
      "path": "2"
    },
    "1257": {
      "fn": "Ballot.vote",
      "offset": [
        571,
        598
      ],
      "op": "MUL",
      "path": "2"
    },
    "1258": {
      "fn": "Ballot.vote",
      "offset": [
        571,
        598
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1260": {
      "fn": "Ballot.vote",
      "offset": [
        571,
        598
      ],
      "op": "ADD",
      "path": "2"
    },
    "1261": {
      "fn": "Ballot.vote",
      "offset": [
        571,
        598
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1263": {
      "fn": "Ballot.vote",
      "offset": [
        571,
        598
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1264": {
      "fn": "Ballot.vote",
      "offset": [
        571,
        598
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1265": {
      "fn": "Ballot.vote",
      "offset": [
        571,
        598
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1266": {
      "fn": "Ballot.vote",
      "offset": [
        571,
        598
      ],
      "op": "ADD",
      "path": "2"
    },
    "1267": {
      "fn": "Ballot.vote",
      "offset": [
        571,
        598
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1269": {
      "fn": "Ballot.vote",
      "offset": [
        571,
        598
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1270": {
      "fn": "Ballot.vote",
      "offset": [
        571,
        598
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1271": {
      "fn": "Ballot.vote",
      "offset": [
        571,
        598
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "1272": {
      "fn": "Ballot.vote",
      "offset": [
        571,
        598
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1273": {
      "fn": "Ballot.vote",
      "offset": [
        571,
        598
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1274": {
      "fn": "Ballot.vote",
      "offset": [
        571,
        598
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1275": {
      "fn": "Ballot.vote",
      "offset": [
        571,
        598
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1276": {
      "fn": "Ballot.vote",
      "offset": [
        571,
        598
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1277": {
      "fn": "Ballot.vote",
      "offset": [
        571,
        598
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1279": {
      "fn": "Ballot.vote",
      "offset": [
        571,
        598
      ],
      "op": "ADD",
      "path": "2"
    },
    "1280": {
      "fn": "Ballot.vote",
      "offset": [
        571,
        598
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1281": {
      "fn": "Ballot.vote",
      "offset": [
        571,
        598
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1282": {
      "fn": "Ballot.vote",
      "offset": [
        571,
        598
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1283": {
      "fn": "Ballot.vote",
      "offset": [
        571,
        598
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x50B"
    },
    "1286": {
      "fn": "Ballot.vote",
      "offset": [
        571,
        598
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1287": {
      "fn": "Ballot.vote",
      "offset": [
        571,
        598
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xF72"
    },
    "1290": {
      "fn": "Ballot.vote",
      "jump": "i",
      "offset": [
        571,
        598
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1291": {
      "fn": "Ballot.vote",
      "offset": [
        571,
        598
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1292": {
      "fn": "Ballot.vote",
      "offset": [
        571,
        598
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1293": {
      "fn": "Ballot.vote",
      "offset": [
        571,
        598
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1294": {
      "fn": "Ballot.vote",
      "offset": [
        571,
        598
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x558"
    },
    "1297": {
      "fn": "Ballot.vote",
      "offset": [
        571,
        598
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1298": {
      "fn": "Ballot.vote",
      "offset": [
        571,
        598
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1299": {
      "fn": "Ballot.vote",
      "offset": [
        571,
        598
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "1301": {
      "fn": "Ballot.vote",
      "offset": [
        571,
        598
      ],
      "op": "LT",
      "path": "2"
    },
    "1302": {
      "fn": "Ballot.vote",
      "offset": [
        571,
        598
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x52D"
    },
    "1305": {
      "fn": "Ballot.vote",
      "offset": [
        571,
        598
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1306": {
      "fn": "Ballot.vote",
      "offset": [
        571,
        598
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "1309": {
      "fn": "Ballot.vote",
      "offset": [
        571,
        598
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1310": {
      "fn": "Ballot.vote",
      "offset": [
        571,
        598
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1311": {
      "fn": "Ballot.vote",
      "offset": [
        571,
        598
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1312": {
      "fn": "Ballot.vote",
      "offset": [
        571,
        598
      ],
      "op": "DIV",
      "path": "2"
    },
    "1313": {
      "fn": "Ballot.vote",
      "offset": [
        571,
        598
      ],
      "op": "MUL",
      "path": "2"
    },
    "1314": {
      "fn": "Ballot.vote",
      "offset": [
        571,
        598
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1315": {
      "fn": "Ballot.vote",
      "offset": [
        571,
        598
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1316": {
      "fn": "Ballot.vote",
      "offset": [
        571,
        598
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1317": {
      "fn": "Ballot.vote",
      "offset": [
        571,
        598
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1319": {
      "fn": "Ballot.vote",
      "offset": [
        571,
        598
      ],
      "op": "ADD",
      "path": "2"
    },
    "1320": {
      "fn": "Ballot.vote",
      "offset": [
        571,
        598
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1321": {
      "fn": "Ballot.vote",
      "offset": [
        571,
        598
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x558"
    },
    "1324": {
      "fn": "Ballot.vote",
      "offset": [
        571,
        598
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1325": {
      "fn": "Ballot.vote",
      "offset": [
        571,
        598
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1326": {
      "fn": "Ballot.vote",
      "offset": [
        571,
        598
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1327": {
      "fn": "Ballot.vote",
      "offset": [
        571,
        598
      ],
      "op": "ADD",
      "path": "2"
    },
    "1328": {
      "fn": "Ballot.vote",
      "offset": [
        571,
        598
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1329": {
      "fn": "Ballot.vote",
      "offset": [
        571,
        598
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1330": {
      "fn": "Ballot.vote",
      "offset": [
        571,
        598
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1332": {
      "fn": "Ballot.vote",
      "offset": [
        571,
        598
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1333": {
      "fn": "Ballot.vote",
      "offset": [
        571,
        598
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1335": {
      "fn": "Ballot.vote",
      "offset": [
        571,
        598
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1337": {
      "fn": "Ballot.vote",
      "offset": [
        571,
        598
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1338": {
      "fn": "Ballot.vote",
      "offset": [
        571,
        598
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1339": {
      "fn": "Ballot.vote",
      "offset": [
        571,
        598
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1340": {
      "fn": "Ballot.vote",
      "offset": [
        571,
        598
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1341": {
      "fn": "Ballot.vote",
      "offset": [
        571,
        598
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1342": {
      "fn": "Ballot.vote",
      "offset": [
        571,
        598
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1343": {
      "fn": "Ballot.vote",
      "offset": [
        571,
        598
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1344": {
      "fn": "Ballot.vote",
      "offset": [
        571,
        598
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1345": {
      "fn": "Ballot.vote",
      "offset": [
        571,
        598
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "1347": {
      "fn": "Ballot.vote",
      "offset": [
        571,
        598
      ],
      "op": "ADD",
      "path": "2"
    },
    "1348": {
      "fn": "Ballot.vote",
      "offset": [
        571,
        598
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1349": {
      "fn": "Ballot.vote",
      "offset": [
        571,
        598
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1351": {
      "fn": "Ballot.vote",
      "offset": [
        571,
        598
      ],
      "op": "ADD",
      "path": "2"
    },
    "1352": {
      "fn": "Ballot.vote",
      "offset": [
        571,
        598
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1353": {
      "fn": "Ballot.vote",
      "offset": [
        571,
        598
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1354": {
      "fn": "Ballot.vote",
      "offset": [
        571,
        598
      ],
      "op": "GT",
      "path": "2"
    },
    "1355": {
      "fn": "Ballot.vote",
      "offset": [
        571,
        598
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x53B"
    },
    "1358": {
      "fn": "Ballot.vote",
      "offset": [
        571,
        598
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1359": {
      "fn": "Ballot.vote",
      "offset": [
        571,
        598
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1360": {
      "fn": "Ballot.vote",
      "offset": [
        571,
        598
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1361": {
      "fn": "Ballot.vote",
      "offset": [
        571,
        598
      ],
      "op": "SUB",
      "path": "2"
    },
    "1362": {
      "fn": "Ballot.vote",
      "offset": [
        571,
        598
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "1364": {
      "fn": "Ballot.vote",
      "offset": [
        571,
        598
      ],
      "op": "AND",
      "path": "2"
    },
    "1365": {
      "fn": "Ballot.vote",
      "offset": [
        571,
        598
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1366": {
      "fn": "Ballot.vote",
      "offset": [
        571,
        598
      ],
      "op": "ADD",
      "path": "2"
    },
    "1367": {
      "fn": "Ballot.vote",
      "offset": [
        571,
        598
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1368": {
      "fn": "Ballot.vote",
      "offset": [
        571,
        598
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1369": {
      "fn": "Ballot.vote",
      "offset": [
        571,
        598
      ],
      "op": "POP",
      "path": "2"
    },
    "1370": {
      "fn": "Ballot.vote",
      "offset": [
        571,
        598
      ],
      "op": "POP",
      "path": "2"
    },
    "1371": {
      "fn": "Ballot.vote",
      "offset": [
        571,
        598
      ],
      "op": "POP",
      "path": "2"
    },
    "1372": {
      "fn": "Ballot.vote",
      "offset": [
        571,
        598
      ],
      "op": "POP",
      "path": "2"
    },
    "1373": {
      "fn": "Ballot.vote",
      "offset": [
        571,
        598
      ],
      "op": "POP",
      "path": "2"
    },
    "1374": {
      "fn": "Ballot.vote",
      "offset": [
        571,
        598
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1375": {
      "fn": "Ballot.vote",
      "offset": [
        571,
        598
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1376": {
      "fn": "Ballot.vote",
      "offset": [
        571,
        598
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "1378": {
      "fn": "Ballot.vote",
      "offset": [
        571,
        598
      ],
      "op": "ADD",
      "path": "2"
    },
    "1379": {
      "fn": "Ballot.vote",
      "offset": [
        571,
        598
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1380": {
      "fn": "Ballot.vote",
      "offset": [
        571,
        598
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1381": {
      "fn": "Ballot.vote",
      "offset": [
        571,
        598
      ],
      "op": "POP",
      "path": "2"
    },
    "1382": {
      "fn": "Ballot.vote",
      "offset": [
        571,
        598
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1383": {
      "fn": "Ballot.vote",
      "jump": "o",
      "offset": [
        571,
        598
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1384": {
      "fn": "Ballot.addProposals",
      "offset": [
        1212,
        1525
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1385": {
      "fn": "Ownable.owner",
      "offset": [
        1082,
        1089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1387": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1388": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1390": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1392": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1394": {
      "op": "SHL"
    },
    "1395": {
      "op": "SUB"
    },
    "1396": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "1397": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "1",
      "statement": 10
    },
    "1398": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "1399": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x592"
    },
    "1402": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1403": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1405": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1406": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1410": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1412": {
      "op": "SHL"
    },
    "1413": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1414": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1415": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1417": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "1418": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x310"
    },
    "1421": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1422": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xFAD"
    },
    "1425": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1426": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1427": {
      "fn": "Ballot.addProposals",
      "offset": [
        1303,
        1316
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 11,
      "value": "0x0"
    },
    "1429": {
      "fn": "Ballot.addProposals",
      "offset": [
        1303,
        1316
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1430": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1432": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "1434": {
      "op": "SHL"
    },
    "1435": {
      "fn": "Ballot.addProposals",
      "offset": [
        1303,
        1316
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1436": {
      "fn": "Ballot.addProposals",
      "offset": [
        1303,
        1316
      ],
      "op": "DIV",
      "path": "2"
    },
    "1437": {
      "fn": "Ballot.addProposals",
      "offset": [
        1303,
        1316
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "1439": {
      "fn": "Ballot.addProposals",
      "offset": [
        1303,
        1316
      ],
      "op": "AND",
      "path": "2"
    },
    "1440": {
      "branch": 41,
      "fn": "Ballot.addProposals",
      "offset": [
        1303,
        1325
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1441": {
      "fn": "Ballot.addProposals",
      "offset": [
        1295,
        1363
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x5BC"
    },
    "1444": {
      "branch": 41,
      "fn": "Ballot.addProposals",
      "offset": [
        1295,
        1363
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1445": {
      "fn": "Ballot.addProposals",
      "offset": [
        1295,
        1363
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1447": {
      "fn": "Ballot.addProposals",
      "offset": [
        1295,
        1363
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1448": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1452": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1454": {
      "op": "SHL"
    },
    "1455": {
      "fn": "Ballot.addProposals",
      "offset": [
        1295,
        1363
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1456": {
      "fn": "Ballot.addProposals",
      "offset": [
        1295,
        1363
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1457": {
      "fn": "Ballot.addProposals",
      "offset": [
        1295,
        1363
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1459": {
      "fn": "Ballot.addProposals",
      "offset": [
        1295,
        1363
      ],
      "op": "ADD",
      "path": "2"
    },
    "1460": {
      "fn": "Ballot.addProposals",
      "offset": [
        1295,
        1363
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x310"
    },
    "1463": {
      "fn": "Ballot.addProposals",
      "offset": [
        1295,
        1363
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1464": {
      "fn": "Ballot.addProposals",
      "offset": [
        1295,
        1363
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFE2"
    },
    "1467": {
      "fn": "Ballot.addProposals",
      "jump": "i",
      "offset": [
        1295,
        1363
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1468": {
      "fn": "Ballot.addProposals",
      "offset": [
        1295,
        1363
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1469": {
      "fn": "Ballot.addProposals",
      "offset": [
        1378,
        1387
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1471": {
      "fn": "Ballot.addProposals",
      "offset": [
        1373,
        1519
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1472": {
      "fn": "Ballot.addProposals",
      "offset": [
        1397,
        1413
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1473": {
      "fn": "Ballot.addProposals",
      "offset": [
        1397,
        1420
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1474": {
      "fn": "Ballot.addProposals",
      "offset": [
        1393,
        1394
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1475": {
      "fn": "Ballot.addProposals",
      "offset": [
        1393,
        1420
      ],
      "op": "LT",
      "path": "2"
    },
    "1476": {
      "fn": "Ballot.addProposals",
      "offset": [
        1373,
        1519
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1477": {
      "fn": "Ballot.addProposals",
      "offset": [
        1373,
        1519
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x646"
    },
    "1480": {
      "fn": "Ballot.addProposals",
      "offset": [
        1373,
        1519
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1481": {
      "fn": "Ballot.addProposals",
      "offset": [
        1441,
        1450
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 12,
      "value": "0x1"
    },
    "1483": {
      "fn": "Ballot.addProposals",
      "offset": [
        1456,
        1507
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1485": {
      "fn": "Ballot.addProposals",
      "offset": [
        1456,
        1507
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1486": {
      "fn": "Ballot.addProposals",
      "offset": [
        1456,
        1507
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1487": {
      "fn": "Ballot.addProposals",
      "offset": [
        1456,
        1507
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1489": {
      "fn": "Ballot.addProposals",
      "offset": [
        1456,
        1507
      ],
      "op": "ADD",
      "path": "2"
    },
    "1490": {
      "fn": "Ballot.addProposals",
      "offset": [
        1456,
        1507
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1492": {
      "fn": "Ballot.addProposals",
      "offset": [
        1456,
        1507
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1493": {
      "fn": "Ballot.addProposals",
      "offset": [
        1456,
        1507
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1494": {
      "fn": "Ballot.addProposals",
      "offset": [
        1472,
        1488
      ],
      "op": "DUP5",
      "path": "2"
    },
    "1495": {
      "fn": "Ballot.addProposals",
      "offset": [
        1489,
        1490
      ],
      "op": "DUP5",
      "path": "2"
    },
    "1496": {
      "fn": "Ballot.addProposals",
      "offset": [
        1472,
        1491
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1497": {
      "fn": "Ballot.addProposals",
      "offset": [
        1472,
        1491
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1498": {
      "fn": "Ballot.addProposals",
      "offset": [
        1472,
        1491
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1499": {
      "fn": "Ballot.addProposals",
      "offset": [
        1472,
        1491
      ],
      "op": "LT",
      "path": "2"
    },
    "1500": {
      "fn": "Ballot.addProposals",
      "offset": [
        1472,
        1491
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x5E7"
    },
    "1503": {
      "fn": "Ballot.addProposals",
      "offset": [
        1472,
        1491
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1504": {
      "fn": "Ballot.addProposals",
      "offset": [
        1472,
        1491
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x5E7"
    },
    "1507": {
      "fn": "Ballot.addProposals",
      "offset": [
        1472,
        1491
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xF2E"
    },
    "1510": {
      "fn": "Ballot.addProposals",
      "jump": "i",
      "offset": [
        1472,
        1491
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1511": {
      "fn": "Ballot.addProposals",
      "offset": [
        1472,
        1491
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1512": {
      "fn": "Ballot.addProposals",
      "offset": [
        1472,
        1491
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1514": {
      "fn": "Ballot.addProposals",
      "offset": [
        1472,
        1491
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1515": {
      "fn": "Ballot.addProposals",
      "offset": [
        1472,
        1491
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1516": {
      "fn": "Ballot.addProposals",
      "offset": [
        1472,
        1491
      ],
      "op": "MUL",
      "path": "2"
    },
    "1517": {
      "fn": "Ballot.addProposals",
      "offset": [
        1472,
        1491
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1518": {
      "fn": "Ballot.addProposals",
      "offset": [
        1472,
        1491
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1519": {
      "fn": "Ballot.addProposals",
      "offset": [
        1472,
        1491
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1520": {
      "fn": "Ballot.addProposals",
      "offset": [
        1472,
        1491
      ],
      "op": "ADD",
      "path": "2"
    },
    "1521": {
      "fn": "Ballot.addProposals",
      "offset": [
        1472,
        1491
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1522": {
      "fn": "Ballot.addProposals",
      "offset": [
        1472,
        1491
      ],
      "op": "ADD",
      "path": "2"
    },
    "1523": {
      "fn": "Ballot.addProposals",
      "offset": [
        1472,
        1491
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1524": {
      "fn": "Ballot.addProposals",
      "offset": [
        1456,
        1507
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1525": {
      "fn": "Ballot.addProposals",
      "offset": [
        1456,
        1507
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1526": {
      "fn": "Ballot.addProposals",
      "offset": [
        1504,
        1505
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1528": {
      "fn": "Ballot.addProposals",
      "offset": [
        1456,
        1507
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1529": {
      "fn": "Ballot.addProposals",
      "offset": [
        1456,
        1507
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1530": {
      "fn": "Ballot.addProposals",
      "offset": [
        1456,
        1507
      ],
      "op": "ADD",
      "path": "2"
    },
    "1531": {
      "fn": "Ballot.addProposals",
      "offset": [
        1456,
        1507
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1532": {
      "fn": "Ballot.addProposals",
      "offset": [
        1456,
        1507
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1533": {
      "fn": "Ballot.addProposals",
      "offset": [
        1456,
        1507
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1534": {
      "fn": "Ballot.addProposals",
      "offset": [
        1441,
        1508
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1535": {
      "fn": "Ballot.addProposals",
      "offset": [
        1441,
        1508
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1536": {
      "fn": "Ballot.addProposals",
      "offset": [
        1441,
        1508
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "1538": {
      "fn": "Ballot.addProposals",
      "offset": [
        1441,
        1508
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1539": {
      "fn": "Ballot.addProposals",
      "offset": [
        1441,
        1508
      ],
      "op": "ADD",
      "path": "2"
    },
    "1540": {
      "fn": "Ballot.addProposals",
      "offset": [
        1441,
        1508
      ],
      "op": "DUP6",
      "path": "2"
    },
    "1541": {
      "fn": "Ballot.addProposals",
      "offset": [
        1441,
        1508
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "1542": {
      "fn": "Ballot.addProposals",
      "offset": [
        1441,
        1508
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "1543": {
      "fn": "Ballot.addProposals",
      "offset": [
        1441,
        1508
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1544": {
      "fn": "Ballot.addProposals",
      "offset": [
        1441,
        1508
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1545": {
      "fn": "Ballot.addProposals",
      "offset": [
        1441,
        1508
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1546": {
      "fn": "Ballot.addProposals",
      "offset": [
        1441,
        1508
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1547": {
      "fn": "Ballot.addProposals",
      "offset": [
        1441,
        1508
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1548": {
      "fn": "Ballot.addProposals",
      "offset": [
        1441,
        1508
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1549": {
      "fn": "Ballot.addProposals",
      "offset": [
        1441,
        1508
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1550": {
      "fn": "Ballot.addProposals",
      "offset": [
        1441,
        1508
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1551": {
      "fn": "Ballot.addProposals",
      "offset": [
        1441,
        1508
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1552": {
      "fn": "Ballot.addProposals",
      "offset": [
        1441,
        1508
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1553": {
      "fn": "Ballot.addProposals",
      "offset": [
        1441,
        1508
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "1554": {
      "fn": "Ballot.addProposals",
      "offset": [
        1441,
        1508
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "1555": {
      "fn": "Ballot.addProposals",
      "offset": [
        1441,
        1508
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "1557": {
      "fn": "Ballot.addProposals",
      "offset": [
        1441,
        1508
      ],
      "op": "MUL",
      "path": "2"
    },
    "1558": {
      "fn": "Ballot.addProposals",
      "offset": [
        1441,
        1508
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1559": {
      "fn": "Ballot.addProposals",
      "offset": [
        1441,
        1508
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1560": {
      "fn": "Ballot.addProposals",
      "offset": [
        1441,
        1508
      ],
      "op": "ADD",
      "path": "2"
    },
    "1561": {
      "fn": "Ballot.addProposals",
      "offset": [
        1441,
        1508
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "1562": {
      "fn": "Ballot.addProposals",
      "offset": [
        1441,
        1508
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x626"
    },
    "1565": {
      "fn": "Ballot.addProposals",
      "offset": [
        1441,
        1508
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "1566": {
      "fn": "Ballot.addProposals",
      "offset": [
        1441,
        1508
      ],
      "op": "DUP5",
      "path": "2"
    },
    "1567": {
      "fn": "Ballot.addProposals",
      "offset": [
        1441,
        1508
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "1568": {
      "fn": "Ballot.addProposals",
      "offset": [
        1441,
        1508
      ],
      "op": "ADD",
      "path": "2"
    },
    "1569": {
      "fn": "Ballot.addProposals",
      "offset": [
        1441,
        1508
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1570": {
      "fn": "Ballot.addProposals",
      "offset": [
        1441,
        1508
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC33"
    },
    "1573": {
      "fn": "Ballot.addProposals",
      "jump": "i",
      "offset": [
        1441,
        1508
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1574": {
      "fn": "Ballot.addProposals",
      "offset": [
        1441,
        1508
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1575": {
      "fn": "Ballot.addProposals",
      "offset": [
        1441,
        1508
      ],
      "op": "POP",
      "path": "2"
    },
    "1576": {
      "fn": "Ballot.addProposals",
      "offset": [
        1441,
        1508
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1578": {
      "fn": "Ballot.addProposals",
      "offset": [
        1441,
        1508
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1579": {
      "fn": "Ballot.addProposals",
      "offset": [
        1441,
        1508
      ],
      "op": "ADD",
      "path": "2"
    },
    "1580": {
      "fn": "Ballot.addProposals",
      "offset": [
        1441,
        1508
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1581": {
      "fn": "Ballot.addProposals",
      "offset": [
        1441,
        1508
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1582": {
      "fn": "Ballot.addProposals",
      "offset": [
        1441,
        1508
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "1584": {
      "fn": "Ballot.addProposals",
      "offset": [
        1441,
        1508
      ],
      "op": "ADD",
      "path": "2"
    },
    "1585": {
      "fn": "Ballot.addProposals",
      "offset": [
        1441,
        1508
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "1586": {
      "fn": "Ballot.addProposals",
      "offset": [
        1441,
        1508
      ],
      "op": "POP",
      "path": "2"
    },
    "1587": {
      "fn": "Ballot.addProposals",
      "offset": [
        1441,
        1508
      ],
      "op": "POP",
      "path": "2"
    },
    "1588": {
      "fn": "Ballot.addProposals",
      "offset": [
        1422,
        1425
      ],
      "op": "DUP1",
      "path": "2",
      "statement": 13
    },
    "1589": {
      "fn": "Ballot.addProposals",
      "offset": [
        1422,
        1425
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1590": {
      "fn": "Ballot.addProposals",
      "offset": [
        1422,
        1425
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x63E"
    },
    "1593": {
      "fn": "Ballot.addProposals",
      "offset": [
        1422,
        1425
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1594": {
      "fn": "Ballot.addProposals",
      "offset": [
        1422,
        1425
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1023"
    },
    "1597": {
      "fn": "Ballot.addProposals",
      "jump": "i",
      "offset": [
        1422,
        1425
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1598": {
      "fn": "Ballot.addProposals",
      "offset": [
        1422,
        1425
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1599": {
      "fn": "Ballot.addProposals",
      "offset": [
        1422,
        1425
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1600": {
      "fn": "Ballot.addProposals",
      "offset": [
        1422,
        1425
      ],
      "op": "POP",
      "path": "2"
    },
    "1601": {
      "fn": "Ballot.addProposals",
      "offset": [
        1422,
        1425
      ],
      "op": "POP",
      "path": "2"
    },
    "1602": {
      "fn": "Ballot.addProposals",
      "offset": [
        1373,
        1519
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x5BF"
    },
    "1605": {
      "fn": "Ballot.addProposals",
      "offset": [
        1373,
        1519
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1606": {
      "fn": "Ballot.addProposals",
      "offset": [
        1373,
        1519
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1607": {
      "fn": "Ballot.addProposals",
      "offset": [
        1373,
        1519
      ],
      "op": "POP",
      "path": "2"
    },
    "1608": {
      "fn": "Ballot.addProposals",
      "offset": [
        1212,
        1525
      ],
      "op": "POP",
      "path": "2"
    },
    "1609": {
      "fn": "Ballot.addProposals",
      "jump": "o",
      "offset": [
        1212,
        1525
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1610": {
      "fn": "Ballot.getResults",
      "offset": [
        3981,
        4488
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1611": {
      "fn": "Ballot.getResults",
      "offset": [
        4048,
        4069
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "1613": {
      "fn": "Ballot.getResults",
      "offset": [
        4071,
        4096
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1615": {
      "fn": "Ballot.getResults",
      "offset": [
        4120,
        4133
      ],
      "op": "DUP1",
      "path": "2",
      "statement": 14
    },
    "1616": {
      "fn": "Ballot.getResults",
      "offset": [
        4120,
        4133
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x15"
    },
    "1618": {
      "fn": "Ballot.getResults",
      "offset": [
        4120,
        4133
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1619": {
      "fn": "Ballot.getResults",
      "offset": [
        4120,
        4133
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1620": {
      "fn": "Ballot.getResults",
      "offset": [
        4120,
        4133
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1621": {
      "fn": "Ballot.getResults",
      "offset": [
        4120,
        4133
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "1624": {
      "fn": "Ballot.getResults",
      "offset": [
        4120,
        4133
      ],
      "op": "EXP",
      "path": "2"
    },
    "1625": {
      "fn": "Ballot.getResults",
      "offset": [
        4120,
        4133
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1626": {
      "fn": "Ballot.getResults",
      "offset": [
        4120,
        4133
      ],
      "op": "DIV",
      "path": "2"
    },
    "1627": {
      "fn": "Ballot.getResults",
      "offset": [
        4120,
        4133
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "1629": {
      "fn": "Ballot.getResults",
      "offset": [
        4120,
        4133
      ],
      "op": "AND",
      "path": "2"
    },
    "1630": {
      "fn": "Ballot.getResults",
      "offset": [
        4120,
        4141
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1631": {
      "fn": "Ballot.getResults",
      "offset": [
        4120,
        4141
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1632": {
      "fn": "Ballot.getResults",
      "offset": [
        4137,
        4141
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "1634": {
      "fn": "Ballot.getResults",
      "offset": [
        4120,
        4141
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1635": {
      "fn": "Ballot.getResults",
      "offset": [
        4120,
        4141
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1636": {
      "branch": 42,
      "fn": "Ballot.getResults",
      "offset": [
        4120,
        4141
      ],
      "op": "EQ",
      "path": "2"
    },
    "1637": {
      "fn": "Ballot.getResults",
      "offset": [
        4112,
        4167
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x6A8"
    },
    "1640": {
      "branch": 42,
      "fn": "Ballot.getResults",
      "offset": [
        4112,
        4167
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1641": {
      "fn": "Ballot.getResults",
      "offset": [
        4112,
        4167
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1643": {
      "fn": "Ballot.getResults",
      "offset": [
        4112,
        4167
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1644": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1648": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1650": {
      "op": "SHL"
    },
    "1651": {
      "fn": "Ballot.getResults",
      "offset": [
        4112,
        4167
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1652": {
      "fn": "Ballot.getResults",
      "offset": [
        4112,
        4167
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1653": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1655": {
      "fn": "Ballot.getResults",
      "offset": [
        4112,
        4167
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1657": {
      "fn": "Ballot.getResults",
      "offset": [
        4112,
        4167
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1658": {
      "fn": "Ballot.getResults",
      "offset": [
        4112,
        4167
      ],
      "op": "ADD",
      "path": "2"
    },
    "1659": {
      "op": "MSTORE"
    },
    "1660": {
      "op": "PUSH1",
      "value": "0x15"
    },
    "1662": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1664": {
      "op": "DUP3"
    },
    "1665": {
      "op": "ADD"
    },
    "1666": {
      "op": "MSTORE"
    },
    "1667": {
      "op": "PUSH21",
      "value": "0x3130B63637BA1034B99039BA34B6361037B832B717"
    },
    "1689": {
      "op": "PUSH1",
      "value": "0x59"
    },
    "1691": {
      "op": "SHL"
    },
    "1692": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1694": {
      "op": "DUP3"
    },
    "1695": {
      "op": "ADD"
    },
    "1696": {
      "op": "MSTORE"
    },
    "1697": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1699": {
      "op": "ADD"
    },
    "1700": {
      "fn": "Ballot.getResults",
      "offset": [
        4112,
        4167
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x310"
    },
    "1703": {
      "op": "JUMP"
    },
    "1704": {
      "fn": "Ballot.getResults",
      "offset": [
        4112,
        4167
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1705": {
      "fn": "Ballot.getResults",
      "offset": [
        4178,
        4198
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "1707": {
      "fn": "Ballot.getResults",
      "offset": [
        4208,
        4221
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1709": {
      "fn": "Ballot.getResults",
      "offset": [
        4241,
        4250
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1710": {
      "fn": "Ballot.getResults",
      "offset": [
        4236,
        4450
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1711": {
      "fn": "Ballot.getResults",
      "offset": [
        4260,
        4269
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "1713": {
      "fn": "Ballot.getResults",
      "offset": [
        4260,
        4276
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1714": {
      "fn": "Ballot.getResults",
      "offset": [
        4256,
        4276
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1715": {
      "fn": "Ballot.getResults",
      "offset": [
        4256,
        4276
      ],
      "op": "LT",
      "path": "2"
    },
    "1716": {
      "fn": "Ballot.getResults",
      "offset": [
        4236,
        4450
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1717": {
      "fn": "Ballot.getResults",
      "offset": [
        4236,
        4450
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7CD"
    },
    "1720": {
      "fn": "Ballot.getResults",
      "offset": [
        4236,
        4450
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1721": {
      "fn": "Ballot.getResults",
      "offset": [
        4326,
        4331
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1722": {
      "fn": "Ballot.getResults",
      "offset": [
        4301,
        4310
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "1724": {
      "fn": "Ballot.getResults",
      "offset": [
        4311,
        4312
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1725": {
      "fn": "Ballot.getResults",
      "offset": [
        4301,
        4313
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1726": {
      "fn": "Ballot.getResults",
      "offset": [
        4301,
        4313
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1727": {
      "fn": "Ballot.getResults",
      "offset": [
        4301,
        4313
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1728": {
      "fn": "Ballot.getResults",
      "offset": [
        4301,
        4313
      ],
      "op": "LT",
      "path": "2"
    },
    "1729": {
      "fn": "Ballot.getResults",
      "offset": [
        4301,
        4313
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x6CC"
    },
    "1732": {
      "fn": "Ballot.getResults",
      "offset": [
        4301,
        4313
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1733": {
      "fn": "Ballot.getResults",
      "offset": [
        4301,
        4313
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x6CC"
    },
    "1736": {
      "fn": "Ballot.getResults",
      "offset": [
        4301,
        4313
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xF2E"
    },
    "1739": {
      "fn": "Ballot.getResults",
      "jump": "i",
      "offset": [
        4301,
        4313
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1740": {
      "fn": "Ballot.getResults",
      "offset": [
        4301,
        4313
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1741": {
      "fn": "Ballot.getResults",
      "offset": [
        4301,
        4313
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1742": {
      "fn": "Ballot.getResults",
      "offset": [
        4301,
        4313
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1744": {
      "fn": "Ballot.getResults",
      "offset": [
        4301,
        4313
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1745": {
      "fn": "Ballot.getResults",
      "offset": [
        4301,
        4313
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1747": {
      "fn": "Ballot.getResults",
      "offset": [
        4301,
        4313
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1749": {
      "fn": "Ballot.getResults",
      "offset": [
        4301,
        4313
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1750": {
      "fn": "Ballot.getResults",
      "offset": [
        4301,
        4313
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1751": {
      "fn": "Ballot.getResults",
      "offset": [
        4301,
        4313
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "1753": {
      "fn": "Ballot.getResults",
      "offset": [
        4301,
        4313
      ],
      "op": "MUL",
      "path": "2"
    },
    "1754": {
      "fn": "Ballot.getResults",
      "offset": [
        4301,
        4313
      ],
      "op": "ADD",
      "path": "2"
    },
    "1755": {
      "fn": "Ballot.getResults",
      "offset": [
        4301,
        4323
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "1757": {
      "fn": "Ballot.getResults",
      "offset": [
        4301,
        4323
      ],
      "op": "ADD",
      "path": "2"
    },
    "1758": {
      "fn": "Ballot.getResults",
      "offset": [
        4301,
        4323
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1759": {
      "branch": 43,
      "fn": "Ballot.getResults",
      "offset": [
        4301,
        4331
      ],
      "op": "GT",
      "path": "2"
    },
    "1760": {
      "fn": "Ballot.getResults",
      "offset": [
        4297,
        4440
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1761": {
      "fn": "Ballot.getResults",
      "offset": [
        4297,
        4440
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7BB"
    },
    "1764": {
      "branch": 43,
      "fn": "Ballot.getResults",
      "offset": [
        4297,
        4440
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1765": {
      "fn": "Ballot.getResults",
      "offset": [
        4359,
        4368
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 15,
      "value": "0x1"
    },
    "1767": {
      "fn": "Ballot.getResults",
      "offset": [
        4369,
        4370
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1768": {
      "fn": "Ballot.getResults",
      "offset": [
        4359,
        4371
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1769": {
      "fn": "Ballot.getResults",
      "offset": [
        4359,
        4371
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1770": {
      "fn": "Ballot.getResults",
      "offset": [
        4359,
        4371
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1771": {
      "fn": "Ballot.getResults",
      "offset": [
        4359,
        4371
      ],
      "op": "LT",
      "path": "2"
    },
    "1772": {
      "fn": "Ballot.getResults",
      "offset": [
        4359,
        4371
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x6F7"
    },
    "1775": {
      "fn": "Ballot.getResults",
      "offset": [
        4359,
        4371
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1776": {
      "fn": "Ballot.getResults",
      "offset": [
        4359,
        4371
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x6F7"
    },
    "1779": {
      "fn": "Ballot.getResults",
      "offset": [
        4359,
        4371
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xF2E"
    },
    "1782": {
      "fn": "Ballot.getResults",
      "jump": "i",
      "offset": [
        4359,
        4371
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1783": {
      "fn": "Ballot.getResults",
      "offset": [
        4359,
        4371
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1784": {
      "fn": "Ballot.getResults",
      "offset": [
        4359,
        4371
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1785": {
      "fn": "Ballot.getResults",
      "offset": [
        4359,
        4371
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1787": {
      "fn": "Ballot.getResults",
      "offset": [
        4359,
        4371
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1788": {
      "fn": "Ballot.getResults",
      "offset": [
        4359,
        4371
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1790": {
      "fn": "Ballot.getResults",
      "offset": [
        4359,
        4371
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1792": {
      "fn": "Ballot.getResults",
      "offset": [
        4359,
        4371
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1793": {
      "fn": "Ballot.getResults",
      "offset": [
        4359,
        4371
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1794": {
      "fn": "Ballot.getResults",
      "offset": [
        4359,
        4371
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "1796": {
      "fn": "Ballot.getResults",
      "offset": [
        4359,
        4371
      ],
      "op": "MUL",
      "path": "2"
    },
    "1797": {
      "fn": "Ballot.getResults",
      "offset": [
        4359,
        4371
      ],
      "op": "ADD",
      "path": "2"
    },
    "1798": {
      "fn": "Ballot.getResults",
      "offset": [
        4359,
        4381
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "1800": {
      "fn": "Ballot.getResults",
      "offset": [
        4359,
        4381
      ],
      "op": "ADD",
      "path": "2"
    },
    "1801": {
      "fn": "Ballot.getResults",
      "offset": [
        4359,
        4381
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1802": {
      "fn": "Ballot.getResults",
      "offset": [
        4351,
        4381
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1803": {
      "fn": "Ballot.getResults",
      "offset": [
        4351,
        4381
      ],
      "op": "POP",
      "path": "2"
    },
    "1804": {
      "fn": "Ballot.getResults",
      "offset": [
        4408,
        4417
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 16,
      "value": "0x1"
    },
    "1806": {
      "fn": "Ballot.getResults",
      "offset": [
        4418,
        4419
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1807": {
      "fn": "Ballot.getResults",
      "offset": [
        4408,
        4420
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1808": {
      "fn": "Ballot.getResults",
      "offset": [
        4408,
        4420
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1809": {
      "fn": "Ballot.getResults",
      "offset": [
        4408,
        4420
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1810": {
      "fn": "Ballot.getResults",
      "offset": [
        4408,
        4420
      ],
      "op": "LT",
      "path": "2"
    },
    "1811": {
      "fn": "Ballot.getResults",
      "offset": [
        4408,
        4420
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x71E"
    },
    "1814": {
      "fn": "Ballot.getResults",
      "offset": [
        4408,
        4420
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1815": {
      "fn": "Ballot.getResults",
      "offset": [
        4408,
        4420
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x71E"
    },
    "1818": {
      "fn": "Ballot.getResults",
      "offset": [
        4408,
        4420
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xF2E"
    },
    "1821": {
      "fn": "Ballot.getResults",
      "jump": "i",
      "offset": [
        4408,
        4420
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1822": {
      "fn": "Ballot.getResults",
      "offset": [
        4408,
        4420
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1823": {
      "fn": "Ballot.getResults",
      "offset": [
        4408,
        4420
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1824": {
      "fn": "Ballot.getResults",
      "offset": [
        4408,
        4420
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1826": {
      "fn": "Ballot.getResults",
      "offset": [
        4408,
        4420
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1827": {
      "fn": "Ballot.getResults",
      "offset": [
        4408,
        4420
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1829": {
      "fn": "Ballot.getResults",
      "offset": [
        4408,
        4420
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1831": {
      "fn": "Ballot.getResults",
      "offset": [
        4408,
        4420
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1832": {
      "fn": "Ballot.getResults",
      "offset": [
        4408,
        4420
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1833": {
      "fn": "Ballot.getResults",
      "offset": [
        4408,
        4420
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "1835": {
      "fn": "Ballot.getResults",
      "offset": [
        4408,
        4420
      ],
      "op": "MUL",
      "path": "2"
    },
    "1836": {
      "fn": "Ballot.getResults",
      "offset": [
        4408,
        4420
      ],
      "op": "ADD",
      "path": "2"
    },
    "1837": {
      "fn": "Ballot.getResults",
      "offset": [
        4408,
        4425
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1839": {
      "fn": "Ballot.getResults",
      "offset": [
        4408,
        4425
      ],
      "op": "ADD",
      "path": "2"
    },
    "1840": {
      "fn": "Ballot.getResults",
      "offset": [
        4399,
        4425
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1841": {
      "fn": "Ballot.getResults",
      "offset": [
        4399,
        4425
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1842": {
      "fn": "Ballot.getResults",
      "offset": [
        4399,
        4425
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x73A"
    },
    "1845": {
      "fn": "Ballot.getResults",
      "offset": [
        4399,
        4425
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1846": {
      "fn": "Ballot.getResults",
      "offset": [
        4399,
        4425
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xF72"
    },
    "1849": {
      "fn": "Ballot.getResults",
      "jump": "i",
      "offset": [
        4399,
        4425
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1850": {
      "fn": "Ballot.getResults",
      "offset": [
        4399,
        4425
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1851": {
      "fn": "Ballot.getResults",
      "offset": [
        4399,
        4425
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1852": {
      "fn": "Ballot.getResults",
      "offset": [
        4399,
        4425
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "1854": {
      "fn": "Ballot.getResults",
      "offset": [
        4399,
        4425
      ],
      "op": "ADD",
      "path": "2"
    },
    "1855": {
      "fn": "Ballot.getResults",
      "offset": [
        4399,
        4425
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1857": {
      "fn": "Ballot.getResults",
      "offset": [
        4399,
        4425
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1858": {
      "fn": "Ballot.getResults",
      "offset": [
        4399,
        4425
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1859": {
      "fn": "Ballot.getResults",
      "offset": [
        4399,
        4425
      ],
      "op": "DIV",
      "path": "2"
    },
    "1860": {
      "fn": "Ballot.getResults",
      "offset": [
        4399,
        4425
      ],
      "op": "MUL",
      "path": "2"
    },
    "1861": {
      "fn": "Ballot.getResults",
      "offset": [
        4399,
        4425
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1863": {
      "fn": "Ballot.getResults",
      "offset": [
        4399,
        4425
      ],
      "op": "ADD",
      "path": "2"
    },
    "1864": {
      "fn": "Ballot.getResults",
      "offset": [
        4399,
        4425
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1866": {
      "fn": "Ballot.getResults",
      "offset": [
        4399,
        4425
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1867": {
      "fn": "Ballot.getResults",
      "offset": [
        4399,
        4425
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1868": {
      "fn": "Ballot.getResults",
      "offset": [
        4399,
        4425
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1869": {
      "fn": "Ballot.getResults",
      "offset": [
        4399,
        4425
      ],
      "op": "ADD",
      "path": "2"
    },
    "1870": {
      "fn": "Ballot.getResults",
      "offset": [
        4399,
        4425
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1872": {
      "fn": "Ballot.getResults",
      "offset": [
        4399,
        4425
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1873": {
      "fn": "Ballot.getResults",
      "offset": [
        4399,
        4425
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1874": {
      "fn": "Ballot.getResults",
      "offset": [
        4399,
        4425
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "1875": {
      "fn": "Ballot.getResults",
      "offset": [
        4399,
        4425
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1876": {
      "fn": "Ballot.getResults",
      "offset": [
        4399,
        4425
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1877": {
      "fn": "Ballot.getResults",
      "offset": [
        4399,
        4425
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1878": {
      "fn": "Ballot.getResults",
      "offset": [
        4399,
        4425
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1879": {
      "fn": "Ballot.getResults",
      "offset": [
        4399,
        4425
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1880": {
      "fn": "Ballot.getResults",
      "offset": [
        4399,
        4425
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1882": {
      "fn": "Ballot.getResults",
      "offset": [
        4399,
        4425
      ],
      "op": "ADD",
      "path": "2"
    },
    "1883": {
      "fn": "Ballot.getResults",
      "offset": [
        4399,
        4425
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1884": {
      "fn": "Ballot.getResults",
      "offset": [
        4399,
        4425
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1885": {
      "fn": "Ballot.getResults",
      "offset": [
        4399,
        4425
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1886": {
      "fn": "Ballot.getResults",
      "offset": [
        4399,
        4425
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x766"
    },
    "1889": {
      "fn": "Ballot.getResults",
      "offset": [
        4399,
        4425
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1890": {
      "fn": "Ballot.getResults",
      "offset": [
        4399,
        4425
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xF72"
    },
    "1893": {
      "fn": "Ballot.getResults",
      "jump": "i",
      "offset": [
        4399,
        4425
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1894": {
      "fn": "Ballot.getResults",
      "offset": [
        4399,
        4425
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1895": {
      "fn": "Ballot.getResults",
      "offset": [
        4399,
        4425
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1896": {
      "fn": "Ballot.getResults",
      "offset": [
        4399,
        4425
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1897": {
      "fn": "Ballot.getResults",
      "offset": [
        4399,
        4425
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7B3"
    },
    "1900": {
      "fn": "Ballot.getResults",
      "offset": [
        4399,
        4425
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1901": {
      "fn": "Ballot.getResults",
      "offset": [
        4399,
        4425
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1902": {
      "fn": "Ballot.getResults",
      "offset": [
        4399,
        4425
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "1904": {
      "fn": "Ballot.getResults",
      "offset": [
        4399,
        4425
      ],
      "op": "LT",
      "path": "2"
    },
    "1905": {
      "fn": "Ballot.getResults",
      "offset": [
        4399,
        4425
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x788"
    },
    "1908": {
      "fn": "Ballot.getResults",
      "offset": [
        4399,
        4425
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1909": {
      "fn": "Ballot.getResults",
      "offset": [
        4399,
        4425
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "1912": {
      "fn": "Ballot.getResults",
      "offset": [
        4399,
        4425
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1913": {
      "fn": "Ballot.getResults",
      "offset": [
        4399,
        4425
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1914": {
      "fn": "Ballot.getResults",
      "offset": [
        4399,
        4425
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1915": {
      "fn": "Ballot.getResults",
      "offset": [
        4399,
        4425
      ],
      "op": "DIV",
      "path": "2"
    },
    "1916": {
      "fn": "Ballot.getResults",
      "offset": [
        4399,
        4425
      ],
      "op": "MUL",
      "path": "2"
    },
    "1917": {
      "fn": "Ballot.getResults",
      "offset": [
        4399,
        4425
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1918": {
      "fn": "Ballot.getResults",
      "offset": [
        4399,
        4425
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1919": {
      "fn": "Ballot.getResults",
      "offset": [
        4399,
        4425
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1920": {
      "fn": "Ballot.getResults",
      "offset": [
        4399,
        4425
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1922": {
      "fn": "Ballot.getResults",
      "offset": [
        4399,
        4425
      ],
      "op": "ADD",
      "path": "2"
    },
    "1923": {
      "fn": "Ballot.getResults",
      "offset": [
        4399,
        4425
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1924": {
      "fn": "Ballot.getResults",
      "offset": [
        4399,
        4425
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7B3"
    },
    "1927": {
      "fn": "Ballot.getResults",
      "offset": [
        4399,
        4425
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1928": {
      "fn": "Ballot.getResults",
      "offset": [
        4399,
        4425
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1929": {
      "fn": "Ballot.getResults",
      "offset": [
        4399,
        4425
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1930": {
      "fn": "Ballot.getResults",
      "offset": [
        4399,
        4425
      ],
      "op": "ADD",
      "path": "2"
    },
    "1931": {
      "fn": "Ballot.getResults",
      "offset": [
        4399,
        4425
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1932": {
      "fn": "Ballot.getResults",
      "offset": [
        4399,
        4425
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1933": {
      "fn": "Ballot.getResults",
      "offset": [
        4399,
        4425
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1935": {
      "fn": "Ballot.getResults",
      "offset": [
        4399,
        4425
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1936": {
      "fn": "Ballot.getResults",
      "offset": [
        4399,
        4425
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1938": {
      "fn": "Ballot.getResults",
      "offset": [
        4399,
        4425
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1940": {
      "fn": "Ballot.getResults",
      "offset": [
        4399,
        4425
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1941": {
      "fn": "Ballot.getResults",
      "offset": [
        4399,
        4425
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1942": {
      "fn": "Ballot.getResults",
      "offset": [
        4399,
        4425
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1943": {
      "fn": "Ballot.getResults",
      "offset": [
        4399,
        4425
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1944": {
      "fn": "Ballot.getResults",
      "offset": [
        4399,
        4425
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1945": {
      "fn": "Ballot.getResults",
      "offset": [
        4399,
        4425
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1946": {
      "fn": "Ballot.getResults",
      "offset": [
        4399,
        4425
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1947": {
      "fn": "Ballot.getResults",
      "offset": [
        4399,
        4425
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1948": {
      "fn": "Ballot.getResults",
      "offset": [
        4399,
        4425
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "1950": {
      "fn": "Ballot.getResults",
      "offset": [
        4399,
        4425
      ],
      "op": "ADD",
      "path": "2"
    },
    "1951": {
      "fn": "Ballot.getResults",
      "offset": [
        4399,
        4425
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1952": {
      "fn": "Ballot.getResults",
      "offset": [
        4399,
        4425
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1954": {
      "fn": "Ballot.getResults",
      "offset": [
        4399,
        4425
      ],
      "op": "ADD",
      "path": "2"
    },
    "1955": {
      "fn": "Ballot.getResults",
      "offset": [
        4399,
        4425
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1956": {
      "fn": "Ballot.getResults",
      "offset": [
        4399,
        4425
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1957": {
      "fn": "Ballot.getResults",
      "offset": [
        4399,
        4425
      ],
      "op": "GT",
      "path": "2"
    },
    "1958": {
      "fn": "Ballot.getResults",
      "offset": [
        4399,
        4425
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x796"
    },
    "1961": {
      "fn": "Ballot.getResults",
      "offset": [
        4399,
        4425
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1962": {
      "fn": "Ballot.getResults",
      "offset": [
        4399,
        4425
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1963": {
      "fn": "Ballot.getResults",
      "offset": [
        4399,
        4425
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1964": {
      "fn": "Ballot.getResults",
      "offset": [
        4399,
        4425
      ],
      "op": "SUB",
      "path": "2"
    },
    "1965": {
      "fn": "Ballot.getResults",
      "offset": [
        4399,
        4425
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "1967": {
      "fn": "Ballot.getResults",
      "offset": [
        4399,
        4425
      ],
      "op": "AND",
      "path": "2"
    },
    "1968": {
      "fn": "Ballot.getResults",
      "offset": [
        4399,
        4425
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1969": {
      "fn": "Ballot.getResults",
      "offset": [
        4399,
        4425
      ],
      "op": "ADD",
      "path": "2"
    },
    "1970": {
      "fn": "Ballot.getResults",
      "offset": [
        4399,
        4425
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1971": {
      "fn": "Ballot.getResults",
      "offset": [
        4399,
        4425
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1972": {
      "fn": "Ballot.getResults",
      "offset": [
        4399,
        4425
      ],
      "op": "POP",
      "path": "2"
    },
    "1973": {
      "fn": "Ballot.getResults",
      "offset": [
        4399,
        4425
      ],
      "op": "POP",
      "path": "2"
    },
    "1974": {
      "fn": "Ballot.getResults",
      "offset": [
        4399,
        4425
      ],
      "op": "POP",
      "path": "2"
    },
    "1975": {
      "fn": "Ballot.getResults",
      "offset": [
        4399,
        4425
      ],
      "op": "POP",
      "path": "2"
    },
    "1976": {
      "fn": "Ballot.getResults",
      "offset": [
        4399,
        4425
      ],
      "op": "POP",
      "path": "2"
    },
    "1977": {
      "fn": "Ballot.getResults",
      "offset": [
        4399,
        4425
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "1978": {
      "fn": "Ballot.getResults",
      "offset": [
        4399,
        4425
      ],
      "op": "POP",
      "path": "2"
    },
    "1979": {
      "fn": "Ballot.getResults",
      "offset": [
        4297,
        4440
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1980": {
      "fn": "Ballot.getResults",
      "offset": [
        4278,
        4281
      ],
      "op": "DUP1",
      "path": "2",
      "statement": 17
    },
    "1981": {
      "fn": "Ballot.getResults",
      "offset": [
        4278,
        4281
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7C5"
    },
    "1984": {
      "fn": "Ballot.getResults",
      "offset": [
        4278,
        4281
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1985": {
      "fn": "Ballot.getResults",
      "offset": [
        4278,
        4281
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1023"
    },
    "1988": {
      "fn": "Ballot.getResults",
      "jump": "i",
      "offset": [
        4278,
        4281
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1989": {
      "fn": "Ballot.getResults",
      "offset": [
        4278,
        4281
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1990": {
      "fn": "Ballot.getResults",
      "offset": [
        4278,
        4281
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1991": {
      "fn": "Ballot.getResults",
      "offset": [
        4278,
        4281
      ],
      "op": "POP",
      "path": "2"
    },
    "1992": {
      "fn": "Ballot.getResults",
      "offset": [
        4278,
        4281
      ],
      "op": "POP",
      "path": "2"
    },
    "1993": {
      "fn": "Ballot.getResults",
      "offset": [
        4236,
        4450
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x6AE"
    },
    "1996": {
      "fn": "Ballot.getResults",
      "offset": [
        4236,
        4450
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1997": {
      "fn": "Ballot.getResults",
      "offset": [
        4236,
        4450
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1998": {
      "op": "POP"
    },
    "1999": {
      "fn": "Ballot.getResults",
      "offset": [
        4467,
        4473
      ],
      "op": "SWAP1",
      "path": "2",
      "statement": 18
    },
    "2000": {
      "fn": "Ballot.getResults",
      "offset": [
        4467,
        4473
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "2001": {
      "fn": "Ballot.getResults",
      "offset": [
        4475,
        4480
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2002": {
      "fn": "Ballot.getResults",
      "offset": [
        4475,
        4480
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "2003": {
      "op": "POP"
    },
    "2004": {
      "fn": "Ballot.getResults",
      "offset": [
        3981,
        4488
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2005": {
      "op": "POP"
    },
    "2006": {
      "fn": "Ballot.getResults",
      "jump": "o",
      "offset": [
        3981,
        4488
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2007": {
      "fn": "Ballot.openBallot",
      "offset": [
        4570,
        4723
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2008": {
      "fn": "Ownable.owner",
      "offset": [
        1082,
        1089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2010": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2011": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2013": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2015": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2017": {
      "op": "SHL"
    },
    "2018": {
      "op": "SUB"
    },
    "2019": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "2020": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "1"
    },
    "2021": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "2022": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x801"
    },
    "2025": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2026": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2028": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2029": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2033": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2035": {
      "op": "SHL"
    },
    "2036": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2037": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2038": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2040": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "2041": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x310"
    },
    "2044": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2045": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xFAD"
    },
    "2048": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2049": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2050": {
      "fn": "Ballot.openBallot",
      "offset": [
        4627,
        4640
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 19,
      "value": "0x0"
    },
    "2052": {
      "fn": "Ballot.openBallot",
      "offset": [
        4627,
        4640
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2053": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2055": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "2057": {
      "op": "SHL"
    },
    "2058": {
      "fn": "Ballot.openBallot",
      "offset": [
        4627,
        4640
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2059": {
      "fn": "Ballot.openBallot",
      "offset": [
        4627,
        4640
      ],
      "op": "DIV",
      "path": "2"
    },
    "2060": {
      "fn": "Ballot.openBallot",
      "offset": [
        4627,
        4640
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "2062": {
      "fn": "Ballot.openBallot",
      "offset": [
        4627,
        4640
      ],
      "op": "AND",
      "path": "2"
    },
    "2063": {
      "branch": 44,
      "fn": "Ballot.openBallot",
      "offset": [
        4627,
        4649
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2064": {
      "fn": "Ballot.openBallot",
      "offset": [
        4619,
        4687
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x82B"
    },
    "2067": {
      "branch": 44,
      "fn": "Ballot.openBallot",
      "offset": [
        4619,
        4687
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2068": {
      "fn": "Ballot.openBallot",
      "offset": [
        4619,
        4687
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2070": {
      "fn": "Ballot.openBallot",
      "offset": [
        4619,
        4687
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2071": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2075": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2077": {
      "op": "SHL"
    },
    "2078": {
      "fn": "Ballot.openBallot",
      "offset": [
        4619,
        4687
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2079": {
      "fn": "Ballot.openBallot",
      "offset": [
        4619,
        4687
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2080": {
      "fn": "Ballot.openBallot",
      "offset": [
        4619,
        4687
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "2082": {
      "fn": "Ballot.openBallot",
      "offset": [
        4619,
        4687
      ],
      "op": "ADD",
      "path": "2"
    },
    "2083": {
      "fn": "Ballot.openBallot",
      "offset": [
        4619,
        4687
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x310"
    },
    "2086": {
      "fn": "Ballot.openBallot",
      "offset": [
        4619,
        4687
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2087": {
      "fn": "Ballot.openBallot",
      "offset": [
        4619,
        4687
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFE2"
    },
    "2090": {
      "fn": "Ballot.openBallot",
      "jump": "i",
      "offset": [
        4619,
        4687
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2091": {
      "fn": "Ballot.openBallot",
      "offset": [
        4619,
        4687
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2092": {
      "fn": "Ballot.openBallot",
      "offset": [
        4697,
        4709
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 20,
      "value": "0x0"
    },
    "2094": {
      "fn": "Ballot.openBallot",
      "offset": [
        4697,
        4716
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2095": {
      "fn": "Ballot.openBallot",
      "offset": [
        4697,
        4716
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2096": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "2098": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2100": {
      "op": "SHL"
    },
    "2101": {
      "op": "NOT"
    },
    "2102": {
      "fn": "Ballot.openBallot",
      "offset": [
        4697,
        4716
      ],
      "op": "AND",
      "path": "2"
    },
    "2103": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2105": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2107": {
      "op": "SHL"
    },
    "2108": {
      "fn": "Ballot.openBallot",
      "offset": [
        4697,
        4716
      ],
      "op": "OR",
      "path": "2"
    },
    "2109": {
      "fn": "Ballot.openBallot",
      "offset": [
        4697,
        4716
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2110": {
      "fn": "Ballot.openBallot",
      "offset": [
        4697,
        4716
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "2111": {
      "fn": "Ballot.openBallot",
      "jump": "o",
      "offset": [
        4570,
        4723
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2112": {
      "fn": "Ballot.getName",
      "offset": [
        3514,
        3677
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2113": {
      "fn": "Ballot.getName",
      "offset": [
        3595,
        3622
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "2115": {
      "fn": "Ballot.getName",
      "offset": [
        3645,
        3654
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 21,
      "value": "0x1"
    },
    "2117": {
      "fn": "Ballot.getName",
      "offset": [
        3655,
        3664
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2118": {
      "fn": "Ballot.getName",
      "offset": [
        3645,
        3665
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2119": {
      "fn": "Ballot.getName",
      "offset": [
        3645,
        3665
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2120": {
      "fn": "Ballot.getName",
      "offset": [
        3645,
        3665
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2121": {
      "fn": "Ballot.getName",
      "offset": [
        3645,
        3665
      ],
      "op": "LT",
      "path": "2"
    },
    "2122": {
      "fn": "Ballot.getName",
      "offset": [
        3645,
        3665
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x855"
    },
    "2125": {
      "fn": "Ballot.getName",
      "offset": [
        3645,
        3665
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2126": {
      "fn": "Ballot.getName",
      "offset": [
        3645,
        3665
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x855"
    },
    "2129": {
      "fn": "Ballot.getName",
      "offset": [
        3645,
        3665
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xF2E"
    },
    "2132": {
      "fn": "Ballot.getName",
      "jump": "i",
      "offset": [
        3645,
        3665
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2133": {
      "fn": "Ballot.getName",
      "offset": [
        3645,
        3665
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2134": {
      "fn": "Ballot.getName",
      "offset": [
        3645,
        3665
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2135": {
      "fn": "Ballot.getName",
      "offset": [
        3645,
        3665
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2137": {
      "fn": "Ballot.getName",
      "offset": [
        3645,
        3665
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2138": {
      "fn": "Ballot.getName",
      "offset": [
        3645,
        3665
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2140": {
      "fn": "Ballot.getName",
      "offset": [
        3645,
        3665
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2142": {
      "fn": "Ballot.getName",
      "offset": [
        3645,
        3665
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "2143": {
      "fn": "Ballot.getName",
      "offset": [
        3645,
        3665
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2144": {
      "fn": "Ballot.getName",
      "offset": [
        3645,
        3665
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "2146": {
      "fn": "Ballot.getName",
      "offset": [
        3645,
        3665
      ],
      "op": "MUL",
      "path": "2"
    },
    "2147": {
      "fn": "Ballot.getName",
      "offset": [
        3645,
        3665
      ],
      "op": "ADD",
      "path": "2"
    },
    "2148": {
      "fn": "Ballot.getName",
      "offset": [
        3645,
        3670
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2150": {
      "fn": "Ballot.getName",
      "offset": [
        3645,
        3670
      ],
      "op": "ADD",
      "path": "2"
    },
    "2151": {
      "fn": "Ballot.getName",
      "offset": [
        3638,
        3670
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2152": {
      "fn": "Ballot.getName",
      "offset": [
        3638,
        3670
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2153": {
      "fn": "Ballot.getName",
      "offset": [
        3638,
        3670
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x871"
    },
    "2156": {
      "fn": "Ballot.getName",
      "offset": [
        3638,
        3670
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2157": {
      "fn": "Ballot.getName",
      "offset": [
        3638,
        3670
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xF72"
    },
    "2160": {
      "fn": "Ballot.getName",
      "jump": "i",
      "offset": [
        3638,
        3670
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2161": {
      "fn": "Ballot.getName",
      "offset": [
        3638,
        3670
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2162": {
      "fn": "Ballot.getName",
      "offset": [
        3638,
        3670
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2163": {
      "fn": "Ballot.getName",
      "offset": [
        3638,
        3670
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "2165": {
      "fn": "Ballot.getName",
      "offset": [
        3638,
        3670
      ],
      "op": "ADD",
      "path": "2"
    },
    "2166": {
      "fn": "Ballot.getName",
      "offset": [
        3638,
        3670
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2168": {
      "fn": "Ballot.getName",
      "offset": [
        3638,
        3670
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2169": {
      "fn": "Ballot.getName",
      "offset": [
        3638,
        3670
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2170": {
      "fn": "Ballot.getName",
      "offset": [
        3638,
        3670
      ],
      "op": "DIV",
      "path": "2"
    },
    "2171": {
      "fn": "Ballot.getName",
      "offset": [
        3638,
        3670
      ],
      "op": "MUL",
      "path": "2"
    },
    "2172": {
      "fn": "Ballot.getName",
      "offset": [
        3638,
        3670
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2174": {
      "fn": "Ballot.getName",
      "offset": [
        3638,
        3670
      ],
      "op": "ADD",
      "path": "2"
    },
    "2175": {
      "fn": "Ballot.getName",
      "offset": [
        3638,
        3670
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2177": {
      "fn": "Ballot.getName",
      "offset": [
        3638,
        3670
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2178": {
      "fn": "Ballot.getName",
      "offset": [
        3638,
        3670
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2179": {
      "fn": "Ballot.getName",
      "offset": [
        3638,
        3670
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2180": {
      "fn": "Ballot.getName",
      "offset": [
        3638,
        3670
      ],
      "op": "ADD",
      "path": "2"
    },
    "2181": {
      "fn": "Ballot.getName",
      "offset": [
        3638,
        3670
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2183": {
      "fn": "Ballot.getName",
      "offset": [
        3638,
        3670
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2184": {
      "fn": "Ballot.getName",
      "offset": [
        3638,
        3670
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2185": {
      "fn": "Ballot.getName",
      "offset": [
        3638,
        3670
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "2186": {
      "fn": "Ballot.getName",
      "offset": [
        3638,
        3670
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2187": {
      "fn": "Ballot.getName",
      "offset": [
        3638,
        3670
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2188": {
      "fn": "Ballot.getName",
      "offset": [
        3638,
        3670
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2189": {
      "fn": "Ballot.getName",
      "offset": [
        3638,
        3670
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2190": {
      "fn": "Ballot.getName",
      "offset": [
        3638,
        3670
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2191": {
      "fn": "Ballot.getName",
      "offset": [
        3638,
        3670
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2193": {
      "fn": "Ballot.getName",
      "offset": [
        3638,
        3670
      ],
      "op": "ADD",
      "path": "2"
    },
    "2194": {
      "fn": "Ballot.getName",
      "offset": [
        3638,
        3670
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2195": {
      "fn": "Ballot.getName",
      "offset": [
        3638,
        3670
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2196": {
      "fn": "Ballot.getName",
      "offset": [
        3638,
        3670
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2197": {
      "fn": "Ballot.getName",
      "offset": [
        3638,
        3670
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x89D"
    },
    "2200": {
      "fn": "Ballot.getName",
      "offset": [
        3638,
        3670
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2201": {
      "fn": "Ballot.getName",
      "offset": [
        3638,
        3670
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xF72"
    },
    "2204": {
      "fn": "Ballot.getName",
      "jump": "i",
      "offset": [
        3638,
        3670
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2205": {
      "fn": "Ballot.getName",
      "offset": [
        3638,
        3670
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2206": {
      "fn": "Ballot.getName",
      "offset": [
        3638,
        3670
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2207": {
      "fn": "Ballot.getName",
      "offset": [
        3638,
        3670
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2208": {
      "fn": "Ballot.getName",
      "offset": [
        3638,
        3670
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x8EA"
    },
    "2211": {
      "fn": "Ballot.getName",
      "offset": [
        3638,
        3670
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2212": {
      "fn": "Ballot.getName",
      "offset": [
        3638,
        3670
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2213": {
      "fn": "Ballot.getName",
      "offset": [
        3638,
        3670
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "2215": {
      "fn": "Ballot.getName",
      "offset": [
        3638,
        3670
      ],
      "op": "LT",
      "path": "2"
    },
    "2216": {
      "fn": "Ballot.getName",
      "offset": [
        3638,
        3670
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x8BF"
    },
    "2219": {
      "fn": "Ballot.getName",
      "offset": [
        3638,
        3670
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2220": {
      "fn": "Ballot.getName",
      "offset": [
        3638,
        3670
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "2223": {
      "fn": "Ballot.getName",
      "offset": [
        3638,
        3670
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2224": {
      "fn": "Ballot.getName",
      "offset": [
        3638,
        3670
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2225": {
      "fn": "Ballot.getName",
      "offset": [
        3638,
        3670
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2226": {
      "fn": "Ballot.getName",
      "offset": [
        3638,
        3670
      ],
      "op": "DIV",
      "path": "2"
    },
    "2227": {
      "fn": "Ballot.getName",
      "offset": [
        3638,
        3670
      ],
      "op": "MUL",
      "path": "2"
    },
    "2228": {
      "fn": "Ballot.getName",
      "offset": [
        3638,
        3670
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2229": {
      "fn": "Ballot.getName",
      "offset": [
        3638,
        3670
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2230": {
      "fn": "Ballot.getName",
      "offset": [
        3638,
        3670
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2231": {
      "fn": "Ballot.getName",
      "offset": [
        3638,
        3670
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2233": {
      "fn": "Ballot.getName",
      "offset": [
        3638,
        3670
      ],
      "op": "ADD",
      "path": "2"
    },
    "2234": {
      "fn": "Ballot.getName",
      "offset": [
        3638,
        3670
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2235": {
      "fn": "Ballot.getName",
      "offset": [
        3638,
        3670
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x8EA"
    },
    "2238": {
      "fn": "Ballot.getName",
      "offset": [
        3638,
        3670
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2239": {
      "fn": "Ballot.getName",
      "offset": [
        3638,
        3670
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2240": {
      "fn": "Ballot.getName",
      "offset": [
        3638,
        3670
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2241": {
      "fn": "Ballot.getName",
      "offset": [
        3638,
        3670
      ],
      "op": "ADD",
      "path": "2"
    },
    "2242": {
      "fn": "Ballot.getName",
      "offset": [
        3638,
        3670
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2243": {
      "fn": "Ballot.getName",
      "offset": [
        3638,
        3670
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2244": {
      "fn": "Ballot.getName",
      "offset": [
        3638,
        3670
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2246": {
      "fn": "Ballot.getName",
      "offset": [
        3638,
        3670
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2247": {
      "fn": "Ballot.getName",
      "offset": [
        3638,
        3670
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2249": {
      "fn": "Ballot.getName",
      "offset": [
        3638,
        3670
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2251": {
      "fn": "Ballot.getName",
      "offset": [
        3638,
        3670
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "2252": {
      "fn": "Ballot.getName",
      "offset": [
        3638,
        3670
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2253": {
      "fn": "Ballot.getName",
      "offset": [
        3638,
        3670
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2254": {
      "fn": "Ballot.getName",
      "offset": [
        3638,
        3670
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2255": {
      "fn": "Ballot.getName",
      "offset": [
        3638,
        3670
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2256": {
      "fn": "Ballot.getName",
      "offset": [
        3638,
        3670
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2257": {
      "fn": "Ballot.getName",
      "offset": [
        3638,
        3670
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2258": {
      "fn": "Ballot.getName",
      "offset": [
        3638,
        3670
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2259": {
      "fn": "Ballot.getName",
      "offset": [
        3638,
        3670
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "2261": {
      "fn": "Ballot.getName",
      "offset": [
        3638,
        3670
      ],
      "op": "ADD",
      "path": "2"
    },
    "2262": {
      "fn": "Ballot.getName",
      "offset": [
        3638,
        3670
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2263": {
      "fn": "Ballot.getName",
      "offset": [
        3638,
        3670
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2265": {
      "fn": "Ballot.getName",
      "offset": [
        3638,
        3670
      ],
      "op": "ADD",
      "path": "2"
    },
    "2266": {
      "fn": "Ballot.getName",
      "offset": [
        3638,
        3670
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2267": {
      "fn": "Ballot.getName",
      "offset": [
        3638,
        3670
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2268": {
      "fn": "Ballot.getName",
      "offset": [
        3638,
        3670
      ],
      "op": "GT",
      "path": "2"
    },
    "2269": {
      "fn": "Ballot.getName",
      "offset": [
        3638,
        3670
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x8CD"
    },
    "2272": {
      "fn": "Ballot.getName",
      "offset": [
        3638,
        3670
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2273": {
      "fn": "Ballot.getName",
      "offset": [
        3638,
        3670
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2274": {
      "fn": "Ballot.getName",
      "offset": [
        3638,
        3670
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2275": {
      "fn": "Ballot.getName",
      "offset": [
        3638,
        3670
      ],
      "op": "SUB",
      "path": "2"
    },
    "2276": {
      "fn": "Ballot.getName",
      "offset": [
        3638,
        3670
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "2278": {
      "fn": "Ballot.getName",
      "offset": [
        3638,
        3670
      ],
      "op": "AND",
      "path": "2"
    },
    "2279": {
      "fn": "Ballot.getName",
      "offset": [
        3638,
        3670
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2280": {
      "fn": "Ballot.getName",
      "offset": [
        3638,
        3670
      ],
      "op": "ADD",
      "path": "2"
    },
    "2281": {
      "fn": "Ballot.getName",
      "offset": [
        3638,
        3670
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2282": {
      "fn": "Ballot.getName",
      "offset": [
        3638,
        3670
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2283": {
      "fn": "Ballot.getName",
      "offset": [
        3638,
        3670
      ],
      "op": "POP",
      "path": "2"
    },
    "2284": {
      "fn": "Ballot.getName",
      "offset": [
        3638,
        3670
      ],
      "op": "POP",
      "path": "2"
    },
    "2285": {
      "fn": "Ballot.getName",
      "offset": [
        3638,
        3670
      ],
      "op": "POP",
      "path": "2"
    },
    "2286": {
      "fn": "Ballot.getName",
      "offset": [
        3638,
        3670
      ],
      "op": "POP",
      "path": "2"
    },
    "2287": {
      "fn": "Ballot.getName",
      "offset": [
        3638,
        3670
      ],
      "op": "POP",
      "path": "2"
    },
    "2288": {
      "fn": "Ballot.getName",
      "offset": [
        3638,
        3670
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2289": {
      "fn": "Ballot.getName",
      "offset": [
        3638,
        3670
      ],
      "op": "POP",
      "path": "2"
    },
    "2290": {
      "fn": "Ballot.getName",
      "offset": [
        3514,
        3677
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2291": {
      "fn": "Ballot.getName",
      "offset": [
        3514,
        3677
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2292": {
      "fn": "Ballot.getName",
      "offset": [
        3514,
        3677
      ],
      "op": "POP",
      "path": "2"
    },
    "2293": {
      "fn": "Ballot.getName",
      "jump": "o",
      "offset": [
        3514,
        3677
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2294": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2295": {
      "fn": "Ownable.owner",
      "offset": [
        1082,
        1089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2297": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2298": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2300": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2302": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2304": {
      "op": "SHL"
    },
    "2305": {
      "op": "SUB"
    },
    "2306": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "2307": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "1"
    },
    "2308": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "2309": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x920"
    },
    "2312": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2313": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2315": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2316": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2320": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2322": {
      "op": "SHL"
    },
    "2323": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2324": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2325": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2327": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "2328": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x310"
    },
    "2331": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2332": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xFAD"
    },
    "2335": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2336": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2337": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1732,
        1762
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 22,
      "value": "0x92A"
    },
    "2340": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1759,
        1760
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2342": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1732,
        1750
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBE3"
    },
    "2345": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1732,
        1762
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2346": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1732,
        1762
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2347": {
      "fn": "Ownable.renounceOwnership",
      "jump": "o",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2348": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        2960,
        3275
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2349": {
      "fn": "Ownable.owner",
      "offset": [
        1082,
        1089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2351": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2352": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2354": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2356": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2358": {
      "op": "SHL"
    },
    "2359": {
      "op": "SUB"
    },
    "2360": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "2361": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "1"
    },
    "2362": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "2363": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x956"
    },
    "2366": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2367": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2369": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2370": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2374": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2376": {
      "op": "SHL"
    },
    "2377": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2378": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2379": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2381": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "2382": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x310"
    },
    "2385": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2386": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xFAD"
    },
    "2389": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2390": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2391": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        3037,
        3050
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 23,
      "value": "0x0"
    },
    "2393": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        3037,
        3050
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2394": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2396": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "2398": {
      "op": "SHL"
    },
    "2399": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        3037,
        3050
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2400": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        3037,
        3050
      ],
      "op": "DIV",
      "path": "2"
    },
    "2401": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        3037,
        3050
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "2403": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        3037,
        3050
      ],
      "op": "AND",
      "path": "2"
    },
    "2404": {
      "branch": 45,
      "fn": "Ballot.giveRightToVote",
      "offset": [
        3036,
        3050
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2405": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        3028,
        3083
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x980"
    },
    "2408": {
      "branch": 45,
      "fn": "Ballot.giveRightToVote",
      "offset": [
        3028,
        3083
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2409": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        3028,
        3083
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2411": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        3028,
        3083
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2412": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2416": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2418": {
      "op": "SHL"
    },
    "2419": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        3028,
        3083
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2420": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        3028,
        3083
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2421": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        3028,
        3083
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "2423": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        3028,
        3083
      ],
      "op": "ADD",
      "path": "2"
    },
    "2424": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        3028,
        3083
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x310"
    },
    "2427": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        3028,
        3083
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2428": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        3028,
        3083
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xEF7"
    },
    "2431": {
      "fn": "Ballot.giveRightToVote",
      "jump": "i",
      "offset": [
        3028,
        3083
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2432": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        3028,
        3083
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2433": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2435": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2437": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2439": {
      "op": "SHL"
    },
    "2440": {
      "op": "SUB"
    },
    "2441": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        3101,
        3115
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 24
    },
    "2442": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        3101,
        3115
      ],
      "op": "AND",
      "path": "2"
    },
    "2443": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        3101,
        3115
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2445": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        3101,
        3115
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2446": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        3101,
        3115
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2447": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        3101,
        3115
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2448": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        3101,
        3107
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "2450": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        3101,
        3115
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2452": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        3101,
        3115
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2453": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        3101,
        3115
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2454": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        3101,
        3115
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2455": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        3101,
        3115
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2457": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        3101,
        3115
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2458": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        3101,
        3115
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2459": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        3101,
        3115
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "2460": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        3101,
        3122
      ],
      "op": "ADD",
      "path": "2"
    },
    "2461": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        3101,
        3122
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2462": {
      "branch": 46,
      "fn": "Ballot.giveRightToVote",
      "offset": [
        3101,
        3127
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2463": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        3093,
        3164
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x9EA"
    },
    "2466": {
      "branch": 46,
      "fn": "Ballot.giveRightToVote",
      "offset": [
        3093,
        3164
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2467": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        3093,
        3164
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2469": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        3093,
        3164
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2470": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2474": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2476": {
      "op": "SHL"
    },
    "2477": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        3093,
        3164
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2478": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        3093,
        3164
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2479": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2481": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        3093,
        3164
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "2483": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        3093,
        3164
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2484": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        3093,
        3164
      ],
      "op": "ADD",
      "path": "2"
    },
    "2485": {
      "op": "DUP2"
    },
    "2486": {
      "op": "SWAP1"
    },
    "2487": {
      "op": "MSTORE"
    },
    "2488": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2490": {
      "op": "DUP3"
    },
    "2491": {
      "op": "ADD"
    },
    "2492": {
      "op": "MSTORE"
    },
    "2493": {
      "op": "PUSH32",
      "value": "0x766F74657220616C72656164792068617320726967687420746F20766F746521"
    },
    "2526": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2528": {
      "op": "DUP3"
    },
    "2529": {
      "op": "ADD"
    },
    "2530": {
      "op": "MSTORE"
    },
    "2531": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2533": {
      "op": "ADD"
    },
    "2534": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        3093,
        3164
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x310"
    },
    "2537": {
      "op": "JUMP"
    },
    "2538": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        3093,
        3164
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2539": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2541": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2543": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2545": {
      "op": "SHL"
    },
    "2546": {
      "op": "SUB"
    },
    "2547": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        3183,
        3197
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 25
    },
    "2548": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        3183,
        3197
      ],
      "op": "AND",
      "path": "2"
    },
    "2549": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        3183,
        3197
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2551": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        3183,
        3197
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2552": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        3183,
        3197
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2553": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        3183,
        3197
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2554": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        3183,
        3189
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "2556": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        3183,
        3197
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2558": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        3183,
        3197
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2559": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        3183,
        3197
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2561": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        3183,
        3197
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2562": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        3183,
        3197
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "2563": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        3183,
        3203
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "2565": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        3183,
        3203
      ],
      "op": "ADD",
      "path": "2"
    },
    "2566": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        3183,
        3203
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2567": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        3183,
        3203
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "2569": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        3183,
        3203
      ],
      "op": "AND",
      "path": "2"
    },
    "2570": {
      "branch": 47,
      "fn": "Ballot.giveRightToVote",
      "offset": [
        3182,
        3203
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2571": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        3174,
        3232
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xA56"
    },
    "2574": {
      "branch": 47,
      "fn": "Ballot.giveRightToVote",
      "offset": [
        3174,
        3232
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2575": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        3174,
        3232
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2577": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        3174,
        3232
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2578": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2582": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2584": {
      "op": "SHL"
    },
    "2585": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        3174,
        3232
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2586": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        3174,
        3232
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2587": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2589": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        3174,
        3232
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "2591": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        3174,
        3232
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2592": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        3174,
        3232
      ],
      "op": "ADD",
      "path": "2"
    },
    "2593": {
      "op": "MSTORE"
    },
    "2594": {
      "op": "PUSH1",
      "value": "0x18"
    },
    "2596": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2598": {
      "op": "DUP3"
    },
    "2599": {
      "op": "ADD"
    },
    "2600": {
      "op": "MSTORE"
    },
    "2601": {
      "op": "PUSH32",
      "value": "0x766F7465722068617320616C726561647920766F746564210000000000000000"
    },
    "2634": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2636": {
      "op": "DUP3"
    },
    "2637": {
      "op": "ADD"
    },
    "2638": {
      "op": "MSTORE"
    },
    "2639": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2641": {
      "op": "ADD"
    },
    "2642": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        3174,
        3232
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x310"
    },
    "2645": {
      "op": "JUMP"
    },
    "2646": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        3174,
        3232
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2647": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2649": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2651": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2653": {
      "op": "SHL"
    },
    "2654": {
      "op": "SUB"
    },
    "2655": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        3243,
        3257
      ],
      "op": "AND",
      "path": "2",
      "statement": 26
    },
    "2656": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        3243,
        3257
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2658": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        3243,
        3257
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2659": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        3243,
        3257
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2660": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        3243,
        3257
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2661": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        3243,
        3249
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "2663": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        3243,
        3257
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2665": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        3243,
        3257
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2666": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        3243,
        3257
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2667": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        3243,
        3257
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2668": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        3243,
        3257
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2670": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        3243,
        3257
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2671": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        3243,
        3257
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2672": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        3243,
        3257
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "2673": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        3267,
        3268
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "2675": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        3243,
        3264
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2676": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        3243,
        3264
      ],
      "op": "ADD",
      "path": "2"
    },
    "2677": {
      "fn": "Ballot.giveRightToVote",
      "offset": [
        3243,
        3268
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "2678": {
      "fn": "Ballot.giveRightToVote",
      "jump": "o",
      "offset": [
        2960,
        3275
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2679": {
      "fn": "Ballot.concludeBallot",
      "offset": [
        3865,
        3975
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2680": {
      "fn": "Ownable.owner",
      "offset": [
        1082,
        1089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2682": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2683": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2685": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2687": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2689": {
      "op": "SHL"
    },
    "2690": {
      "op": "SUB"
    },
    "2691": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "2692": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "1"
    },
    "2693": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "2694": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAA1"
    },
    "2697": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2698": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2700": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2701": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2705": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2707": {
      "op": "SHL"
    },
    "2708": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2709": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2710": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2712": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "2713": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x310"
    },
    "2716": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2717": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xFAD"
    },
    "2720": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2721": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2722": {
      "fn": "Ballot.concludeBallot",
      "offset": [
        3933,
        3938
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 27,
      "value": "0x0"
    },
    "2724": {
      "fn": "Ballot.concludeBallot",
      "offset": [
        3918,
        3938
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2725": {
      "fn": "Ballot.concludeBallot",
      "offset": [
        3918,
        3938
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2726": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "2729": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2731": {
      "op": "SHL"
    },
    "2732": {
      "op": "NOT"
    },
    "2733": {
      "fn": "Ballot.concludeBallot",
      "offset": [
        3948,
        3968
      ],
      "op": "AND",
      "path": "2",
      "statement": 28
    },
    "2734": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2736": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "2738": {
      "op": "SHL"
    },
    "2739": {
      "fn": "Ballot.concludeBallot",
      "offset": [
        3948,
        3968
      ],
      "op": "OR",
      "path": "2"
    },
    "2740": {
      "fn": "Ballot.concludeBallot",
      "offset": [
        3948,
        3968
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2741": {
      "fn": "Ballot.concludeBallot",
      "offset": [
        3948,
        3968
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "2742": {
      "fn": "Ballot.concludeBallot",
      "jump": "o",
      "offset": [
        3865,
        3975
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2743": {
      "fn": "Ballot.closeBallot",
      "offset": [
        4748,
        4898
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2744": {
      "fn": "Ownable.owner",
      "offset": [
        1082,
        1089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2746": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2747": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2749": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2751": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2753": {
      "op": "SHL"
    },
    "2754": {
      "op": "SUB"
    },
    "2755": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "2756": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "1"
    },
    "2757": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "2758": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAE1"
    },
    "2761": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2762": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2764": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2765": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2769": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2771": {
      "op": "SHL"
    },
    "2772": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2773": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2774": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2776": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "2777": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x310"
    },
    "2780": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2781": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xFAD"
    },
    "2784": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2785": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2786": {
      "fn": "Ballot.closeBallot",
      "offset": [
        4806,
        4819
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 29,
      "value": "0x0"
    },
    "2788": {
      "fn": "Ballot.closeBallot",
      "offset": [
        4806,
        4819
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2789": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2791": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "2793": {
      "op": "SHL"
    },
    "2794": {
      "fn": "Ballot.closeBallot",
      "offset": [
        4806,
        4819
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2795": {
      "fn": "Ballot.closeBallot",
      "offset": [
        4806,
        4819
      ],
      "op": "DIV",
      "path": "2"
    },
    "2796": {
      "fn": "Ballot.closeBallot",
      "offset": [
        4806,
        4819
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "2798": {
      "fn": "Ballot.closeBallot",
      "offset": [
        4806,
        4819
      ],
      "op": "AND",
      "path": "2"
    },
    "2799": {
      "branch": 48,
      "fn": "Ballot.closeBallot",
      "offset": [
        4806,
        4828
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2800": {
      "fn": "Ballot.closeBallot",
      "offset": [
        4798,
        4861
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB0B"
    },
    "2803": {
      "branch": 48,
      "fn": "Ballot.closeBallot",
      "offset": [
        4798,
        4861
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2804": {
      "fn": "Ballot.closeBallot",
      "offset": [
        4798,
        4861
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2806": {
      "fn": "Ballot.closeBallot",
      "offset": [
        4798,
        4861
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2807": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2811": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2813": {
      "op": "SHL"
    },
    "2814": {
      "fn": "Ballot.closeBallot",
      "offset": [
        4798,
        4861
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2815": {
      "fn": "Ballot.closeBallot",
      "offset": [
        4798,
        4861
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2816": {
      "fn": "Ballot.closeBallot",
      "offset": [
        4798,
        4861
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "2818": {
      "fn": "Ballot.closeBallot",
      "offset": [
        4798,
        4861
      ],
      "op": "ADD",
      "path": "2"
    },
    "2819": {
      "fn": "Ballot.closeBallot",
      "offset": [
        4798,
        4861
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x310"
    },
    "2822": {
      "fn": "Ballot.closeBallot",
      "offset": [
        4798,
        4861
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2823": {
      "fn": "Ballot.closeBallot",
      "offset": [
        4798,
        4861
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xEF7"
    },
    "2826": {
      "fn": "Ballot.closeBallot",
      "jump": "i",
      "offset": [
        4798,
        4861
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2827": {
      "fn": "Ballot.closeBallot",
      "offset": [
        4798,
        4861
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2828": {
      "fn": "Ballot.closeBallot",
      "offset": [
        4886,
        4891
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 30,
      "value": "0x0"
    },
    "2830": {
      "fn": "Ballot.closeBallot",
      "offset": [
        4871,
        4891
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2831": {
      "fn": "Ballot.closeBallot",
      "offset": [
        4871,
        4891
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2832": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "2834": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2836": {
      "op": "SHL"
    },
    "2837": {
      "op": "NOT"
    },
    "2838": {
      "fn": "Ballot.closeBallot",
      "offset": [
        4871,
        4891
      ],
      "op": "AND",
      "path": "2"
    },
    "2839": {
      "fn": "Ballot.closeBallot",
      "offset": [
        4871,
        4891
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2840": {
      "fn": "Ballot.closeBallot",
      "offset": [
        4871,
        4891
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "2841": {
      "fn": "Ballot.closeBallot",
      "jump": "o",
      "offset": [
        4748,
        4898
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2842": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2843": {
      "fn": "Ownable.owner",
      "offset": [
        1082,
        1089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2845": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2846": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2848": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2850": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2852": {
      "op": "SHL"
    },
    "2853": {
      "op": "SUB"
    },
    "2854": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "2855": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "1"
    },
    "2856": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "2857": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB44"
    },
    "2860": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2861": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2863": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2864": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2868": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2870": {
      "op": "SHL"
    },
    "2871": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2872": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2873": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2875": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "2876": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x310"
    },
    "2879": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2880": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xFAD"
    },
    "2883": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2884": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2885": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2887": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2889": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2891": {
      "op": "SHL"
    },
    "2892": {
      "op": "SUB"
    },
    "2893": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2006,
        2028
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 31
    },
    "2894": {
      "branch": 49,
      "fn": "Ownable.transferOwnership",
      "offset": [
        2006,
        2028
      ],
      "op": "AND",
      "path": "0"
    },
    "2895": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBA9"
    },
    "2898": {
      "branch": 49,
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2899": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2901": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2902": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2906": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2908": {
      "op": "SHL"
    },
    "2909": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2910": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2911": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2913": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2915": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2916": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "ADD",
      "path": "0"
    },
    "2917": {
      "op": "MSTORE"
    },
    "2918": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "2920": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2922": {
      "op": "DUP3"
    },
    "2923": {
      "op": "ADD"
    },
    "2924": {
      "op": "MSTORE"
    },
    "2925": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
    },
    "2958": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2960": {
      "op": "DUP3"
    },
    "2961": {
      "op": "ADD"
    },
    "2962": {
      "op": "MSTORE"
    },
    "2963": {
      "op": "PUSH6",
      "value": "0x646472657373"
    },
    "2970": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "2972": {
      "op": "SHL"
    },
    "2973": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2975": {
      "op": "DUP3"
    },
    "2976": {
      "op": "ADD"
    },
    "2977": {
      "op": "MSTORE"
    },
    "2978": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2980": {
      "op": "ADD"
    },
    "2981": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x310"
    },
    "2984": {
      "op": "JUMP"
    },
    "2985": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2986": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2109
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 32,
      "value": "0xBB2"
    },
    "2989": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2100,
        2108
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2990": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2099
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBE3"
    },
    "2993": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        2081,
        2109
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2994": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2109
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2995": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "POP",
      "path": "0"
    },
    "2996": {
      "fn": "Ownable.transferOwnership",
      "jump": "o",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2997": {
      "fn": "Ballot.getVotes",
      "offset": [
        3309,
        3473
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2998": {
      "fn": "Ballot.getVotes",
      "offset": [
        3391,
        3413
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3000": {
      "fn": "Ballot.getVotes",
      "offset": [
        3436,
        3445
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 33,
      "value": "0x1"
    },
    "3002": {
      "fn": "Ballot.getVotes",
      "offset": [
        3446,
        3455
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3003": {
      "fn": "Ballot.getVotes",
      "offset": [
        3436,
        3456
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3004": {
      "fn": "Ballot.getVotes",
      "offset": [
        3436,
        3456
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3005": {
      "fn": "Ballot.getVotes",
      "offset": [
        3436,
        3456
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3006": {
      "fn": "Ballot.getVotes",
      "offset": [
        3436,
        3456
      ],
      "op": "LT",
      "path": "2"
    },
    "3007": {
      "fn": "Ballot.getVotes",
      "offset": [
        3436,
        3456
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xBCA"
    },
    "3010": {
      "fn": "Ballot.getVotes",
      "offset": [
        3436,
        3456
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3011": {
      "fn": "Ballot.getVotes",
      "offset": [
        3436,
        3456
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xBCA"
    },
    "3014": {
      "fn": "Ballot.getVotes",
      "offset": [
        3436,
        3456
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xF2E"
    },
    "3017": {
      "fn": "Ballot.getVotes",
      "jump": "i",
      "offset": [
        3436,
        3456
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3018": {
      "fn": "Ballot.getVotes",
      "offset": [
        3436,
        3456
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3019": {
      "fn": "Ballot.getVotes",
      "offset": [
        3436,
        3456
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3020": {
      "fn": "Ballot.getVotes",
      "offset": [
        3436,
        3456
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3022": {
      "fn": "Ballot.getVotes",
      "offset": [
        3436,
        3456
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3023": {
      "fn": "Ballot.getVotes",
      "offset": [
        3436,
        3456
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3025": {
      "fn": "Ballot.getVotes",
      "offset": [
        3436,
        3456
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3027": {
      "fn": "Ballot.getVotes",
      "offset": [
        3436,
        3456
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "3028": {
      "fn": "Ballot.getVotes",
      "offset": [
        3436,
        3456
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3029": {
      "fn": "Ballot.getVotes",
      "offset": [
        3436,
        3456
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "3031": {
      "fn": "Ballot.getVotes",
      "offset": [
        3436,
        3456
      ],
      "op": "MUL",
      "path": "2"
    },
    "3032": {
      "fn": "Ballot.getVotes",
      "offset": [
        3436,
        3456
      ],
      "op": "ADD",
      "path": "2"
    },
    "3033": {
      "fn": "Ballot.getVotes",
      "offset": [
        3436,
        3466
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "3035": {
      "fn": "Ballot.getVotes",
      "offset": [
        3436,
        3466
      ],
      "op": "ADD",
      "path": "2"
    },
    "3036": {
      "fn": "Ballot.getVotes",
      "offset": [
        3436,
        3466
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3037": {
      "fn": "Ballot.getVotes",
      "offset": [
        3429,
        3466
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3038": {
      "fn": "Ballot.getVotes",
      "offset": [
        3429,
        3466
      ],
      "op": "POP",
      "path": "2"
    },
    "3039": {
      "fn": "Ballot.getVotes",
      "offset": [
        3309,
        3473
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3040": {
      "fn": "Ballot.getVotes",
      "offset": [
        3309,
        3473
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3041": {
      "fn": "Ballot.getVotes",
      "offset": [
        3309,
        3473
      ],
      "op": "POP",
      "path": "2"
    },
    "3042": {
      "fn": "Ballot.getVotes",
      "jump": "o",
      "offset": [
        3309,
        3473
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3043": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2270,
        2457
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3044": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2343,
        2359
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3046": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3047": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3048": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3050": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3052": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3054": {
      "op": "SHL"
    },
    "3055": {
      "op": "SUB"
    },
    "3056": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 34
    },
    "3057": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3058": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "AND",
      "path": "0"
    },
    "3059": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3061": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3063": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3065": {
      "op": "SHL"
    },
    "3066": {
      "op": "SUB"
    },
    "3067": {
      "op": "NOT"
    },
    "3068": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3069": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "AND",
      "path": "0"
    },
    "3070": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3071": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "OR",
      "path": "0"
    },
    "3072": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP5",
      "path": "0"
    },
    "3073": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "3074": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 35,
      "value": "0x40"
    },
    "3076": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3077": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3078": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3079": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3080": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "AND",
      "path": "0"
    },
    "3081": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3082": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3083": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3084": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "3117": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3118": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2343,
        2359
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3119": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "LOG3",
      "path": "0"
    },
    "3120": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2333,
        2457
      ],
      "op": "POP",
      "path": "0"
    },
    "3121": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2270,
        2457
      ],
      "op": "POP",
      "path": "0"
    },
    "3122": {
      "fn": "Ownable._transferOwnership",
      "jump": "o",
      "offset": [
        2270,
        2457
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3123": {
      "op": "JUMPDEST"
    },
    "3124": {
      "op": "DUP3"
    },
    "3125": {
      "op": "DUP1"
    },
    "3126": {
      "op": "SLOAD"
    },
    "3127": {
      "op": "PUSH2",
      "value": "0xC3F"
    },
    "3130": {
      "op": "SWAP1"
    },
    "3131": {
      "op": "PUSH2",
      "value": "0xF72"
    },
    "3134": {
      "jump": "i",
      "op": "JUMP"
    },
    "3135": {
      "op": "JUMPDEST"
    },
    "3136": {
      "op": "SWAP1"
    },
    "3137": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3139": {
      "op": "MSTORE"
    },
    "3140": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3142": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3144": {
      "op": "KECCAK256"
    },
    "3145": {
      "op": "SWAP1"
    },
    "3146": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3148": {
      "op": "ADD"
    },
    "3149": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3151": {
      "op": "SWAP1"
    },
    "3152": {
      "op": "DIV"
    },
    "3153": {
      "op": "DUP2"
    },
    "3154": {
      "op": "ADD"
    },
    "3155": {
      "op": "SWAP3"
    },
    "3156": {
      "op": "DUP3"
    },
    "3157": {
      "op": "PUSH2",
      "value": "0xC61"
    },
    "3160": {
      "op": "JUMPI"
    },
    "3161": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3163": {
      "op": "DUP6"
    },
    "3164": {
      "op": "SSTORE"
    },
    "3165": {
      "op": "PUSH2",
      "value": "0xCA7"
    },
    "3168": {
      "op": "JUMP"
    },
    "3169": {
      "op": "JUMPDEST"
    },
    "3170": {
      "op": "DUP3"
    },
    "3171": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3173": {
      "op": "LT"
    },
    "3174": {
      "op": "PUSH2",
      "value": "0xC7A"
    },
    "3177": {
      "op": "JUMPI"
    },
    "3178": {
      "op": "DUP1"
    },
    "3179": {
      "op": "MLOAD"
    },
    "3180": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "3182": {
      "op": "NOT"
    },
    "3183": {
      "op": "AND"
    },
    "3184": {
      "op": "DUP4"
    },
    "3185": {
      "op": "DUP1"
    },
    "3186": {
      "op": "ADD"
    },
    "3187": {
      "op": "OR"
    },
    "3188": {
      "op": "DUP6"
    },
    "3189": {
      "op": "SSTORE"
    },
    "3190": {
      "op": "PUSH2",
      "value": "0xCA7"
    },
    "3193": {
      "op": "JUMP"
    },
    "3194": {
      "op": "JUMPDEST"
    },
    "3195": {
      "op": "DUP3"
    },
    "3196": {
      "op": "DUP1"
    },
    "3197": {
      "op": "ADD"
    },
    "3198": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3200": {
      "op": "ADD"
    },
    "3201": {
      "op": "DUP6"
    },
    "3202": {
      "op": "SSTORE"
    },
    "3203": {
      "op": "DUP3"
    },
    "3204": {
      "op": "ISZERO"
    },
    "3205": {
      "op": "PUSH2",
      "value": "0xCA7"
    },
    "3208": {
      "op": "JUMPI"
    },
    "3209": {
      "op": "SWAP2"
    },
    "3210": {
      "op": "DUP3"
    },
    "3211": {
      "op": "ADD"
    },
    "3212": {
      "op": "JUMPDEST"
    },
    "3213": {
      "op": "DUP3"
    },
    "3214": {
      "op": "DUP2"
    },
    "3215": {
      "op": "GT"
    },
    "3216": {
      "op": "ISZERO"
    },
    "3217": {
      "op": "PUSH2",
      "value": "0xCA7"
    },
    "3220": {
      "op": "JUMPI"
    },
    "3221": {
      "op": "DUP3"
    },
    "3222": {
      "op": "MLOAD"
    },
    "3223": {
      "op": "DUP3"
    },
    "3224": {
      "op": "SSTORE"
    },
    "3225": {
      "op": "SWAP2"
    },
    "3226": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3228": {
      "op": "ADD"
    },
    "3229": {
      "op": "SWAP2"
    },
    "3230": {
      "op": "SWAP1"
    },
    "3231": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3233": {
      "op": "ADD"
    },
    "3234": {
      "op": "SWAP1"
    },
    "3235": {
      "op": "PUSH2",
      "value": "0xC8C"
    },
    "3238": {
      "op": "JUMP"
    },
    "3239": {
      "op": "JUMPDEST"
    },
    "3240": {
      "op": "POP"
    },
    "3241": {
      "op": "PUSH2",
      "value": "0xCB3"
    },
    "3244": {
      "op": "SWAP3"
    },
    "3245": {
      "op": "SWAP2"
    },
    "3246": {
      "op": "POP"
    },
    "3247": {
      "op": "PUSH2",
      "value": "0xCB7"
    },
    "3250": {
      "jump": "i",
      "op": "JUMP"
    },
    "3251": {
      "op": "JUMPDEST"
    },
    "3252": {
      "op": "POP"
    },
    "3253": {
      "op": "SWAP1"
    },
    "3254": {
      "jump": "o",
      "op": "JUMP"
    },
    "3255": {
      "op": "JUMPDEST"
    },
    "3256": {
      "op": "JUMPDEST"
    },
    "3257": {
      "op": "DUP1"
    },
    "3258": {
      "op": "DUP3"
    },
    "3259": {
      "op": "GT"
    },
    "3260": {
      "op": "ISZERO"
    },
    "3261": {
      "op": "PUSH2",
      "value": "0xCB3"
    },
    "3264": {
      "op": "JUMPI"
    },
    "3265": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3267": {
      "op": "DUP2"
    },
    "3268": {
      "op": "SSTORE"
    },
    "3269": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3271": {
      "op": "ADD"
    },
    "3272": {
      "op": "PUSH2",
      "value": "0xCB8"
    },
    "3275": {
      "op": "JUMP"
    },
    "3276": {
      "op": "JUMPDEST"
    },
    "3277": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3279": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3281": {
      "op": "DUP3"
    },
    "3282": {
      "op": "DUP5"
    },
    "3283": {
      "op": "SUB"
    },
    "3284": {
      "op": "SLT"
    },
    "3285": {
      "op": "ISZERO"
    },
    "3286": {
      "op": "PUSH2",
      "value": "0xCDE"
    },
    "3289": {
      "op": "JUMPI"
    },
    "3290": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3292": {
      "op": "DUP1"
    },
    "3293": {
      "op": "REVERT"
    },
    "3294": {
      "op": "JUMPDEST"
    },
    "3295": {
      "op": "POP"
    },
    "3296": {
      "op": "CALLDATALOAD"
    },
    "3297": {
      "op": "SWAP2"
    },
    "3298": {
      "op": "SWAP1"
    },
    "3299": {
      "op": "POP"
    },
    "3300": {
      "jump": "o",
      "op": "JUMP"
    },
    "3301": {
      "op": "JUMPDEST"
    },
    "3302": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3304": {
      "op": "DUP2"
    },
    "3305": {
      "op": "MLOAD"
    },
    "3306": {
      "op": "DUP1"
    },
    "3307": {
      "op": "DUP5"
    },
    "3308": {
      "op": "MSTORE"
    },
    "3309": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3311": {
      "op": "JUMPDEST"
    },
    "3312": {
      "op": "DUP2"
    },
    "3313": {
      "op": "DUP2"
    },
    "3314": {
      "op": "LT"
    },
    "3315": {
      "op": "ISZERO"
    },
    "3316": {
      "op": "PUSH2",
      "value": "0xD0B"
    },
    "3319": {
      "op": "JUMPI"
    },
    "3320": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3322": {
      "op": "DUP2"
    },
    "3323": {
      "op": "DUP6"
    },
    "3324": {
      "op": "ADD"
    },
    "3325": {
      "op": "DUP2"
    },
    "3326": {
      "op": "ADD"
    },
    "3327": {
      "op": "MLOAD"
    },
    "3328": {
      "op": "DUP7"
    },
    "3329": {
      "op": "DUP4"
    },
    "3330": {
      "op": "ADD"
    },
    "3331": {
      "op": "DUP3"
    },
    "3332": {
      "op": "ADD"
    },
    "3333": {
      "op": "MSTORE"
    },
    "3334": {
      "op": "ADD"
    },
    "3335": {
      "op": "PUSH2",
      "value": "0xCEF"
    },
    "3338": {
      "op": "JUMP"
    },
    "3339": {
      "op": "JUMPDEST"
    },
    "3340": {
      "op": "DUP2"
    },
    "3341": {
      "op": "DUP2"
    },
    "3342": {
      "op": "GT"
    },
    "3343": {
      "op": "ISZERO"
    },
    "3344": {
      "op": "PUSH2",
      "value": "0xD1D"
    },
    "3347": {
      "op": "JUMPI"
    },
    "3348": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3350": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3352": {
      "op": "DUP4"
    },
    "3353": {
      "op": "DUP8"
    },
    "3354": {
      "op": "ADD"
    },
    "3355": {
      "op": "ADD"
    },
    "3356": {
      "op": "MSTORE"
    },
    "3357": {
      "op": "JUMPDEST"
    },
    "3358": {
      "op": "POP"
    },
    "3359": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3361": {
      "op": "ADD"
    },
    "3362": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3364": {
      "op": "NOT"
    },
    "3365": {
      "op": "AND"
    },
    "3366": {
      "op": "SWAP3"
    },
    "3367": {
      "op": "SWAP1"
    },
    "3368": {
      "op": "SWAP3"
    },
    "3369": {
      "op": "ADD"
    },
    "3370": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3372": {
      "op": "ADD"
    },
    "3373": {
      "op": "SWAP3"
    },
    "3374": {
      "op": "SWAP2"
    },
    "3375": {
      "op": "POP"
    },
    "3376": {
      "op": "POP"
    },
    "3377": {
      "jump": "o",
      "op": "JUMP"
    },
    "3378": {
      "op": "JUMPDEST"
    },
    "3379": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3381": {
      "op": "DUP2"
    },
    "3382": {
      "op": "MSTORE"
    },
    "3383": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3385": {
      "op": "PUSH2",
      "value": "0xD45"
    },
    "3388": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3390": {
      "op": "DUP4"
    },
    "3391": {
      "op": "ADD"
    },
    "3392": {
      "op": "DUP6"
    },
    "3393": {
      "op": "PUSH2",
      "value": "0xCE5"
    },
    "3396": {
      "jump": "i",
      "op": "JUMP"
    },
    "3397": {
      "op": "JUMPDEST"
    },
    "3398": {
      "op": "SWAP1"
    },
    "3399": {
      "op": "POP"
    },
    "3400": {
      "op": "DUP3"
    },
    "3401": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3403": {
      "op": "DUP4"
    },
    "3404": {
      "op": "ADD"
    },
    "3405": {
      "op": "MSTORE"
    },
    "3406": {
      "op": "SWAP4"
    },
    "3407": {
      "op": "SWAP3"
    },
    "3408": {
      "op": "POP"
    },
    "3409": {
      "op": "POP"
    },
    "3410": {
      "op": "POP"
    },
    "3411": {
      "jump": "o",
      "op": "JUMP"
    },
    "3412": {
      "op": "JUMPDEST"
    },
    "3413": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "3418": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3420": {
      "op": "SHL"
    },
    "3421": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3423": {
      "op": "MSTORE"
    },
    "3424": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "3426": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "3428": {
      "op": "MSTORE"
    },
    "3429": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3431": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3433": {
      "op": "REVERT"
    },
    "3434": {
      "op": "JUMPDEST"
    },
    "3435": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3437": {
      "op": "MLOAD"
    },
    "3438": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3440": {
      "op": "DUP3"
    },
    "3441": {
      "op": "ADD"
    },
    "3442": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3444": {
      "op": "NOT"
    },
    "3445": {
      "op": "AND"
    },
    "3446": {
      "op": "DUP2"
    },
    "3447": {
      "op": "ADD"
    },
    "3448": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "3457": {
      "op": "DUP2"
    },
    "3458": {
      "op": "GT"
    },
    "3459": {
      "op": "DUP3"
    },
    "3460": {
      "op": "DUP3"
    },
    "3461": {
      "op": "LT"
    },
    "3462": {
      "op": "OR"
    },
    "3463": {
      "op": "ISZERO"
    },
    "3464": {
      "op": "PUSH2",
      "value": "0xD93"
    },
    "3467": {
      "op": "JUMPI"
    },
    "3468": {
      "op": "PUSH2",
      "value": "0xD93"
    },
    "3471": {
      "op": "PUSH2",
      "value": "0xD54"
    },
    "3474": {
      "jump": "i",
      "op": "JUMP"
    },
    "3475": {
      "op": "JUMPDEST"
    },
    "3476": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3478": {
      "op": "MSTORE"
    },
    "3479": {
      "op": "SWAP2"
    },
    "3480": {
      "op": "SWAP1"
    },
    "3481": {
      "op": "POP"
    },
    "3482": {
      "jump": "o",
      "op": "JUMP"
    },
    "3483": {
      "op": "JUMPDEST"
    },
    "3484": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3486": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3488": {
      "op": "DUP1"
    },
    "3489": {
      "op": "DUP4"
    },
    "3490": {
      "op": "DUP6"
    },
    "3491": {
      "op": "SUB"
    },
    "3492": {
      "op": "SLT"
    },
    "3493": {
      "op": "ISZERO"
    },
    "3494": {
      "op": "PUSH2",
      "value": "0xDAE"
    },
    "3497": {
      "op": "JUMPI"
    },
    "3498": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3500": {
      "op": "DUP1"
    },
    "3501": {
      "op": "REVERT"
    },
    "3502": {
      "op": "JUMPDEST"
    },
    "3503": {
      "op": "DUP3"
    },
    "3504": {
      "op": "CALLDATALOAD"
    },
    "3505": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "3514": {
      "op": "DUP1"
    },
    "3515": {
      "op": "DUP3"
    },
    "3516": {
      "op": "GT"
    },
    "3517": {
      "op": "ISZERO"
    },
    "3518": {
      "op": "PUSH2",
      "value": "0xDC6"
    },
    "3521": {
      "op": "JUMPI"
    },
    "3522": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3524": {
      "op": "DUP1"
    },
    "3525": {
      "op": "REVERT"
    },
    "3526": {
      "op": "JUMPDEST"
    },
    "3527": {
      "op": "DUP2"
    },
    "3528": {
      "op": "DUP6"
    },
    "3529": {
      "op": "ADD"
    },
    "3530": {
      "op": "SWAP2"
    },
    "3531": {
      "op": "POP"
    },
    "3532": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3534": {
      "op": "DUP7"
    },
    "3535": {
      "op": "DUP2"
    },
    "3536": {
      "op": "DUP5"
    },
    "3537": {
      "op": "ADD"
    },
    "3538": {
      "op": "SLT"
    },
    "3539": {
      "op": "PUSH2",
      "value": "0xDDB"
    },
    "3542": {
      "op": "JUMPI"
    },
    "3543": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3545": {
      "op": "DUP1"
    },
    "3546": {
      "op": "REVERT"
    },
    "3547": {
      "op": "JUMPDEST"
    },
    "3548": {
      "op": "DUP3"
    },
    "3549": {
      "op": "CALLDATALOAD"
    },
    "3550": {
      "op": "DUP3"
    },
    "3551": {
      "op": "DUP2"
    },
    "3552": {
      "op": "GT"
    },
    "3553": {
      "op": "ISZERO"
    },
    "3554": {
      "op": "PUSH2",
      "value": "0xDED"
    },
    "3557": {
      "op": "JUMPI"
    },
    "3558": {
      "op": "PUSH2",
      "value": "0xDED"
    },
    "3561": {
      "op": "PUSH2",
      "value": "0xD54"
    },
    "3564": {
      "jump": "i",
      "op": "JUMP"
    },
    "3565": {
      "op": "JUMPDEST"
    },
    "3566": {
      "op": "DUP1"
    },
    "3567": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "3569": {
      "op": "SHL"
    },
    "3570": {
      "op": "PUSH2",
      "value": "0xDFC"
    },
    "3573": {
      "op": "DUP7"
    },
    "3574": {
      "op": "DUP3"
    },
    "3575": {
      "op": "ADD"
    },
    "3576": {
      "op": "PUSH2",
      "value": "0xD6A"
    },
    "3579": {
      "jump": "i",
      "op": "JUMP"
    },
    "3580": {
      "op": "JUMPDEST"
    },
    "3581": {
      "op": "SWAP2"
    },
    "3582": {
      "op": "DUP3"
    },
    "3583": {
      "op": "MSTORE"
    },
    "3584": {
      "op": "DUP5"
    },
    "3585": {
      "op": "DUP2"
    },
    "3586": {
      "op": "ADD"
    },
    "3587": {
      "op": "DUP7"
    },
    "3588": {
      "op": "ADD"
    },
    "3589": {
      "op": "SWAP2"
    },
    "3590": {
      "op": "DUP7"
    },
    "3591": {
      "op": "DUP2"
    },
    "3592": {
      "op": "ADD"
    },
    "3593": {
      "op": "SWAP1"
    },
    "3594": {
      "op": "DUP11"
    },
    "3595": {
      "op": "DUP5"
    },
    "3596": {
      "op": "GT"
    },
    "3597": {
      "op": "ISZERO"
    },
    "3598": {
      "op": "PUSH2",
      "value": "0xE16"
    },
    "3601": {
      "op": "JUMPI"
    },
    "3602": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3604": {
      "op": "DUP1"
    },
    "3605": {
      "op": "REVERT"
    },
    "3606": {
      "op": "JUMPDEST"
    },
    "3607": {
      "op": "DUP8"
    },
    "3608": {
      "op": "DUP8"
    },
    "3609": {
      "op": "ADD"
    },
    "3610": {
      "op": "SWAP3"
    },
    "3611": {
      "op": "POP"
    },
    "3612": {
      "op": "JUMPDEST"
    },
    "3613": {
      "op": "DUP4"
    },
    "3614": {
      "op": "DUP4"
    },
    "3615": {
      "op": "LT"
    },
    "3616": {
      "op": "ISZERO"
    },
    "3617": {
      "op": "PUSH2",
      "value": "0xEA6"
    },
    "3620": {
      "op": "JUMPI"
    },
    "3621": {
      "op": "DUP3"
    },
    "3622": {
      "op": "CALLDATALOAD"
    },
    "3623": {
      "op": "DUP7"
    },
    "3624": {
      "op": "DUP2"
    },
    "3625": {
      "op": "GT"
    },
    "3626": {
      "op": "ISZERO"
    },
    "3627": {
      "op": "PUSH2",
      "value": "0xE34"
    },
    "3630": {
      "op": "JUMPI"
    },
    "3631": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3633": {
      "op": "DUP1"
    },
    "3634": {
      "op": "DUP2"
    },
    "3635": {
      "op": "REVERT"
    },
    "3636": {
      "op": "JUMPDEST"
    },
    "3637": {
      "op": "DUP8"
    },
    "3638": {
      "op": "ADD"
    },
    "3639": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "3641": {
      "op": "DUP2"
    },
    "3642": {
      "op": "ADD"
    },
    "3643": {
      "op": "DUP13"
    },
    "3644": {
      "op": "SGT"
    },
    "3645": {
      "op": "PUSH2",
      "value": "0xE46"
    },
    "3648": {
      "op": "JUMPI"
    },
    "3649": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3651": {
      "op": "DUP1"
    },
    "3652": {
      "op": "DUP2"
    },
    "3653": {
      "op": "REVERT"
    },
    "3654": {
      "op": "JUMPDEST"
    },
    "3655": {
      "op": "DUP9"
    },
    "3656": {
      "op": "DUP2"
    },
    "3657": {
      "op": "ADD"
    },
    "3658": {
      "op": "CALLDATALOAD"
    },
    "3659": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3661": {
      "op": "DUP9"
    },
    "3662": {
      "op": "DUP3"
    },
    "3663": {
      "op": "GT"
    },
    "3664": {
      "op": "ISZERO"
    },
    "3665": {
      "op": "PUSH2",
      "value": "0xE5C"
    },
    "3668": {
      "op": "JUMPI"
    },
    "3669": {
      "op": "PUSH2",
      "value": "0xE5C"
    },
    "3672": {
      "op": "PUSH2",
      "value": "0xD54"
    },
    "3675": {
      "jump": "i",
      "op": "JUMP"
    },
    "3676": {
      "op": "JUMPDEST"
    },
    "3677": {
      "op": "PUSH2",
      "value": "0xE6D"
    },
    "3680": {
      "op": "DUP3"
    },
    "3681": {
      "op": "DUP10"
    },
    "3682": {
      "op": "ADD"
    },
    "3683": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3685": {
      "op": "NOT"
    },
    "3686": {
      "op": "AND"
    },
    "3687": {
      "op": "DUP13"
    },
    "3688": {
      "op": "ADD"
    },
    "3689": {
      "op": "PUSH2",
      "value": "0xD6A"
    },
    "3692": {
      "jump": "i",
      "op": "JUMP"
    },
    "3693": {
      "op": "JUMPDEST"
    },
    "3694": {
      "op": "DUP3"
    },
    "3695": {
      "op": "DUP2"
    },
    "3696": {
      "op": "MSTORE"
    },
    "3697": {
      "op": "DUP15"
    },
    "3698": {
      "op": "DUP3"
    },
    "3699": {
      "op": "DUP5"
    },
    "3700": {
      "op": "DUP7"
    },
    "3701": {
      "op": "ADD"
    },
    "3702": {
      "op": "ADD"
    },
    "3703": {
      "op": "GT"
    },
    "3704": {
      "op": "ISZERO"
    },
    "3705": {
      "op": "PUSH2",
      "value": "0xE82"
    },
    "3708": {
      "op": "JUMPI"
    },
    "3709": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3711": {
      "op": "DUP1"
    },
    "3712": {
      "op": "DUP2"
    },
    "3713": {
      "op": "REVERT"
    },
    "3714": {
      "op": "JUMPDEST"
    },
    "3715": {
      "op": "DUP3"
    },
    "3716": {
      "op": "DUP3"
    },
    "3717": {
      "op": "DUP6"
    },
    "3718": {
      "op": "ADD"
    },
    "3719": {
      "op": "DUP14"
    },
    "3720": {
      "op": "DUP4"
    },
    "3721": {
      "op": "ADD"
    },
    "3722": {
      "op": "CALLDATACOPY"
    },
    "3723": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3725": {
      "op": "SWAP3"
    },
    "3726": {
      "op": "DUP2"
    },
    "3727": {
      "op": "ADD"
    },
    "3728": {
      "op": "DUP13"
    },
    "3729": {
      "op": "ADD"
    },
    "3730": {
      "op": "SWAP3"
    },
    "3731": {
      "op": "SWAP1"
    },
    "3732": {
      "op": "SWAP3"
    },
    "3733": {
      "op": "MSTORE"
    },
    "3734": {
      "op": "POP"
    },
    "3735": {
      "op": "DUP4"
    },
    "3736": {
      "op": "MSTORE"
    },
    "3737": {
      "op": "POP"
    },
    "3738": {
      "op": "SWAP2"
    },
    "3739": {
      "op": "DUP8"
    },
    "3740": {
      "op": "ADD"
    },
    "3741": {
      "op": "SWAP2"
    },
    "3742": {
      "op": "SWAP1"
    },
    "3743": {
      "op": "DUP8"
    },
    "3744": {
      "op": "ADD"
    },
    "3745": {
      "op": "SWAP1"
    },
    "3746": {
      "op": "PUSH2",
      "value": "0xE1C"
    },
    "3749": {
      "op": "JUMP"
    },
    "3750": {
      "op": "JUMPDEST"
    },
    "3751": {
      "op": "SWAP11"
    },
    "3752": {
      "op": "SWAP10"
    },
    "3753": {
      "op": "POP"
    },
    "3754": {
      "op": "POP"
    },
    "3755": {
      "op": "POP"
    },
    "3756": {
      "op": "POP"
    },
    "3757": {
      "op": "POP"
    },
    "3758": {
      "op": "POP"
    },
    "3759": {
      "op": "POP"
    },
    "3760": {
      "op": "POP"
    },
    "3761": {
      "op": "POP"
    },
    "3762": {
      "op": "POP"
    },
    "3763": {
      "jump": "o",
      "op": "JUMP"
    },
    "3764": {
      "op": "JUMPDEST"
    },
    "3765": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3767": {
      "op": "DUP2"
    },
    "3768": {
      "op": "MSTORE"
    },
    "3769": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3771": {
      "op": "PUSH2",
      "value": "0xEC7"
    },
    "3774": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3776": {
      "op": "DUP4"
    },
    "3777": {
      "op": "ADD"
    },
    "3778": {
      "op": "DUP5"
    },
    "3779": {
      "op": "PUSH2",
      "value": "0xCE5"
    },
    "3782": {
      "jump": "i",
      "op": "JUMP"
    },
    "3783": {
      "op": "JUMPDEST"
    },
    "3784": {
      "op": "SWAP4"
    },
    "3785": {
      "op": "SWAP3"
    },
    "3786": {
      "op": "POP"
    },
    "3787": {
      "op": "POP"
    },
    "3788": {
      "op": "POP"
    },
    "3789": {
      "jump": "o",
      "op": "JUMP"
    },
    "3790": {
      "op": "JUMPDEST"
    },
    "3791": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3793": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3795": {
      "op": "DUP3"
    },
    "3796": {
      "op": "DUP5"
    },
    "3797": {
      "op": "SUB"
    },
    "3798": {
      "op": "SLT"
    },
    "3799": {
      "op": "ISZERO"
    },
    "3800": {
      "op": "PUSH2",
      "value": "0xEE0"
    },
    "3803": {
      "op": "JUMPI"
    },
    "3804": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3806": {
      "op": "DUP1"
    },
    "3807": {
      "op": "REVERT"
    },
    "3808": {
      "op": "JUMPDEST"
    },
    "3809": {
      "op": "DUP2"
    },
    "3810": {
      "op": "CALLDATALOAD"
    },
    "3811": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3813": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3815": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3817": {
      "op": "SHL"
    },
    "3818": {
      "op": "SUB"
    },
    "3819": {
      "op": "DUP2"
    },
    "3820": {
      "op": "AND"
    },
    "3821": {
      "op": "DUP2"
    },
    "3822": {
      "op": "EQ"
    },
    "3823": {
      "op": "PUSH2",
      "value": "0xEC7"
    },
    "3826": {
      "op": "JUMPI"
    },
    "3827": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3829": {
      "op": "DUP1"
    },
    "3830": {
      "op": "REVERT"
    },
    "3831": {
      "op": "JUMPDEST"
    },
    "3832": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3834": {
      "op": "DUP1"
    },
    "3835": {
      "op": "DUP3"
    },
    "3836": {
      "op": "MSTORE"
    },
    "3837": {
      "op": "PUSH1",
      "value": "0x1C"
    },
    "3839": {
      "op": "SWAP1"
    },
    "3840": {
      "op": "DUP3"
    },
    "3841": {
      "op": "ADD"
    },
    "3842": {
      "op": "MSTORE"
    },
    "3843": {
      "op": "PUSH32",
      "value": "0x62616C6C6F742068617320616C726561647920636F6E636C7564656400000000"
    },
    "3876": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3878": {
      "op": "DUP3"
    },
    "3879": {
      "op": "ADD"
    },
    "3880": {
      "op": "MSTORE"
    },
    "3881": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3883": {
      "op": "ADD"
    },
    "3884": {
      "op": "SWAP1"
    },
    "3885": {
      "jump": "o",
      "op": "JUMP"
    },
    "3886": {
      "op": "JUMPDEST"
    },
    "3887": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "3892": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3894": {
      "op": "SHL"
    },
    "3895": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3897": {
      "op": "MSTORE"
    },
    "3898": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "3900": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "3902": {
      "op": "MSTORE"
    },
    "3903": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3905": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3907": {
      "op": "REVERT"
    },
    "3908": {
      "op": "JUMPDEST"
    },
    "3909": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "3914": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3916": {
      "op": "SHL"
    },
    "3917": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3919": {
      "op": "MSTORE"
    },
    "3920": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "3922": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "3924": {
      "op": "MSTORE"
    },
    "3925": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3927": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3929": {
      "op": "REVERT"
    },
    "3930": {
      "op": "JUMPDEST"
    },
    "3931": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3933": {
      "op": "DUP3"
    },
    "3934": {
      "op": "NOT"
    },
    "3935": {
      "op": "DUP3"
    },
    "3936": {
      "op": "GT"
    },
    "3937": {
      "op": "ISZERO"
    },
    "3938": {
      "op": "PUSH2",
      "value": "0xF6D"
    },
    "3941": {
      "op": "JUMPI"
    },
    "3942": {
      "op": "PUSH2",
      "value": "0xF6D"
    },
    "3945": {
      "op": "PUSH2",
      "value": "0xF44"
    },
    "3948": {
      "jump": "i",
      "op": "JUMP"
    },
    "3949": {
      "op": "JUMPDEST"
    },
    "3950": {
      "op": "POP"
    },
    "3951": {
      "op": "ADD"
    },
    "3952": {
      "op": "SWAP1"
    },
    "3953": {
      "jump": "o",
      "op": "JUMP"
    },
    "3954": {
      "op": "JUMPDEST"
    },
    "3955": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3957": {
      "op": "DUP2"
    },
    "3958": {
      "op": "DUP2"
    },
    "3959": {
      "op": "SHR"
    },
    "3960": {
      "op": "SWAP1"
    },
    "3961": {
      "op": "DUP3"
    },
    "3962": {
      "op": "AND"
    },
    "3963": {
      "op": "DUP1"
    },
    "3964": {
      "op": "PUSH2",
      "value": "0xF86"
    },
    "3967": {
      "op": "JUMPI"
    },
    "3968": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "3970": {
      "op": "DUP3"
    },
    "3971": {
      "op": "AND"
    },
    "3972": {
      "op": "SWAP2"
    },
    "3973": {
      "op": "POP"
    },
    "3974": {
      "op": "JUMPDEST"
    },
    "3975": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3977": {
      "op": "DUP3"
    },
    "3978": {
      "op": "LT"
    },
    "3979": {
      "op": "DUP2"
    },
    "3980": {
      "op": "EQ"
    },
    "3981": {
      "op": "ISZERO"
    },
    "3982": {
      "op": "PUSH2",
      "value": "0xFA7"
    },
    "3985": {
      "op": "JUMPI"
    },
    "3986": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "3991": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3993": {
      "op": "SHL"
    },
    "3994": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3996": {
      "op": "MSTORE"
    },
    "3997": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "3999": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4001": {
      "op": "MSTORE"
    },
    "4002": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4004": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4006": {
      "op": "REVERT"
    },
    "4007": {
      "op": "JUMPDEST"
    },
    "4008": {
      "op": "POP"
    },
    "4009": {
      "op": "SWAP2"
    },
    "4010": {
      "op": "SWAP1"
    },
    "4011": {
      "op": "POP"
    },
    "4012": {
      "jump": "o",
      "op": "JUMP"
    },
    "4013": {
      "op": "JUMPDEST"
    },
    "4014": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4016": {
      "op": "DUP1"
    },
    "4017": {
      "op": "DUP3"
    },
    "4018": {
      "op": "MSTORE"
    },
    "4019": {
      "op": "DUP2"
    },
    "4020": {
      "op": "DUP2"
    },
    "4021": {
      "op": "ADD"
    },
    "4022": {
      "op": "MSTORE"
    },
    "4023": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
    },
    "4056": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4058": {
      "op": "DUP3"
    },
    "4059": {
      "op": "ADD"
    },
    "4060": {
      "op": "MSTORE"
    },
    "4061": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4063": {
      "op": "ADD"
    },
    "4064": {
      "op": "SWAP1"
    },
    "4065": {
      "jump": "o",
      "op": "JUMP"
    },
    "4066": {
      "op": "JUMPDEST"
    },
    "4067": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4069": {
      "op": "DUP1"
    },
    "4070": {
      "op": "DUP3"
    },
    "4071": {
      "op": "MSTORE"
    },
    "4072": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "4074": {
      "op": "SWAP1"
    },
    "4075": {
      "op": "DUP3"
    },
    "4076": {
      "op": "ADD"
    },
    "4077": {
      "op": "MSTORE"
    },
    "4078": {
      "op": "PUSH32",
      "value": "0x546869732062616C6C6F742068617320616C726561647920636F6E636C756465"
    },
    "4111": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4113": {
      "op": "DUP3"
    },
    "4114": {
      "op": "ADD"
    },
    "4115": {
      "op": "MSTORE"
    },
    "4116": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "4118": {
      "op": "PUSH1",
      "value": "0xFA"
    },
    "4120": {
      "op": "SHL"
    },
    "4121": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4123": {
      "op": "DUP3"
    },
    "4124": {
      "op": "ADD"
    },
    "4125": {
      "op": "MSTORE"
    },
    "4126": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4128": {
      "op": "ADD"
    },
    "4129": {
      "op": "SWAP1"
    },
    "4130": {
      "jump": "o",
      "op": "JUMP"
    },
    "4131": {
      "op": "JUMPDEST"
    },
    "4132": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4134": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4136": {
      "op": "NOT"
    },
    "4137": {
      "op": "DUP3"
    },
    "4138": {
      "op": "EQ"
    },
    "4139": {
      "op": "ISZERO"
    },
    "4140": {
      "op": "PUSH2",
      "value": "0x1037"
    },
    "4143": {
      "op": "JUMPI"
    },
    "4144": {
      "op": "PUSH2",
      "value": "0x1037"
    },
    "4147": {
      "op": "PUSH2",
      "value": "0xF44"
    },
    "4150": {
      "jump": "i",
      "op": "JUMP"
    },
    "4151": {
      "op": "JUMPDEST"
    },
    "4152": {
      "op": "POP"
    },
    "4153": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4155": {
      "op": "ADD"
    },
    "4156": {
      "op": "SWAP1"
    },
    "4157": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "ed5e06a2802124ecd9894d223fe28902b2f2baad",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity >=0.7.0 <0.9.0;\npragma experimental ABIEncoderV2;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\ncontract Ballot is Ownable {\n    // proposal: needs a name, record of how many votes, options?\n    struct Proposal {\n        string name;\n        uint256 voteCount;\n    }\n    // voters: already voted? (bool), access to vote? (uint), vote index (uint)\n    struct Voter {\n        uint256 voteNo;\n        bool voted;\n        uint256 weight;\n    }\n\n    bool public ballotIsOpen;\n    bool public ballotIsEnded = false;\n    Proposal[] public proposals; // list of proposals\n\n    mapping(address => Voter) public voters; // key[value] pair, address[voter]\n\n    address public chairperson;\n\n    // proposalNames will add the proposal names to the smart contract on deployment\n    constructor(string[] memory proposalNames) {\n        ballotIsOpen = true;\n        chairperson = msg.sender;\n        voters[chairperson].weight = 1; // allocate 1 weight to chair/admin\n        for (uint256 i = 0; i < proposalNames.length; i++) {\n            proposals.push(Proposal({name: proposalNames[i], voteCount: 0}));\n        }\n    }\n\n    // add new proposals to proposals list\n    function addProposals(string[] memory newProposalNames) public onlyOwner {\n        require(ballotIsEnded == false, \"This ballot has already concluded\");\n        for (uint256 i = 0; i < newProposalNames.length; i++) {\n            proposals.push(Proposal({name: newProposalNames[i], voteCount: 0}));\n        }\n    }\n\n    // cast vote by proposal name\n    // function castVote(string _vote) public {\n    //     Voter storage sender = voters[msg.sender];\n\n    //     require(ballotIsOpen, \"ballot is currently closed\");\n    //     require(!ballotIsEnded, \"ballot has already concluded\");\n    //     require(!sender.voted, \"address has already voted!\");\n    //     require(sender.weight > 0, \"address not approved to vote!\");\n\n    //     uint256 check = 0;\n    //     for (uint256 i = 0; i < proposals.length; i++) {\n    //         if (proposals[i].name == _vote) {\n    //             proposals[i].voteCount += sender.weight;\n    //             check += 1;\n    //         }\n    //     }\n    //     if (check > 0) {\n    //         sender.voted = true;\n    //         sender.voteNo += 1;\n    //     }\n    // }\n\n    // cast vote by index\n    function vote(uint256 _vote) public {\n        Voter storage sender = voters[msg.sender]; // define data location that will run between function calls\n\n        require(_vote <= proposals.length, \"invalid entry\");\n        require(ballotIsOpen, \"ballot is currently closed\");\n        require(!ballotIsEnded, \"ballot has already concluded\");\n        require(!sender.voted, \"address has already voted!\");\n        require(sender.weight > 0, \"address not approved to vote!\");\n\n        proposals[_vote].voteCount += sender.weight;\n\n        sender.voted = true;\n        sender.voteNo += 1;\n    }\n\n    // authentication\n    function giveRightToVote(address _voter) public onlyOwner {\n        require(!ballotIsEnded, \"ballot has already concluded\");\n        require(voters[_voter].weight == 0, \"voter already has right to vote!\");\n        require(!voters[_voter].voted, \"voter has already voted!\");\n\n        voters[_voter].weight = 1;\n    }\n\n    // display results only\n    function getVotes(uint256 _proposal)\n        public\n        view\n        returns (uint256 proposalVotes_)\n    {\n        return proposals[_proposal].voteCount;\n    }\n\n    // retrieve proposal name only\n    function getName(uint256 _proposal)\n        public\n        view\n        returns (string memory proposalName_)\n    {\n        return proposals[_proposal].name;\n    }\n\n    // retrieve proposal name only\n    function getLength() public view returns (uint256 numOfProposals_) {\n        return proposals.length;\n    }\n\n    // end ballot and count votes\n    function concludeBallot() public onlyOwner {\n        ballotIsOpen = false;\n        ballotIsEnded = true;\n    }\n\n    function getResults()\n        public\n        view\n        returns (string memory winner_, uint256 winningVoteCount_)\n    {\n        require(ballotIsEnded == true, \"ballot is still open.\");\n\n        string memory winner;\n        uint256 votes = 0;\n\n        for (uint256 i = 0; i < proposals.length; i++) {\n            if (proposals[i].voteCount > votes) {\n                votes = proposals[i].voteCount;\n                winner = proposals[i].name;\n            }\n        }\n        return (winner, votes);\n    }\n\n    // is there a way to add approved addresses to authentication of Owner?\n    function openBallot() public onlyOwner {\n        require(ballotIsEnded == false, \"This ballot has already concluded\");\n        ballotIsOpen = true;\n    }\n\n    // closeBallot\n    function closeBallot() public onlyOwner {\n        require(ballotIsEnded == false, \"ballot has already concluded\");\n        ballotIsOpen = false;\n    }\n}\n\n// --- MAIN TAKEAWAYS ---\n\n// memory vs storage\n\n// memory defines a temporary data location for Solidity during runtime only of methods\n// ...memory keyword guarantees space for the variable/transaction\n// without using memory, the objects will only be recalled inbetween function calls\n// ...this is inherently more temporary\n// when using storage keyword, \"the object/variable would not be wiped off\" << check this for clarity\n// -- memory is more efficient, requires less gas\n\n// bytes32 as string\n\n// uses node.js package 'ethers' to convert strings to byte32 on chain,\n// reducing the gas required for interacting with smart contracts\n",
  "sourceMap": "153:4747:2:-:0;;;560:5;532:33;;-1:-1:-1;;;;532:33:2;;;825:338;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;921:32:0;719:10:1;921:18:0;:32::i;:::-;878:12:2;:19;;-1:-1:-1;;;;878:19:2;-1:-1:-1;;;878:19:2;;;907:11;:24;;-1:-1:-1;;;;;;907:24:2;921:10;907:24;;;;;;941:19;;:6;:19;;;;;;;893:4;941:26;;:30;1017:140;1041:13;:20;1037:1;:24;1017:140;;;1082:9;1097:48;;;;;;;;1113:13;1127:1;1113:16;;;;;;;;:::i;:::-;;;;;;;;;;;;1097:48;;1142:1;1097:48;;;;;;1082:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;1063:3;;;;;:::i;:::-;;;;1017:140;;;;825:338;153:4747;;2270:187:0;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:0;;;-1:-1:-1;;;;;;2378:17:0;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2333:124;2270:187;:::o;153:4747:2:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;153:4747:2;;;-1:-1:-1;153:4747:2;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:127:3;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:275;217:2;211:9;282:2;263:13;;-1:-1:-1;;259:27:3;247:40;;-1:-1:-1;;;;;302:34:3;;338:22;;;299:62;296:88;;;364:18;;:::i;:::-;400:2;393:22;146:275;;-1:-1:-1;146:275:3:o;426:1957::-;531:6;562:2;605;593:9;584:7;580:23;576:32;573:52;;;621:1;618;611:12;573:52;648:16;;-1:-1:-1;;;;;713:14:3;;;710:34;;;740:1;737;730:12;710:34;778:6;767:9;763:22;753:32;;804:4;844:7;839:2;835;831:11;827:25;817:53;;866:1;863;856:12;817:53;895:2;889:9;917:2;913;910:10;907:36;;;923:18;;:::i;:::-;969:2;966:1;962:10;992:28;1016:2;1012;1008:11;992:28;:::i;:::-;1054:15;;;1124:11;;;1120:20;;;1085:12;;;;1152:19;;;1149:39;;;1184:1;1181;1174:12;1149:39;1216:2;1212;1208:11;1197:22;;1228:1125;1244:6;1239:3;1236:15;1228:1125;;;1323:3;1317:10;1359:2;1346:11;1343:19;1340:109;;;1403:1;1432:2;1428;1421:14;1340:109;1472:20;;1527:2;1519:11;;1515:25;-1:-1:-1;1505:123:3;;1582:1;1611:2;1607;1600:14;1505:123;1666:2;1662;1658:11;1652:18;1694:2;1689:3;1686:11;1683:37;;;1700:18;;:::i;:::-;1746:52;1770:12;;;-1:-1:-1;;1766:26:3;1762:35;;1746:52;:::i;:::-;1825:3;1818:5;1811:18;1853:2;1898:7;1892:3;1886;1882:2;1878:12;1874:22;1871:35;1868:128;;;1948:1;1978:3;1973;1966:16;1868:128;2018:1;2032:142;2046:3;2043:1;2040:10;2032:142;;;2142:10;;;2138:20;;2132:27;2112:13;;;2108:22;;2101:59;2058:10;;2032:142;;;2196:3;2193:1;2190:10;2187:93;;;2264:1;2259:2;2253:3;2246:5;2242:15;2238:24;2231:35;2187:93;-1:-1:-1;;2293:18:3;;-1:-1:-1;;1261:12:3;;;;2331;;;;1228:1125;;;2372:5;426:1957;-1:-1:-1;;;;;;;;;;426:1957:3:o;2388:127::-;2449:10;2444:3;2440:20;2437:1;2430:31;2480:4;2477:1;2470:15;2504:4;2501:1;2494:15;2520:232;2559:3;-1:-1:-1;;2580:17:3;;2577:140;;;2639:10;2634:3;2630:20;2627:1;2620:31;2674:4;2671:1;2664:15;2702:4;2699:1;2692:15;2577:140;-1:-1:-1;2744:1:3;2733:13;;2520:232::o;2757:380::-;2836:1;2832:12;;;;2879;;;2900:61;;2954:4;2946:6;2942:17;2932:27;;2900:61;3007:2;2999:6;2996:14;2976:18;2973:38;2970:161;;;3053:10;3048:3;3044:20;3041:1;3034:31;3088:4;3085:1;3078:15;3116:4;3113:1;3106:15;2970:161;;2757:380;;;:::o;:::-;153:4747:2;;;;;;",
  "sourcePath": "contracts/Ballot.sol",
  "type": "contract"
}